
==================== FINAL INTERFACE ====================
2016-09-13 19:40:44.120012 UTC

interface probe_6fbutt2CqsP9qLl4Poiwfy:Lib 7103
  interface hash: e66bf48e9735fbbd586ba72ec3323ffd
  ABI hash: 54b1f86f7e796623345dc42690264d33
  export-list hash: 6ce9b680ba27e533dd3286e4ce793d56
  orphan hash: c73e312b22c3e82f9fe06d128880a663
  flag hash: 0d0e8bf775f5cba7cce7221067c4042c
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.chord
  Lib.eqt
  Lib.farey
  Lib.polyRhythm
  Lib.rhythms
  Lib.rhythmsWithSync
  Lib.tones
module dependencies:
package dependencies: JuicyPixels-3.2.7.2@Juicy_FsUyw0EJkIqKIuj8ORojoT
                      QuickCheck-2.8.2@Quick_6TxL5Cx3o2p0HsyT59KWiD
                      StateVar-1.1.0.4@State_IOvB80WkYNkEizdt0JVpzy
                      active-0.2.0.10@activ_EndpnTck6Qn4ZBG7VTfRFy
                      adjunctions-4.3@adjun_HUA1si0oygHIohE6wWvtj8
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      ansi-wl-pprint-0.6.7.3@ansiw_KTAhiPa3RNI09mbeoAwSSX
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      async-2.1.0@async_KuqnF1GrhHK5nNp6Zzm3jy base-4.8.2.0
                      base64-bytestring-1.0.0.1@base6_AkCk8zInckjJsyQ4AIFHPN
                      base-orphans-0.5.4@baseo_0gFtKFBT26OGSKHmmdqdfx
                      bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      blaze-builder-0.4.0.2@blaze_5LQurmvTy7l9rPlWgPlNE4
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      bytes-0.15.2@bytes_LGwqVSlCJrR4BGoUsj8EWt
                      cereal-0.5.2.0@cerea_GKnWyxn5hRWK9xfCMeMEL8
                      colour-2.3.3@colou_4tkGkumXZDK9tS5HCSa7Y0
                      comonad-4.2.7.2@comon_5wEqfQVXg9MGfIPxSKfS4M
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      contravariant-1.4@contr_7gFjdZ6ciei9744gjZQMHp
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx
                      diagrams-solve-0.1.0.1@diagr_4QN76f31u5VGJm9TMFt1id
                      diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos
                      diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      distributive-0.5.0.2@distr_55SIdsoyihS4jXBaaVvPQX
                      dual-tree-0.2.0.9@dualt_5jNsABX0YwSIha1EAMeU6i
                      exceptions-0.8.3@excep_BEih2K3eMGTE4cg5iulra8
                      fail-4.9.0.0@fail_2xB1AvdW34sDm9N3JOe33G
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m
                      fingertree-0.1.1.0@finge_1lOqL113GSbGT54Xr1ttX9
                      free-4.12.4@free_D8pop1Lncn7BkE4zjJTjla
                      fsnotify-0.2.1@fsnot_6GshfYbGW9a0XQQFUIcEx3 ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I
                      hfsevents-0.1.6@hfsev_GV1CDMEJaKE6yriQq8fXZ2 integer-gmp-1.0.0.0
                      intervals-0.7.2@inter_CVqja9i5ZjWEnJ4aryb7v4
                      kan-extensions-4.2.3@kanex_8yLFa561sPQJZ5XPOmzMGi
                      lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if
                      linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv
                      lucid-2.9.6@lucid_HB98YTuafJo82fcOQnijha
                      lucid-svg-0.6.0.1@lucid_IfaODiCffQ9JIcJQYUi8er
                      mmorph-1.0.6@mmorp_42KUkOfzC6q3qCtAMiSHam
                      monoid-extras-0.4.2@monoi_H1bs9gF4pIcGpoc15tQgor
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      newtype-0.2@newty_Bn42BOEtLjZ0LahRn80jTb
                      optparse-applicative-0.12.1.0@optpa_FpNJ7fLofFNEy3rK4ZnBoD
                      prelude-extras-0.4.0.3@prelu_1gQpKVfMHul71LsAFgGRhv
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      profunctors-5.2@profu_LHFqrYSAR0z1HJQ4sjj1Mu
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      reflection-2.1.2@refle_Is9SiIf9zRHG2wDNDxPaS9
                      repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou
                      scientific-0.3.4.9@scien_1WVNjGUftkQ9QzH4DOM2n1
                      semigroupoids-5.0.1@semig_GRN7TOS9fx09tFw63gc4EK
                      semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1
                      split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6 template-haskell-2.10.0.0
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      tf-random-0.5@tfran_1eLmkn3WUnC8NZpPuDLGKF
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unix-compat-0.4.1.4@unixc_Km8uiabmElX5mrb8D4Fywe
                      unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu
orphans: active-0.2.0.10@activ_EndpnTck6Qn4ZBG7VTfRFy:Data.Active
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         base-orphans-0.5.4@baseo_0gFtKFBT26OGSKHmmdqdfx:Data.Orphans
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         colour-2.3.3@colou_4tkGkumXZDK9tS5HCSa7Y0:Data.Colour
         diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx:Diagrams.Backend.SVG.CmdLine
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Animation.Active
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.ThreeD.Types
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Trail
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Path
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Segment
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Types
         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Points
         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Types
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Instances
         monoid-extras-0.4.2@monoi_H1bs9gF4pIcGpoc15tQgor:Data.Monoid.MList
         reflection-2.1.2@refle_Is9SiIf9zRHG2wDNDxPaS9:Data.Reflection
         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Arbitrary
         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Operators.Reduction
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: JuicyPixels-3.2.7.2@Juicy_FsUyw0EJkIqKIuj8ORojoT:Codec.Picture.Tga
                         JuicyPixels-3.2.7.2@Juicy_FsUyw0EJkIqKIuj8ORojoT:Codec.Picture.Tiff
                         JuicyPixels-3.2.7.2@Juicy_FsUyw0EJkIqKIuj8ORojoT:Codec.Picture.Types
                         active-0.2.0.10@activ_EndpnTck6Qn4ZBG7VTfRFy:Data.Active
                         adjunctions-4.3@adjun_HUA1si0oygHIohE6wWvtj8:Data.Functor.Rep
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         base-4.8.2.0:GHC.TypeLits
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Biff
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Clown
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Flip
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Join
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Joker
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Product
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Sum
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Tannen
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Wrapped
                         bytes-0.15.2@bytes_LGwqVSlCJrR4BGoUsj8EWt:Data.Bytes.Get
                         bytes-0.15.2@bytes_LGwqVSlCJrR4BGoUsj8EWt:Data.Bytes.Signed
                         bytes-0.15.2@bytes_LGwqVSlCJrR4BGoUsj8EWt:Data.Bytes.VarInt
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx:Diagrams.Backend.SVG
                         diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx:Diagrams.Backend.SVG.CmdLine
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Angle
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Animation.Active
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Backend.CmdLine
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.BoundingBox
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Coordinates
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Direction
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Located
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Path
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Segment
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Size
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Tangent
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.ThreeD.Camera
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.ThreeD.Light
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.ThreeD.Shapes
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.ThreeD.Types
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Trail
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Attributes
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Image
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Path
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Segment.Bernstein
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Text
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Types
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Envelope
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Measure
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Names
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Points
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Query
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Style
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Trace
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Transform
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Types
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.V
                         intervals-0.7.2@inter_CVqja9i5ZjWEnJ4aryb7v4:Numeric.Interval.Kaucher
                         kan-extensions-4.2.3@kanex_8yLFa561sPQJZ5XPOmzMGi:Data.Functor.Yoneda
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.At
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Internal.Indexed
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Internal.Zoom
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Reified
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Tuple
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Wrapped
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Affine
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Plucker
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Quaternion
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V0
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V1
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V2
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V3
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V4
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         profunctors-5.2@profu_LHFqrYSAR0z1HJQ4sjj1Mu:Data.Profunctor.Rep
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Operators.Mapping
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.ByteString
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Cursored
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Delayed
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.ForeignPtr
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.HintInterleave
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.HintSmall
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Partitioned
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Unboxed
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Undefined
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Vector
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Slice
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.List.NonEmpty
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.Semigroup
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashSet
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
                         zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu:Codec.Compression.Zlib.Stream
import  -/  base-4.8.2.0:Control.Arrow ab7f126fed349de468f94ac777dc8f4e
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Function 6b13a8d3a5e3bd757a91434dce3fc7f3
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:Data.Tuple 012ad951a59a9d85fe1de36a2f012986
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Float e532d434ec2447d809887c0fca1d78a5
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  colour-2.3.3@colou_4tkGkumXZDK9tS5HCSa7Y0:Data.Colour.Internal c20506210de7efa28736509943f23e6a
import  -/  diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx:Diagrams.Backend.SVG c562a010d4595b18d96d53f74cf07048
import  -/  diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx:Diagrams.Backend.SVG.CmdLine dbe49f9e9d2cb2d4320daa55800596bc
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Attributes e945f2a5f87fb235562bae36a3c6bb4a
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Combinators 7b77613aefaf8597e8ee70feb2ce44b6
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Coordinates 7f387e4b397793d7c5397c5ee97f282a
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.CubicSpline 2f6846320e30ffa671b1d0d42e59c0a7
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Located f3c9207b3d0bc09ee24792b0842d6336
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Parametric 7634c31d349bf40bec0b69474240d46c
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Prelude 0f0b2fe832b1921709da84f6a857570f
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Segment 2b04359ef9a61229df01d2bb7ff95936
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Trail 4d5ca131a4b41262b2cda77b553bdef5
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TrailLike fb3426a9fbba5e2a34617c60350ba21c
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Attributes b3e78a4dd9a8d93e24a7556a777bd61a
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Combinators 03231dedce72c19a9bc778ea7b256eed
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Path bfcb360c51da34d703d00c4826347048
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Transform fb786e473269a475ce61f25b3d039d31
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Types 5b80bccbd13380ff61de84fba9aa6866
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Vector 1c596ab9358c7ea1c5e7f0a44ab251dc
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Util c1d249654ca2108c93e5f23664b382b3
import  -/  diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Types b26bfe70fb5690d8bf4d222cdc975e30
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Setter 7cb2279cdbd18e7424cc7b945ac52ae2
import  -/  linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Affine c4bd38b10598575abfa995e92f3479d0
import  -/  linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Metric b043a26170dabe6d32ee4f608e059c3a
import  -/  linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V2 08d35c0cfda723bf552ac2d085f0e2eb
import  -/  linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Vector c60d3353f143a6f7dc07e60f46ac356e
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa 0d2b929203adefea46e338c8d5c0d0e3
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Base 812b961d0b9a43cec848ee4c7e0ccd95
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Index 5b7546ca101c4e6a6ea5d84a7dca03a5
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Unboxed d7c1c117ff74dfb4245508d555a6a3ae
import  -/  semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.Semigroup 7e43d8b45f777a53523f0158b401b8aa
import  -/  split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE:Data.List.Split 487cc1966f0f25916f1ba58bdff4b0ee
import  -/  split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE:Data.List.Split.Internals ec8cf5264ec78ab060cadb7ee5b994f0
81bf61c8b289153c6f131b6c8dd9f51a
  $s!3 ::
    GHC.Classes.Eq
      (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Lib.$s!_$s$fEq:. -}
277d4e1eb33fbe1f65faf588b479ea77
  $s!_$s$fEq:. ::
    GHC.Classes.Eq
      (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
                  (Data.Array.Repa.Index.$fEq:._$c==
                     @ Data.Array.Repa.Index.Z
                     @ GHC.Types.Int
                     Data.Array.Repa.Index.$fEqZ
                     GHC.Classes.$fEqInt)
                  (Data.Array.Repa.Index.$fEq:._$c/=
                     @ Data.Array.Repa.Index.Z
                     @ GHC.Types.Int
                     Data.Array.Repa.Index.$fEqZ
                     GHC.Classes.$fEqInt) -}
a4d0a4f7164458e25442793dbcfff303
  $s!_$s$fShape:. ::
    Data.Array.Repa.Shape.Shape
      (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
                  Lib.$s!3
                  (Data.Array.Repa.Index.$fShape:._$crank
                     @ Data.Array.Repa.Index.Z
                     Lib.$s!3
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$czeroDim
                     @ Data.Array.Repa.Index.Z
                     Lib.$s!3
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$cunitDim
                     @ Data.Array.Repa.Index.Z
                     Lib.$s!3
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$cintersectDim
                     @ Data.Array.Repa.Index.Z
                     Lib.$s!3
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$caddDim
                     @ Data.Array.Repa.Index.Z
                     Lib.$s!3
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$csize
                     @ Data.Array.Repa.Index.Z
                     Lib.$s!3
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$csizeIsValid
                     @ Data.Array.Repa.Index.Z
                     Lib.$s!3
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$ctoIndex
                     @ Data.Array.Repa.Index.Z
                     Lib.$s!3
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$cfromIndex
                     @ Data.Array.Repa.Index.Z
                     Lib.$s!3
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$cinShapeRange
                     @ Data.Array.Repa.Index.Z
                     Lib.$s!3
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$clistOfShape
                     @ Data.Array.Repa.Index.Z
                     Lib.$s!3
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$cshapeOfList
                     @ Data.Array.Repa.Index.Z
                     Lib.$s!3
                     Data.Array.Repa.Index.$fShapeZ)
                  Lib.$s!_$s$fShape:._$cdeepSeq -}
ceaf79fd98587e4acacfe80ba0741b4f
  $s!_$s$fShape:._$cdeepSeq ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> a -> a
  {- Arity: 2, HasNoCafRefs, Strictness: <S(SS),1*U(1*H,1*H)><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a25
                   ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int
                   x1 :: a25 ->
                 case ds of wild { Data.Array.Repa.Index.:. sh1 n -> x1 }) -}
dc49b53dec3489bb3ae8b90fac4b2e98
  $s!_$slength ::
    Data.Vector.Unboxed.Base.Vector GHC.Types.Double -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(A,U,A)>m,
     Inline: [NEVER] -}
338f3cbb463a4970f33989791ce7bd7d
  $s$fFractionalV1 :: GHC.Num.Num (Linear.V2.V2 GHC.Types.Double)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fFractionalV2_$s$fNumV2 -}
c81da46a3c02582e609646a6558e9b14
  $s$fFractionalV2 ::
    GHC.Real.Fractional (Linear.V2.V2 GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V2.V2 GHC.Types.Double)
                  Lib.$s$fFractionalV1
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double
                     eta2 :: Linear.V2.V2 GHC.Types.Double ->
                   Linear.V2.$fAdditiveV2_$sliftA2
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     GHC.Float.$fFractionalDouble_$c/
                     eta1
                     eta2)
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double ->
                   case eta1 of wild { Linear.V2.V2 a25 b ->
                   case GHC.Float.$fFractionalDouble_$crecip
                          a25 of dt { GHC.Types.D# ipv ->
                   case GHC.Float.$fFractionalDouble_$crecip
                          b of dt1 { GHC.Types.D# ipv1 ->
                   Linear.V2.V2 @ GHC.Types.Double dt dt1 } } })
                  (\ eta1 :: GHC.Real.Rational ->
                   let {
                     a25 :: GHC.Types.Double
                     = case eta1 of wild { GHC.Real.:% n d ->
                       GHC.Float.rationalToDouble n d }
                   } in
                   Linear.V2.$WV2 @ GHC.Types.Double a25 a25) -}
e61fcf47a92e4771bdc5067432a35a76
  $s$fFractionalV2_$s$fNumV2 ::
    GHC.Num.Num (Linear.V2.V2 GHC.Types.Double)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V2.V2 GHC.Types.Double)
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double
                     eta2 :: Linear.V2.V2 GHC.Types.Double ->
                   Linear.V2.$fAdditiveV2_$sliftA2
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     GHC.Float.$fNumDouble_$c+
                     eta1
                     eta2)
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double
                     eta2 :: Linear.V2.V2 GHC.Types.Double ->
                   Linear.V2.$fAdditiveV2_$sliftA2
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     GHC.Float.$fNumDouble_$c-
                     eta1
                     eta2)
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double
                     eta2 :: Linear.V2.V2 GHC.Types.Double ->
                   Linear.V2.$fAdditiveV2_$sliftA2
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     GHC.Float.$fNumDouble_$c*
                     eta1
                     eta2)
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double ->
                   case eta1 of wild { Linear.V2.V2 a25 b ->
                   case GHC.Float.$fNumDouble_$cnegate a25 of dt { GHC.Types.D# ipv ->
                   case GHC.Float.$fNumDouble_$cnegate b of dt1 { GHC.Types.D# ipv1 ->
                   Linear.V2.V2 @ GHC.Types.Double dt dt1 } } })
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double ->
                   case eta1 of wild { Linear.V2.V2 a25 b ->
                   case GHC.Float.$fNumDouble_$cabs a25 of dt { GHC.Types.D# ipv ->
                   case GHC.Float.$fNumDouble_$cabs b of dt1 { GHC.Types.D# ipv1 ->
                   Linear.V2.V2 @ GHC.Types.Double dt dt1 } } })
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double ->
                   case eta1 of wild { Linear.V2.V2 a25 b ->
                   case GHC.Float.$fNumDouble_$csignum a25 of dt { GHC.Types.D# ipv ->
                   case GHC.Float.$fNumDouble_$csignum b of dt1 { GHC.Types.D# ipv1 ->
                   Linear.V2.V2 @ GHC.Types.Double dt dt1 } } })
                  (\ eta1 :: GHC.Integer.Type.Integer ->
                   let {
                     a25 :: GHC.Types.Double
                     = case GHC.Integer.Type.doubleFromInteger eta1 of wild { DEFAULT ->
                       GHC.Types.D# wild }
                   } in
                   Linear.V2.$WV2 @ GHC.Types.Double a25 a25) -}
1758762be473fc5cebd46f5bbe0e1d66
  $s$fMonoidQDiagram ::
    GHC.Base.Monoid
      (Diagrams.Core.Types.QDiagram
         b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ b.
                  @ (Diagrams.Core.Types.QDiagram
                       b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any)
                  (Diagrams.Core.Types.$fMonoidQDiagram_$cmempty
                     @ b
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                     Lib.$s$fMonoidQDiagram1
                     Data.Semigroup.$fSemigroupAny)
                  (Diagrams.Core.Types.$fMonoidQDiagram_$cmappend
                     @ b
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                     Lib.$s$fMonoidQDiagram1
                     Data.Semigroup.$fSemigroupAny)
                  (Diagrams.Core.Types.$fMonoidQDiagram_$cmconcat
                     @ b
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                     Lib.$s$fMonoidQDiagram1
                     Data.Semigroup.$fSemigroupAny) -}
510559d612b0486ebddb1909a5ee9bd1
  $s$fMonoidQDiagram1 ::
    Diagrams.Core.Envelope.OrderedField GHC.Types.Double
  {- Unfolding: (Diagrams.Core.Envelope.$fOrderedFields
                   @ GHC.Types.Double
                   GHC.Float.$fFloatingDouble
                   GHC.Classes.$fOrdDouble) -}
07696832b2ab7c5872755ef86218d040
  $s$fRenderablePathSVG ::
    Diagrams.Core.Types.Renderable
      (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double)
      Diagrams.Backend.SVG.SVG
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double)
                  @ Diagrams.Backend.SVG.SVG
                  Lib.$s$fRenderablePathSVG5
                  (Diagrams.Backend.SVG.$fRenderablePathSVG_$crender
                     @ GHC.Types.Double
                     Lib.$s$fRenderablePathSVG5
                     Lib.$s$fRenderablePathSVG1) -}
5dd189ed9bc6806ccdb1f2d7fc947694
  $s$fRenderablePathSVG1 ::
    Graphics.Rendering.SVG.SVGFloat GHC.Types.Double
  {- Strictness: m,
     Unfolding: ((GHC.Float.$fShowDouble,
                  Lib.$s$fRenderablePathSVG2)) -}
fe421fee5f9fc996c5e9a7ab17bc1366
  $s$fRenderablePathSVG2 ::
    Diagrams.Core.Types.TypeableFloat GHC.Types.Double
  {- Unfolding: (Diagrams.Core.Types.$fTypeableFloatn
                   @ GHC.Types.Double
                   Lib.$s$fRenderablePathSVG3
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <GHC.Types.Double>_N))
                   GHC.Float.$fRealFloatDouble) -}
f600d3ad171d7dda7c3769bc0bb38092
  $s$fRenderablePathSVG3 ::
    GHC.Prim.Proxy# GHC.Types.Double -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# GHC.Types.Double ->
                 Lib.$s$fRenderablePathSVG4) -}
f12055bce0fea4a502fb36aba85ecc26
  $s$fRenderablePathSVG4 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 8705313363352784917
                   __word 10768904120299974647
                   Lib.$s$fRenderablePathSVG_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
fe3c08c8d37a44da1b3aa8499de280c5
  $s$fRenderablePathSVG5 ::
    Diagrams.Core.Transform.Transformable
      (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double)
  {- Arity: 1, Strictness: <L,U(U(U,U),U,U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fRenderablePathSVG6
                  `cast`
                (Sym (Diagrams.Core.Transform.NTCo:Transformable[0]
                          <Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double>_N)) -}
14fb8e9e24b69543fd2004a7773b7a14
  $s$fRenderablePathSVG6 ::
    Diagrams.Core.Transform.Transformation
      (Diagrams.Core.V.V
         (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double))
      (Diagrams.Core.V.N
         (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double))
    -> Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double
  {- Arity: 1, Strictness: <L,U(U(U,U),U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ w3 :: Diagrams.Core.Transform.Transformation
                           (Diagrams.Core.V.V
                              (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double))
                           (Diagrams.Core.V.N
                              (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double)) ->
                 Diagrams.Path.$w$ctransform
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1
                   w3) -}
0de044c36a94130ceaafd7fa7b3a3900
  $s$fRenderablePathSVG_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 8705313363352784917
                   __word 10768904120299974647
                   Lib.$s$fRenderablePathSVG_ww2
                   Lib.$s$fRenderablePathSVG_ww3
                   Lib.$s$fRenderablePathSVG_ww4) -}
362f7cb453af8c761af5e48a37a91b0d
  $s$fRenderablePathSVG_ww2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "ghc-prim"#) -}
a031ed37a4b53a1fd9def807cd617a2e
  $s$fRenderablePathSVG_ww3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "GHC.Types"#) -}
5e2d74e9ca8615e36cda42762021c4c9
  $s$fRenderablePathSVG_ww4 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "Double"#) -}
3e46e955c4e41bcc770799fe081841d1
  $s$fSemigroupQDiagram ::
    Data.Semigroup.Semigroup
      (Diagrams.Core.Types.QDiagram
         b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ b.
                  @ (Diagrams.Core.Types.QDiagram
                       b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any)
                  (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                     @ b
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                     Lib.$s$fMonoidQDiagram1
                     Data.Semigroup.$fSemigroupAny)
                  (Diagrams.Core.Types.$fSemigroupQDiagram_$csconcat
                     @ b
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                     Lib.$s$fMonoidQDiagram1
                     Data.Semigroup.$fSemigroupAny)
                  (Lib.$s$fSemigroupQDiagram_$s$fSemigroupQDiagram_$cstimes @ b) -}
56b893bca04b7e96c97b573307d07440
  $s$fSemigroupQDiagram_$s$fSemigroupQDiagram_$cstimes ::
    GHC.Real.Integral b1 =>
    b1
    -> Diagrams.Core.Types.QDiagram
         b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
  {- Arity: 3,
     Strictness: <S(SLLLLLLLL),U(U,U,C(C1(U)),C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ b
                   @ b1
                   $dIntegral :: GHC.Real.Integral b1
                   eta1 :: b1
                   eta2 :: Diagrams.Core.Types.QDiagram
                             b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any ->
                 let {
                   $dReal :: GHC.Real.Real b1 = GHC.Real.$p1Integral @ b1 $dIntegral
                 } in
                 case GHC.Classes.<=
                        @ b1
                        (GHC.Real.$p2Real @ b1 $dReal)
                        eta1
                        (GHC.Num.fromInteger
                           @ b1
                           (GHC.Real.$p1Real @ b1 $dReal)
                           __integer 0) of wild {
                   GHC.Types.False
                   -> let {
                        $dReal1 :: GHC.Real.Real b1 = GHC.Real.$p1Integral @ b1 $dIntegral
                      } in
                      let {
                        $dEnum :: GHC.Enum.Enum b1 = GHC.Real.$p2Integral @ b1 $dIntegral
                      } in
                      let {
                        a31 :: GHC.Classes.Ord b1 = GHC.Real.$p2Real @ b1 $dReal1
                      } in
                      let {
                        $dEq :: GHC.Classes.Eq b1 = GHC.Classes.$p1Ord @ b1 a31
                      } in
                      let {
                        $dNum :: GHC.Num.Num b1 = GHC.Real.$p1Real @ b1 $dReal1
                      } in
                      letrec {
                        f2 :: Diagrams.Core.Types.QDiagram
                                b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                              -> b1
                              -> Diagrams.Core.Types.QDiagram
                                   b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                          {- Arity: 2 -}
                        = \ x1 :: Diagrams.Core.Types.QDiagram
                                    b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                            y :: b1 ->
                          case GHC.Real.even @ b1 $dIntegral y of wild1 {
                            GHC.Types.False
                            -> case GHC.Classes.==
                                      @ b1
                                      $dEq
                                      y
                                      (GHC.Num.fromInteger @ b1 $dNum __integer 1) of wild2 {
                                 GHC.Types.False
                                 -> let {
                                      $dReal2 :: GHC.Real.Real b1
                                      = GHC.Real.$p1Integral @ b1 $dIntegral
                                    } in
                                    let {
                                      $dEnum1 :: GHC.Enum.Enum b1
                                      = GHC.Real.$p2Integral @ b1 $dIntegral
                                    } in
                                    let {
                                      a32 :: GHC.Classes.Ord b1 = GHC.Real.$p2Real @ b1 $dReal2
                                    } in
                                    let {
                                      $dEq1 :: GHC.Classes.Eq b1 = GHC.Classes.$p1Ord @ b1 a32
                                    } in
                                    let {
                                      $dNum1 :: GHC.Num.Num b1 = GHC.Real.$p1Real @ b1 $dReal2
                                    } in
                                    letrec {
                                      g :: Diagrams.Core.Types.QDiagram
                                             b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                                           -> b1
                                           -> Diagrams.Core.Types.QDiagram
                                                b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                                           -> Diagrams.Core.Types.QDiagram
                                                b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                                        {- Arity: 3 -}
                                      = \ x2 :: Diagrams.Core.Types.QDiagram
                                                  b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                                          y1 :: b1
                                          z1 :: Diagrams.Core.Types.QDiagram
                                                  b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any ->
                                        case GHC.Real.even @ b1 $dIntegral y1 of wild3 {
                                          GHC.Types.False
                                          -> case GHC.Classes.==
                                                    @ b1
                                                    $dEq1
                                                    y1
                                                    (GHC.Num.fromInteger
                                                       @ b1
                                                       $dNum1
                                                       __integer 1) of wild4 {
                                               GHC.Types.False
                                               -> g (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                                       @ b
                                                       @ Linear.V2.V2
                                                       @ GHC.Types.Double
                                                       @ Data.Monoid.Any
                                                       Linear.V2.$fMetricV2
                                                       Lib.$s$fMonoidQDiagram1
                                                       Data.Semigroup.$fSemigroupAny
                                                       x2
                                                       x2)
                                                    (GHC.Real.quot
                                                       @ b1
                                                       $dIntegral
                                                       (GHC.Enum.pred @ b1 $dEnum1 y1)
                                                       (GHC.Num.fromInteger
                                                          @ b1
                                                          $dNum1
                                                          __integer 2))
                                                    (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                                       @ b
                                                       @ Linear.V2.V2
                                                       @ GHC.Types.Double
                                                       @ Data.Monoid.Any
                                                       Linear.V2.$fMetricV2
                                                       Lib.$s$fMonoidQDiagram1
                                                       Data.Semigroup.$fSemigroupAny
                                                       x2
                                                       z1)
                                               GHC.Types.True
                                               -> Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                                    @ b
                                                    @ Linear.V2.V2
                                                    @ GHC.Types.Double
                                                    @ Data.Monoid.Any
                                                    Linear.V2.$fMetricV2
                                                    Lib.$s$fMonoidQDiagram1
                                                    Data.Semigroup.$fSemigroupAny
                                                    x2
                                                    z1 }
                                          GHC.Types.True
                                          -> g (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                                  @ b
                                                  @ Linear.V2.V2
                                                  @ GHC.Types.Double
                                                  @ Data.Monoid.Any
                                                  Linear.V2.$fMetricV2
                                                  Lib.$s$fMonoidQDiagram1
                                                  Data.Semigroup.$fSemigroupAny
                                                  x2
                                                  x2)
                                               (GHC.Real.quot
                                                  @ b1
                                                  $dIntegral
                                                  y1
                                                  (GHC.Num.fromInteger @ b1 $dNum1 __integer 2))
                                               z1 }
                                    } in
                                    g (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                         @ b
                                         @ Linear.V2.V2
                                         @ GHC.Types.Double
                                         @ Data.Monoid.Any
                                         Linear.V2.$fMetricV2
                                         Lib.$s$fMonoidQDiagram1
                                         Data.Semigroup.$fSemigroupAny
                                         x1
                                         x1)
                                      (GHC.Real.quot
                                         @ b1
                                         $dIntegral
                                         (GHC.Enum.pred @ b1 $dEnum y)
                                         (GHC.Num.fromInteger @ b1 $dNum __integer 2))
                                      x1
                                 GHC.Types.True -> x1 }
                            GHC.Types.True
                            -> f2
                                 (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                    @ b
                                    @ Linear.V2.V2
                                    @ GHC.Types.Double
                                    @ Data.Monoid.Any
                                    Linear.V2.$fMetricV2
                                    Lib.$s$fMonoidQDiagram1
                                    Data.Semigroup.$fSemigroupAny
                                    x1
                                    x1)
                                 (GHC.Real.quot
                                    @ b1
                                    $dIntegral
                                    y
                                    (GHC.Num.fromInteger @ b1 $dNum __integer 2)) }
                      } in
                      f2 eta2 eta1
                   GHC.Types.True
                   -> GHC.Err.error
                        @ (Diagrams.Core.Types.QDiagram
                             b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any)
                        (GHC.Base.build
                           @ GHC.Types.Char
                           (\ @ b2 ->
                            GHC.CString.unpackFoldrCString#
                              @ b2
                              "stimes: positive multiplier expected"#)) }) -}
d83de65b31dcfd922a99113126bc1178
  $s$fShape:._$caddDim ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*H,U(U))><S(SS),1*U(1*H,U(U))>m,
     Inline: INLINE[1] (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int
                   ds1 :: Data.Array.Repa.Index.Z
                          Data.Array.Repa.Index.:. GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. sh1 n1 ->
                 case ds1 of wild1 { Data.Array.Repa.Index.:. sh2 n2 ->
                 case n1 of wild2 { GHC.Types.I# x1 ->
                 case n2 of wild3 { GHC.Types.I# y ->
                 Data.Array.Repa.Index.:.
                   @ Data.Array.Repa.Index.Z
                   @ GHC.Types.Int
                   Data.Array.Repa.Index.Z
                   (GHC.Types.I# (GHC.Prim.+# x1 y)) } } } }) -}
f58db56bb16406bbd5701bf81ea4fb06
  $s$fShape:._$cfromIndex ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> GHC.Types.Int
    -> Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*H,1*H)><S,1*U(U)>m,
     Inline: INLINE[1] (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int
                   n :: GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. ds1 d ->
                 case n of dt1 { GHC.Types.I# ipv ->
                 Data.Array.Repa.Index.:.
                   @ Data.Array.Repa.Index.Z
                   @ GHC.Types.Int
                   Data.Array.Repa.Index.Z
                   dt1 } }) -}
31a1dc0a7973c5c59235d2730de1fa65
  $s$fShape:._$cinShapeRange ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*H,U(U))><S(SS),1*U(1*H,U(U))><S(SS),1*U(1*H,U(U))>,
     Inline: INLINE[1] (sat-args=3),
     Unfolding: InlineRule (3, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int
                   ds1 :: Data.Array.Repa.Index.Z
                          Data.Array.Repa.Index.:. GHC.Types.Int
                   ds2 :: Data.Array.Repa.Index.Z
                          Data.Array.Repa.Index.:. GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. zs z ->
                 case ds1 of wild1 { Data.Array.Repa.Index.:. sh1 n1 ->
                 case ds2 of wild2 { Data.Array.Repa.Index.:. sh2 n2 ->
                 case n2 of wild3 { GHC.Types.I# x1 ->
                 case z of wild4 { GHC.Types.I# y ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# x1 y) of wild5 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case n1 of wild6 { GHC.Types.I# y1 ->
                      GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# x1 y1) } } } } } } }) -}
982f42b93797c42d562e97e5a9e1f3d4
  $s$fShape:._$cintersectDim ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*H,U(U))><S(SS),1*U(1*H,U(U))>m,
     Inline: INLINE[1] (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int
                   ds1 :: Data.Array.Repa.Index.Z
                          Data.Array.Repa.Index.:. GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. sh1 n1 ->
                 case ds1 of wild1 { Data.Array.Repa.Index.:. sh2 n2 ->
                 case n1 of wild2 { GHC.Types.I# x1 ->
                 case n2 of wild3 { GHC.Types.I# y1 ->
                 case case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# x1 y1) of wild4 {
                        GHC.Types.False -> wild3
                        GHC.Types.True -> wild2 } of dt1 { GHC.Types.I# ipv ->
                 Data.Array.Repa.Index.:.
                   @ Data.Array.Repa.Index.Z
                   @ GHC.Types.Int
                   Data.Array.Repa.Index.Z
                   dt1 } } } } }) -}
9ec497fcc529f0c2b3e95579f2ab2c91
  $s$fShape:._$crank ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*H,1*H)>m,
     Inline: INLINE[1] (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. sh1 ds1 ->
                 GHC.Types.I# 1 }) -}
0d2e219f1242097d0ea6c51839b3d7fa
  $s$fShape:._$csize ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*H,U(U))>,
     Inline: INLINE[1] (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. sh1 n -> n }) -}
bf718caba03ecf1371be5e1819a86e2b
  $s$fShape:._$csizeIsValid ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*H,U(U))>,
     Inline: INLINE[1] (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. sh1 n ->
                 case n of wild3 { GHC.Types.I# x1 ->
                 case GHC.Real.$fIntegralInt_$cdiv
                        GHC.Base.maxInt
                        (GHC.Types.I# 1) of wild4 { GHC.Types.I# y ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# x1 y) } } }) -}
e57837c2a9c1156b94308740c57d7f15
  $s$fShape:._$ctoIndex ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*H,1*H)><S(SS),1*U(1*H,U(U))>,
     Inline: INLINE[1] (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int
                   ds1 :: Data.Array.Repa.Index.Z
                          Data.Array.Repa.Index.:. GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. sh1 sh2 ->
                 case ds1 of wild1 { Data.Array.Repa.Index.:. sh1' sh2' ->
                 sh2' } }) -}
d3689f2454e0bba67c13c98c05f6faa8
  $s$fTargetUe ::
    Data.Array.Repa.Eval.Target.Target
      Data.Array.Repa.Repr.Unboxed.U GHC.Types.Double
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Data.Array.Repa.Repr.Unboxed.U
                  @ GHC.Types.Double
                  (Data.Array.Repa.Repr.Unboxed.$fTargetUe_$cnewMVec
                     @ GHC.Types.Double
                     Data.Vector.Unboxed.Base.$fUnboxDouble)
                  Lib.$s$fTargetUe_$s$fTargetUe_$cunsafeWriteMVec
                  Lib.$s$fTargetUe_$s$fTargetUe_$cunsafeFreezeMVec
                  Lib.$s$fTargetUe_$s$fTargetUe_$cdeepSeqMVec
                  (Data.Array.Repa.Repr.Unboxed.$fTargetUe_$ctouchMVec
                     @ GHC.Types.Double
                     Data.Vector.Unboxed.Base.$fUnboxDouble) -}
7ce11f22f0c616fa797494c1916ed68a
  $s$fTargetUe_$s$fTargetUe_$cdeepSeqMVec ::
    Data.Array.Repa.Eval.Target.MVec
      Data.Array.Repa.Repr.Unboxed.U GHC.Types.Double
    -> a -> a
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(1*U)><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a25
                   ds :: Data.Array.Repa.Eval.Target.MVec
                           Data.Array.Repa.Repr.Unboxed.U GHC.Types.Double
                   x1 :: a25 ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Repa.Repr.Unboxed.TFCo:R:MVecUe[0]) <GHC.Types.Double>_N) of wild { Data.Array.Repa.Repr.Unboxed.UMVec vec ->
                 case vec of vec1 { DEFAULT -> x1 } }) -}
7df426aeb06a187ef7200fd5c6aa220c
  $s$fTargetUe_$s$fTargetUe_$cunsafeFreezeMVec ::
    sh
    -> Data.Array.Repa.Eval.Target.MVec
         Data.Array.Repa.Repr.Unboxed.U GHC.Types.Double
    -> GHC.Types.IO
         (Data.Array.Repa.Base.Array
            Data.Array.Repa.Repr.Unboxed.U sh GHC.Types.Double)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U><S(S),1*U(1*U(U,U,U))><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ sh
                   sh1 :: sh
                   ds :: Data.Array.Repa.Eval.Target.MVec
                           Data.Array.Repa.Repr.Unboxed.U GHC.Types.Double
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Repa.Repr.Unboxed.TFCo:R:MVecUe[0]) <GHC.Types.Double>_N) of wild { Data.Array.Repa.Repr.Unboxed.UMVec mvec ->
                 (GHC.Base.bindIO
                    @ (Data.Vector.Unboxed.Base.Vector GHC.Types.Double)
                    @ (Data.Array.Repa.Base.Array
                         Data.Array.Repa.Repr.Unboxed.U sh GHC.Types.Double)
                    (GHC.Base.$fFunctorIO_$cfmap
                       @ (Data.Vector.Primitive.Vector GHC.Types.Double)
                       @ (Data.Vector.Unboxed.Base.Vector GHC.Types.Double)
                       (\ tpl :: Data.Vector.Primitive.Vector GHC.Types.Double -> tpl)
                         `cast`
                       (<Data.Vector.Primitive.Vector GHC.Types.Double>_R
                        ->_R Trans
                                 (Sym (Data.Vector.Unboxed.Base.NTCo:R:VectorDouble[0]))
                                 (Sub (Sym (Data.Vector.Unboxed.Base.TFCo:R:VectorDouble[0]))))
                       (case mvec
                               `cast`
                             (Trans
                                  (Data.Vector.Unboxed.Base.MVector
                                     (Sym (Control.Monad.Primitive.TFCo:R:PrimStateIO[0]))
                                     <GHC.Types.Double>_N)_R
                                  (Trans
                                       (Sub (Data.Vector.Unboxed.Base.TFCo:R:MVectorsDouble[0]
                                                 <Control.Monad.Primitive.PrimState
                                                    GHC.Types.IO>_N))
                                       (Data.Vector.Unboxed.Base.NTCo:R:MVectorsDouble[0]
                                            <Control.Monad.Primitive.PrimState
                                               GHC.Types.IO>_N))) of wild1 { Data.Vector.Primitive.Mutable.MVector dt dt1 dt2 ->
                        GHC.Base.$fFunctorIO_$cfmap
                          @ Data.Primitive.ByteArray.ByteArray
                          @ (Data.Vector.Primitive.Vector GHC.Types.Double)
                          (Data.Vector.Primitive.$WVector
                             @ GHC.Types.Double
                             (GHC.Types.I# dt)
                             (GHC.Types.I# dt1))
                          (\ s# :: GHC.Prim.State#
                                     (Control.Monad.Primitive.PrimState GHC.Types.IO)[OneShot] ->
                           case GHC.Prim.unsafeFreezeByteArray#
                                  @ (Control.Monad.Primitive.PrimState GHC.Types.IO)
                                  dt2
                                  s# of ds1 { (#,#) ipv ipv1 ->
                           (# ipv, Data.Primitive.ByteArray.ByteArray ipv1 #) })
                            `cast`
                          (Trans
                               ((GHC.Prim.State#
                                   (Control.Monad.Primitive.TFCo:R:PrimStateIO[0]))_R
                                ->_R ((# (GHC.Prim.State#
                                            (Control.Monad.Primitive.TFCo:R:PrimStateIO[0]))_R,
                                         <Data.Primitive.ByteArray.ByteArray>_R #))_R)
                               (Sym (GHC.Types.NTCo:IO[0]
                                         <Data.Primitive.ByteArray.ByteArray>_R))) }))
                    (\ vec :: Data.Vector.Unboxed.Base.Vector GHC.Types.Double ->
                     GHC.Base.$
                       @ (Data.Array.Repa.Base.Array
                            Data.Array.Repa.Repr.Unboxed.U sh GHC.Types.Double)
                       @ (GHC.Types.IO
                            (Data.Array.Repa.Base.Array
                               Data.Array.Repa.Repr.Unboxed.U sh GHC.Types.Double))
                       (GHC.Base.returnIO
                          @ (Data.Array.Repa.Base.Array
                               Data.Array.Repa.Repr.Unboxed.U sh GHC.Types.Double))
                       (Data.Array.Repa.Repr.Unboxed.$WAUnboxed
                          @ GHC.Types.Double
                          @ sh
                          sh1
                          vec)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <Data.Array.Repa.Base.Array
                         Data.Array.Repa.Repr.Unboxed.U sh GHC.Types.Double>_R)
                   eta1 })
                  `cast`
                (forall sh.
                 <sh>_R
                 ->_R <Data.Array.Repa.Eval.Target.MVec
                         Data.Array.Repa.Repr.Unboxed.U GHC.Types.Double>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Data.Array.Repa.Base.Array
                                  Data.Array.Repa.Repr.Unboxed.U sh GHC.Types.Double>_R)) -}
1413d81f906a49143abb7b9e710dc6de
  $s$fTargetUe_$s$fTargetUe_$cunsafeWriteMVec ::
    Data.Array.Repa.Eval.Target.MVec
      Data.Array.Repa.Repr.Unboxed.U GHC.Types.Double
    -> GHC.Types.Int -> GHC.Types.Double -> GHC.Types.IO ()
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U(U,A,U))><S,1*U(U)><S,1*U(U)><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Repa.Eval.Target.MVec
                           Data.Array.Repa.Repr.Unboxed.U GHC.Types.Double
                   ix :: GHC.Types.Int
                   eta1 :: GHC.Types.Double ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Repa.Repr.Unboxed.TFCo:R:MVecUe[0]) <GHC.Types.Double>_N) of wild { Data.Array.Repa.Repr.Unboxed.UMVec v ->
                 GHC.Base.$
                   @ (GHC.Types.IO ())
                   @ (GHC.Types.IO ())
                   (Data.Vector.Internal.Check.checkIndex
                      @ (GHC.Types.IO ())
                      (GHC.Base.build
                         @ GHC.Types.Char
                         (\ @ b ->
                          GHC.CString.unpackFoldrCString#
                            @ b
                            "./Data/Vector/Generic/Mutable.hs"#))
                      (GHC.Types.I# 728)
                      Data.Vector.Internal.Check.Unsafe
                      (GHC.Base.build
                         @ GHC.Types.Char
                         (\ @ b -> GHC.CString.unpackFoldrCString# @ b "unsafeWrite"#))
                      ix
                      (Data.Vector.Unboxed.Base.$fMVectorMVectorDouble2
                         @ (Control.Monad.Primitive.PrimState GHC.Types.IO)
                         v `cast`
                         (Trans
                              (Data.Vector.Unboxed.Base.MVector
                                 (Sym (Control.Monad.Primitive.TFCo:R:PrimStateIO[0]))
                                 <GHC.Types.Double>_N)_R
                              (Trans
                                   (Sub (Data.Vector.Unboxed.Base.TFCo:R:MVectorsDouble[0]
                                             <Control.Monad.Primitive.PrimState GHC.Types.IO>_N))
                                   (Data.Vector.Unboxed.Base.NTCo:R:MVectorsDouble[0]
                                        <Control.Monad.Primitive.PrimState GHC.Types.IO>_N)))))
                   (case v `cast`
                         (Trans
                              (Data.Vector.Unboxed.Base.MVector
                                 (Sym (Control.Monad.Primitive.TFCo:R:PrimStateIO[0]))
                                 <GHC.Types.Double>_N)_R
                              (Trans
                                   (Sub (Data.Vector.Unboxed.Base.TFCo:R:MVectorsDouble[0]
                                             <Control.Monad.Primitive.PrimState GHC.Types.IO>_N))
                                   (Data.Vector.Unboxed.Base.NTCo:R:MVectorsDouble[0]
                                        <Control.Monad.Primitive.PrimState
                                           GHC.Types.IO>_N))) of wild1 { Data.Vector.Primitive.Mutable.MVector dt dt1 dt2 ->
                    case GHC.Num.$fNumInt_$c+
                           (GHC.Types.I# dt)
                           ix of wild2 { GHC.Types.I# i# ->
                    (\ s# :: GHC.Prim.State#
                               (Control.Monad.Primitive.PrimState GHC.Types.IO)[OneShot] ->
                     case eta1 of wild3 { GHC.Types.D# x# ->
                     case GHC.Prim.writeDoubleArray#
                            @ (Control.Monad.Primitive.PrimState GHC.Types.IO)
                            dt2
                            i#
                            x#
                            s# of s'# { DEFAULT ->
                     (# s'#, GHC.Tuple.() #) } })
                      `cast`
                    (Trans
                         ((GHC.Prim.State#
                             (Control.Monad.Primitive.TFCo:R:PrimStateIO[0]))_R
                          ->_R ((# (GHC.Prim.State#
                                      (Control.Monad.Primitive.TFCo:R:PrimStateIO[0]))_R,
                                   <()>_R #))_R)
                         (Sym (GHC.Types.NTCo:IO[0] <()>_R))) } }) }) -}
85f66cfbb0e6b32ba9be82090bd14ce8
  $s$fTrailLikeLocated ::
    Diagrams.TrailLike.TrailLike
      (Diagrams.Located.Located
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Diagrams.Located.Located
                       (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                  Linear.V2.$fMetricV2
                    `cast`
                  (Linear.Metric.Metric
                     (Trans
                          (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                                    <Linear.V2.V2>_N <GHC.Types.Double>_N))
                          (Sym (Diagrams.Located.TFCo:R:VLocated[0]
                                    <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N))))_R
                  Lib.$s$fMonoidQDiagram1
                    `cast`
                  (Diagrams.Core.Envelope.OrderedField
                     (Trans
                          (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                    <Linear.V2.V2>_N <GHC.Types.Double>_N))
                          (Sym (Diagrams.Located.TFCo:R:NLocated[0]
                                    <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N))))_R
                  Lib.$s$fTrailLikeLocated1 -}
dff139025f80165d1a8b032818192469
  $s$fTrailLikeLocated1 ::
    Diagrams.Located.Located
      (Diagrams.Trail.Trail
         (Diagrams.Core.V.V
            (Diagrams.Located.Located
               (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))
         (Diagrams.Core.V.N
            (Diagrams.Located.Located
               (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))))
    -> Diagrams.Located.Located
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(1*U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ t1 :: Diagrams.Located.Located
                           (Diagrams.Trail.Trail
                              (Diagrams.Core.V.V
                                 (Diagrams.Located.Located
                                    (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))
                              (Diagrams.Core.V.N
                                 (Diagrams.Located.Located
                                    (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))) ->
                 Diagrams.Located.Loc
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   (Diagrams.Located.loc
                      @ (Diagrams.Trail.Trail
                           (Diagrams.Core.V.V
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                           (Diagrams.Core.V.N
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))
                      t1
                        `cast`
                      (Diagrams.Located.Located
                         (Diagrams.Trail.Trail
                            (Diagrams.Located.TFCo:R:VLocated[0]
                                 <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)
                            (Diagrams.Located.TFCo:R:NLocated[0]
                                 <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N))_N)_R)
                     `cast`
                   (Linear.Affine.Point
                      (Sub (Diagrams.Trail.TFCo:R:VTrail[0]
                                <Diagrams.Core.V.V
                                   (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)>_N
                                <Diagrams.Core.V.N
                                   (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)>_N))
                      (Diagrams.Trail.TFCo:R:NTrail[0]
                           <Diagrams.Core.V.V
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)>_N
                           <Diagrams.Core.V.N
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)>_N))_R
                   (Diagrams.Located.unLoc
                      @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                      t1
                        `cast`
                      (Diagrams.Located.Located
                         (Diagrams.Trail.Trail
                            (Trans
                                 (Diagrams.Located.TFCo:R:VLocated[0]
                                      <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)
                                 (Diagrams.Trail.TFCo:R:VTrail[0]
                                      <Linear.V2.V2>_N <GHC.Types.Double>_N))
                            (Trans
                                 (Diagrams.Located.TFCo:R:NLocated[0]
                                      <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)
                                 (Diagrams.Trail.TFCo:R:NTrail[0]
                                      <Linear.V2.V2>_N <GHC.Types.Double>_N)))_N)_R)) -}
dc10ab891a51cb62ec70021687727bd7
  $s$fTrailLikeTrail ::
    Diagrams.TrailLike.TrailLike
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                  Linear.V2.$fMetricV2
                    `cast`
                  (Linear.Metric.Metric
                     (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                               <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                  Lib.$s$fMonoidQDiagram1
                    `cast`
                  (Diagrams.Core.Envelope.OrderedField
                     (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                               <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                  (Diagrams.TrailLike.$fTrailLikeTrail_$ctrailLike
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     Linear.V2.$fMetricV2
                       `cast`
                     (Linear.Metric.Metric
                        (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                                  <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                     Lib.$s$fMonoidQDiagram1
                       `cast`
                     (Diagrams.Core.Envelope.OrderedField
                        (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                  <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                     Linear.V2.$fMetricV2
                     Lib.$s$fMonoidQDiagram1) -}
6639304588bf79b6ad4ec9eb4b6b635a
  $satParam10 ::
    Diagrams.Core.V.N
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    ~ GHC.Types.Double
  {- Unfolding: (Diagrams.Core.V.$p2InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam5) -}
e604b3eb2d67c9dd9e86674dcadc1bcf
  $satParam3 ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.V.N
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    -> Diagrams.Parametric.Codomain
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
         (Diagrams.Core.V.N
            (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
  {- Unfolding: (Diagrams.Trail.$fParametricTrail_$catParam
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1
                   GHC.Float.$fRealDouble) -}
50a6991dc7cfa1961cdb39f9008adf67
  $satParam4 ::
    Diagrams.Core.V.V
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    ~ Linear.V2.V2
  {- Unfolding: (Diagrams.Core.V.$p1InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam5) -}
e2919b8aa2c51b79de318015ad1d4e75
  $satParam5 ::
    Diagrams.Core.V.InSpace
      Linear.V2.V2
      GHC.Types.Double
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
  {- Unfolding: (Diagrams.Core.V.$fInSpacevna
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam7
                   Lib.$satParam6
                   Linear.V2.$fAdditiveV2
                   GHC.Float.$fNumDouble) -}
3526e42dbe7141f20c6a6d55c8642a90
  $satParam6 ::
    Diagrams.Core.V.N
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    ~ GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Diagrams.Core.V.N
                        (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                   @ GHC.Types.Double
                   @~ (Diagrams.Trail.TFCo:R:NTrail[0]
                           <Linear.V2.V2>_N <GHC.Types.Double>_N)) -}
837845e0d424737f37ce3ded3e300f1f
  $satParam7 ::
    Diagrams.Core.V.V
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    ~ Linear.V2.V2
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ (* -> *)
                   @ (Diagrams.Core.V.V
                        (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                   @ Linear.V2.V2
                   @~ (Diagrams.Trail.TFCo:R:VTrail[0]
                           <Linear.V2.V2>_N <GHC.Types.Double>_N)) -}
e85a1d0eca23ce4aa339a23f986438eb
  $satParam8 :: GHC.Num.Num GHC.Types.Double
  {- Unfolding: (Diagrams.Core.V.$p4InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam5) -}
2b6a02e67247332f3bf88fb15a0c5790
  $satParam9 :: Linear.Vector.Additive Linear.V2.V2
  {- Unfolding: (Diagrams.Core.V.$p3InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam5) -}
d98f19927454922ec9086ffce39adfe0
  $slc2 ::
    Diagrams.Core.Style.Style
      (Diagrams.Core.V.V
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.B
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
      (Diagrams.Core.V.N
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.B
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Core.Types.$fHasStyleQDiagram_$capplyStyle
                   @ Diagrams.Backend.SVG.B
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1
                   Data.Semigroup.$fSemigroupAny) -}
c8a267a610c57ba5b6126848703ab4da
  $slc4 ::
    Diagrams.Core.V.N
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
    ~ GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Diagrams.Core.V.N
                        (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.SVG
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any))
                   @ GHC.Types.Double
                   @~ (Diagrams.Core.Types.TFCo:R:NQDiagram[0]
                           <Diagrams.Backend.SVG.SVG>_N
                           <Linear.V2.V2>_N
                           <GHC.Types.Double>_N
                           <Data.Monoid.Any>_N)) -}
9785a750ebb9c9aadb049813e0595e51
  $slc5 ::
    Diagrams.Core.V.V
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
    ~ Linear.V2.V2
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ (* -> *)
                   @ (Diagrams.Core.V.V
                        (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.SVG
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any))
                   @ Linear.V2.V2
                   @~ (Diagrams.Core.Types.TFCo:R:VQDiagram[0]
                           <Diagrams.Backend.SVG.SVG>_N
                           <Linear.V2.V2>_N
                           <GHC.Types.Double>_N
                           <Data.Monoid.Any>_N)) -}
2aa5b342cec02eb689d372cb7ffb3e3f
  $slc_$dInSpace ::
    Diagrams.Core.V.InSpace
      Linear.V2.V2
      GHC.Types.Double
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
  {- Unfolding: (Diagrams.Core.V.$fInSpacevna
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$slc5
                   Lib.$slc4
                   Linear.V2.$fAdditiveV2
                   GHC.Float.$fNumDouble) -}
b2bb73362d5b0f4075ee6957b300c473
  $sunitX :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (let {
                   a25 :: GHC.Types.Double = GHC.Types.D# 0.0
                 } in
                 (Data.Functor.<$>
                    @ GHC.Types.Double
                    @ (Linear.V2.V2 GHC.Types.Double)
                    @ Data.Functor.Identity.Identity
                    Data.Functor.Identity.$fFunctorIdentity
                    (\ ds1 :: GHC.Types.Double ->
                     case ds1 of dt { GHC.Types.D# ipv ->
                     Linear.V2.V2 @ GHC.Types.Double dt a25 })
                    (GHC.Types.D# 1.0)
                      `cast`
                    (Sym (Data.Functor.Identity.NTCo:Identity[0]
                              <GHC.Types.Double>_R)))
                   `cast`
                 (Data.Functor.Identity.NTCo:Identity[0]
                      <Linear.V2.V2 GHC.Types.Double>_R)) -}
958a525c1d13b9159e007f5e97698476
  $wa1 ::
    [(Data.Colour.Internal.Colour GHC.Types.Double,
      Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ w :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                          Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 Lib.chord6
                   (Lib.chord5
                      GHC.Types.False
                      (case Lib.$wgo w of ww { (#,#) ww1 ww2 ->
                       case GHC.List.strictMaximum
                              @ GHC.Types.Int
                              GHC.Classes.$fOrdInt
                              (GHC.Base.map
                                 @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                                 @ GHC.Types.Int
                                 Lib.chord4
                                 ww2) of wild { GHC.Types.I# i ->
                       case GHC.Prim./##
                              1.0
                              (GHC.Prim.*## 50.0 (GHC.Prim.int2Double# i)) of wild2 { DEFAULT ->
                       GHC.Base.map
                         @ GHC.Types.Double
                         @ (Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
                         (\ p :: GHC.Types.Double ->
                          letrec {
                            $wgo3 :: [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
                                     -> GHC.Types.Double
                                     -> GHC.Types.Double
                                     -> (# GHC.Types.Double, GHC.Types.Double #)
                              {- Arity: 3, Strictness: <S,1*U><L,U(U)><L,U(U)>, Inline: [0] -}
                            = \ w1 :: [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
                                ww3 :: GHC.Types.Double
                                ww4 :: GHC.Types.Double ->
                              case w1 of wild1 {
                                [] -> (# ww3, ww4 #)
                                : y ys
                                -> case Lib.$satParam10 of cobox2 { GHC.Types.Eq# cobox3 ->
                                   case Linear.Vector.^+^
                                          @ Linear.V2.V2
                                          Lib.$satParam9
                                          @ GHC.Types.Double
                                          Lib.$satParam8
                                          Lib.chord2
                                          (Lib.$satParam3
                                             y
                                             p `cast`
                                             (Sub (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                                            <Linear.V2.V2>_N
                                                            <GHC.Types.Double>_N))))
                                            `cast`
                                          (Trans
                                               (Sub (Sym (Linear.Affine.TFCo:R:DiffPoint[0]
                                                              (Sym (Diagrams.Trail.TFCo:R:CodomainTrail[0]
                                                                        <Linear.V2.V2>_N
                                                                        <GHC.Types.Double>_N)))))
                                               (Sub (Linear.Affine.TFCo:R:DiffPoint[0]
                                                         <Linear.V2.V2>_N)) cobox3) of ww5 { Linear.V2.V2 ww6 ww7 ->
                                   case ww6 of wild3 { GHC.Types.D# y1 ->
                                   case ww7 of wild4 { GHC.Types.D# y2 ->
                                   case ww3 of wild5 { GHC.Types.D# x1 ->
                                   case ww4 of wild6 { GHC.Types.D# x2 ->
                                   $wgo3
                                     ys
                                     (GHC.Types.D# (GHC.Prim.+## x1 y1))
                                     (GHC.Types.D# (GHC.Prim.+## x2 y2)) } } } } } } }
                          } in
                          case $wgo3
                                 ww2
                                 Lib.chord_a23
                                 Lib.chord_a23 of ww3 { (#,#) ww4 ww5 ->
                          (Linear.V2.V2 @ GHC.Types.Double ww4 ww5)
                            `cast`
                          (Sym (Linear.Affine.NTCo:Point[0]
                                    <Linear.V2.V2>_R) <GHC.Types.Double>_N) })
                         (GHC.Real.numericEnumFromThenTo
                            @ GHC.Types.Double
                            GHC.Classes.$fOrdDouble
                            GHC.Float.$fFractionalDouble
                            Lib.chord_a23
                            (GHC.Types.D# wild2)
                            Lib.chord_x) } } }))) -}
4dfe58d6d2829323086794d5ea2c9e26
  $wa2 ::
    [(Data.Colour.Internal.Colour GHC.Types.Double,
      Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                          Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 case Lib.$wgo1 w of ww { (#,#) ww1 ww2 ->
                 Diagrams.Core.Types.$fMonoidQDiagram_$cmconcat
                   @ Diagrams.Backend.SVG.SVG
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1
                   Data.Semigroup.$fSemigroupAny
                   (GHC.Base.map
                      @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                      @ (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.B
                           (Diagrams.Core.V.V Diagrams.Backend.SVG.B)
                           (Diagrams.Core.V.N Diagrams.Backend.SVG.B)
                           Data.Monoid.Any)
                      Lib.polyRhythm2
                        `cast`
                      (<Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_R
                       ->_R (Diagrams.Core.Types.QDiagram
                               <Diagrams.Backend.SVG.B>_N
                               (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                               (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                               <Data.Monoid.Any>_R)_R)
                      ww2)
                     `cast`
                   ([(Diagrams.Core.Types.QDiagram
                        <Diagrams.Backend.SVG.B>_N
                        (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                        (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                        <Data.Monoid.Any>_R)_R])_R }) -}
77310606c19a6a2bb443b9d59fa9e592
  $wgo ::
    [(Data.Colour.Internal.Colour GHC.Types.Double,
      Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> (# [Data.Colour.Internal.Colour GHC.Types.Double],
          [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
c345e862b0d6c0c08a06aa399862b270
  $wgo1 ::
    [(Data.Colour.Internal.Colour GHC.Types.Double,
      Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> (# [Data.Colour.Internal.Colour GHC.Types.Double],
          [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
2a0e3a4f88090fef7d2f9de6c6f2b9ff
  $wgo2 ::
    [(Data.Colour.Internal.Colour GHC.Types.Double,
      Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> (# [Data.Colour.Internal.Colour GHC.Types.Double],
          [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
e4c8e6bdfdd2e2b12c6aef49ff9dcbe4
  $wosc ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> GHC.Prim.Double#
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ w :: Diagrams.Trail.Trail
                          Linear.V2.V2 GHC.Types.Double
                   ww :: GHC.Prim.Double# ->
                 let {
                   n :: GHC.Prim.Int# = GHC.Prim.double2Int# ww
                 } in
                 let {
                   $j :: GHC.Prim.Int#
                         -> GHC.Types.Int
                         -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
                     {- Arity: 2, Strictness: <L,U><L,1*U(1*U)> -}
                   = \ y :: GHC.Prim.Int#[OneShot] wild1 :: GHC.Types.Int[OneShot] ->
                     let {
                       a25 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
                       = Diagrams.Trail.$w$csection1
                           @ Linear.V2.V2
                           @ GHC.Types.Double
                           Linear.V2.$fMetricV2
                           Lib.$s$fMonoidQDiagram1
                           GHC.Float.$fRealDouble
                           w
                           Lib.chord_a23
                             `cast`
                           (Sub (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                          <Linear.V2.V2>_N <GHC.Types.Double>_N)))
                           (GHC.Types.D# (GHC.Prim.-## ww (GHC.Prim.int2Double# y)))
                             `cast`
                           (Sub (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                          <Linear.V2.V2>_N <GHC.Types.Double>_N)))
                     } in
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<# 0 y) of wild {
                       GHC.Types.False
                       -> Lib.chord_go
                            (GHC.Types.[]
                               @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                            a25
                       GHC.Types.True
                       -> let {
                            n1 :: [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
                            = GHC.Types.:
                                @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                                a25
                                (GHC.Types.[]
                                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                          } in
                          let {
                            lvl46 :: [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
                            = GHC.Types.:
                                @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                                w
                                n1
                          } in
                          letrec {
                            $wxs1 :: GHC.Prim.Int#
                                     -> [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
                              {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
                            = \ ww1 :: GHC.Prim.Int# ->
                              case ww1 of ds1 {
                                DEFAULT
                                -> GHC.Types.:
                                     @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                                     w
                                     ($wxs1 (GHC.Prim.-# ds1 1))
                                1 -> lvl46 }
                          } in
                          case $wxs1 y of wild2 {
                            []
                            -> GHC.List.foldl2
                                 @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                            : x1 xs -> Lib.chord_go xs x1 } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww (GHC.Prim.int2Double# n)) of wild1 {
                   GHC.Types.False -> $j n (GHC.Types.I# n)
                   GHC.Types.True
                   -> let {
                        y :: GHC.Prim.Int# = GHC.Prim.-# n 1
                      } in
                      $j y (GHC.Types.I# y) }) -}
98f3c0fe88a7dbde1f223dc9928e9e03
  chord ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Array.Repa.Base.Array
         Data.Array.Repa.Repr.Unboxed.U
         Data.Array.Repa.Index.DIM1
         GHC.Types.Double
    -> GHC.Types.Double
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 4,
     Unfolding: (Lib.polyOsc
                   Lib.tone
                   Lib.chord1
                     `cast`
                   (<GHC.Types.Double>_R
                    ->_R <[(Data.Colour.Internal.Colour GHC.Types.Double,
                            Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]>_R
                    ->_R (Diagrams.Core.Types.QDiagram
                            <Diagrams.Backend.SVG.B>_N
                            (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                            (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                            <Data.Monoid.Any>_R)_R)) -}
838ad199979c1c70cd5ba68ed4f8eed0
  chord1 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 2, Strictness: <L,A><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: GHC.Types.Double
                   w1 :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 Lib.$wa1 w1) -}
6bd8ab5009e88f175c7d2d580a5d87bd
  chord10 ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Diagrams.Segment.Segment
                        Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double)
                   Lib.chord11
                   (GHC.Types.[]
                      @ (Diagrams.Segment.Segment
                           Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double))) -}
651ff76a88ce5e3eab199bdec908e28b
  chord11 ::
    Diagrams.Segment.Segment
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Segment.Cubic
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord17
                   Lib.chord15
                   Lib.chord12) -}
6a7a70af70f01f7687ec6d63289b37b3
  chord12 ::
    Diagrams.Segment.Offset
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Segment.OffsetClosed
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @~ <Diagrams.Segment.Closed>_N
                   Lib.chord13) -}
0fd165e91a5dc0ef7932bf8cfc8ccfe2
  chord13 :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord_x
                   Lib.chord14) -}
87faab67e5d5d5076e5d15d0e8cc4790
  chord14 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# -1.0) -}
7f40b6b25cf9674c2290b6d2656b61e4
  chord15 :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord16
                   Lib.chord14) -}
d6dfe5a245cc572b10da1d2d938bf2aa
  chord16 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 0.5) -}
ff2b359596463d05157eb0ac0c294236
  chord17 :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord16
                   Lib.chord_a23) -}
3de08fe624702f044fa7a51bf5ec8c11
  chord18 ::
    Diagrams.Core.Transform.Transformation
      (Diagrams.Core.V.V
         (Diagrams.Trail.SegTree Linear.V2.V2 GHC.Types.Double))
      (Diagrams.Core.V.N
         (Diagrams.Trail.SegTree Linear.V2.V2 GHC.Types.Double))
    -> Diagrams.Trail.SegTree Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Trail.SegTree Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Trail.$fTransformableSegTree_$ctransform
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord20
                   Lib.chord19
                   Linear.V2.$fMetricV2) -}
56ddaf75f96563bdd2c83b4df78c9875
  chord19 :: GHC.Classes.Ord GHC.Types.Double
  {- Unfolding: (Diagrams.Core.Envelope.$p2OrderedField
                   @ GHC.Types.Double
                   Lib.$s$fMonoidQDiagram1) -}
2cead0f694fc4af5c078419161300e24
  chord2 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (case Lib.$satParam4 of cobox4 { GHC.Types.Eq# cobox5 ->
                 Lib.chord3 }) -}
1f9e2443597497b5b4510835298671df
  chord20 :: GHC.Float.Floating GHC.Types.Double
  {- Unfolding: (Diagrams.Core.Envelope.$p1OrderedField
                   @ GHC.Types.Double
                   Lib.$s$fMonoidQDiagram1) -}
8943c1be3f081ff3f4413bd0bc7ec02c
  chord3 :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord_a23
                   Lib.chord_a23) -}
e5ffc50fbbdee3575f541c741dbe9050
  chord4 ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double -> GHC.Types.Int
  {- Arity: 1, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double ->
                 case GHC.List.$wlenAcc
                        @ (Diagrams.Segment.Segment
                             Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double)
                        (Diagrams.Trail.trailSegments
                           @ Linear.V2.V2
                           @ GHC.Types.Double
                           Linear.V2.$fMetricV2
                           Lib.$s$fMonoidQDiagram1
                           w)
                        0 of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
658cdb012ca4d93df37713c615d07bcd
  chord5 ::
    GHC.Types.Bool
    -> [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.CubicSpline.cubicSpline
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam7
                   Lib.$satParam6
                   Lib.$s$fTrailLikeTrail
                   Lib.$s$fFractionalV2) -}
7ad3d4a14b3f9ac3b635f4341ed5ae18
  chord6 ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.TwoD.Path.stroke
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   @ Diagrams.Backend.SVG.B
                   @ GHC.Types.Double
                   Lib.$satParam5
                   (Diagrams.Path.pathFromTrail @ Linear.V2.V2 @ GHC.Types.Double)
                     `cast`
                   (Trans
                        ((Linear.Metric.Metric
                            (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                                      <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                         ->_R (Diagrams.Core.Envelope.OrderedField
                                 (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                           <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                         ->_R <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_R
                         ->_R (Diagrams.Path.Path
                                 (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                                           <Linear.V2.V2>_N <GHC.Types.Double>_N))
                                 (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                           <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R)
                        (Sym (Diagrams.Path.NTCo:ToPath[0]
                                  <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)))
                   Lib.$s$fRenderablePathSVG2
                   Lib.$s$fRenderablePathSVG) -}
ce888b6683326827322e6f9f3dbab128
  chord7 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Lib.oscCycle Lib.chord8) -}
ecb9816a95108490199bc37a8f937bd2
  chord8 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Trail.Trail
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Diagrams.Trail.Line
                   Lib.chord9) -}
5f07b8a0b3d22016748eabec5f9f6c38
  chord9 ::
    Diagrams.Trail.Trail'
      Diagrams.Trail.Line Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Lib.chord_g Lib.chord10) -}
ca0983703cef6d619e00edafbb3363fa
  chord_a23 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0) -}
c3fd94566db4f5dd8072744af764687f
  chord_g ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
    -> Diagrams.Trail.Trail'
         Diagrams.Trail.Line Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Trail.lineFromSegments
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1) -}
389c5c562f2d8cdcbf359eafc1ba67af
  chord_go ::
    [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
1e10df50990a799d53a1478e08246081
  chord_w2 ::
    Diagrams.Core.Transform.Transformation
      (Diagrams.Core.V.V
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
      (Diagrams.Core.V.N
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
  {- Unfolding: (case Lib.$satParam4 of cobox { GHC.Types.Eq# cobox1 ->
                 case Lib.$satParam10 of cobox2 { GHC.Types.Eq# cobox3 ->
                 case Diagrams.TwoD.Transform.$wreflectionY
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        Lib.$satParam9
                        Linear.V2.$fR2V2
                        Lib.$satParam8 of ww { (#,,#) ww1 ww2 ww3 ->
                 (Diagrams.Core.Transform.Transformation
                    @ Linear.V2.V2
                    @ GHC.Types.Double
                    ww1
                    ww2
                    ww3)
                   `cast`
                 (Diagrams.Core.Transform.Transformation
                    (Sub (Sym cobox1)) (Sym cobox3))_R } } }) -}
dd204a572373360c792c7f89afe6eb56
  chord_x :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.0) -}
464e688b38c5b1a8d45528342b064224
  eqt ::
    Data.Array.Repa.Base.Array
      Data.Array.Repa.Repr.Unboxed.U
      Data.Array.Repa.Index.DIM1
      GHC.Types.Double
  {- Unfolding: (Data.Array.Repa.Eval.Target.fromList
                   @ Data.Array.Repa.Index.DIM1
                   @ GHC.Types.Double
                   @ Data.Array.Repa.Repr.Unboxed.U
                   Lib.$s!_$s$fShape:.
                   Lib.$s$fTargetUe
                   Lib.eqt4
                   Lib.eqt1) -}
401d84ad7104a7ff9e82c8e061d9a171
  eqt1 :: [GHC.Types.Double]
  {- Unfolding: (Lib.eqt_go Lib.eqt2) -}
d4ef441f346750f5efa73b9a22ad45b9
  eqt2 :: [GHC.Types.Double]
  {- Unfolding: (GHC.Real.numericEnumFromTo
                   @ GHC.Types.Double
                   GHC.Classes.$fOrdDouble
                   GHC.Float.$fFractionalDouble
                   Lib.chord_a23
                   Lib.eqt3) -}
f97b7f0866110b2dff964b36dd24415a
  eqt3 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 11.0) -}
1126b05f94dbffc0814a928e35e02352
  eqt4 ::
    Data.Array.Repa.Index.DIM0 Data.Array.Repa.Index.:. GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (Data.Array.Repa.Index.:.
                   @ Data.Array.Repa.Index.DIM0
                   @ GHC.Types.Int
                   Data.Array.Repa.Index.Z
                   Lib.eqt5) -}
c9eef348cd21897cf1c969490435131b
  eqt5 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 12) -}
c9c0d7ffcbf51573e49f38be608a2aab
  eqt_go :: [GHC.Types.Double] -> [GHC.Types.Double]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
ed7bc577432fde2b0f78b0b9af0e74c2
  farey ::
    Data.Array.Repa.Base.Array
      Data.Array.Repa.Repr.Unboxed.U
      Data.Array.Repa.Index.DIM1
      GHC.Types.Double
  {- Unfolding: (Data.Array.Repa.Eval.Target.fromList
                   @ Data.Array.Repa.Index.DIM1
                   @ GHC.Types.Double
                   @ Data.Array.Repa.Repr.Unboxed.U
                   Lib.$s!_$s$fShape:.
                   Lib.$s$fTargetUe
                   Lib.eqt4
                   Lib.farey1) -}
f36263c161763249684bb13c003387d2
  farey1 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.chord_x
                   Lib.farey2) -}
d92c23856a57217ddca4bed83f6616f6
  farey10 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey15
                   Lib.farey11) -}
29da5d5fdfb10225d838d43fd6c05af5
  farey11 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey14
                   Lib.farey12) -}
eabd1924d0c22309eeb7e25cfc2f225c
  farey12 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey13
                   (GHC.Types.[] @ GHC.Types.Double)) -}
64796127957e21fb3fa7aefc6f817bf8
  farey13 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.875) -}
191461a829d14e2db85b086545d50457
  farey14 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.7777777777777777) -}
5aac30520f35489d6312b34e282a299a
  farey15 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.6666666666666667) -}
10efda779397708bd5cf504249d3a554
  farey16 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.6) -}
668c9706f5dd906470599607fc6f9698
  farey17 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.5) -}
f21cac876366afb741a0ca05887da773
  farey18 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.4166666666666667) -}
d31dc0ffb20d1836fbbc02902d4581a7
  farey19 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.3333333333333333) -}
b23352845247441b6f707f4c02301fc8
  farey2 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey23
                   Lib.farey3) -}
b345efd2f7a1e6a7b176f9ef106cba98
  farey20 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.25) -}
abcc1242fd5523e7c645e0876295b891
  farey21 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.2) -}
d883edc060152491ed26af985b1cfb4c
  farey22 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.125) -}
7f5a8e130e6151fd8ab3120a6392c8e9
  farey23 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.0666666666666667) -}
3e912b7b81734345fa44dd649826bb93
  farey3 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey22
                   Lib.farey4) -}
0812698b1bea2a5dc76c407f3e6c04e5
  farey4 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey21
                   Lib.farey5) -}
57efe93b7adfed63970fc152537900c9
  farey5 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey20
                   Lib.farey6) -}
be6bedd9a1e076c1eda3d7335e1a8717
  farey6 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey19
                   Lib.farey7) -}
e6a2a895fdee65420fe683c085abdee7
  farey7 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey18
                   Lib.farey8) -}
ac0b7d034df1bcf1643d92ee543d25ea
  farey8 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey17
                   Lib.farey9) -}
2a0e9cb1d087f18599526f247ae5bcf3
  farey9 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey16
                   Lib.farey10) -}
6854cfe292fd16581922c78ba729b84d
  osc ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> GHC.Types.Double
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 2, Strictness: <L,U><S,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
                   w1 :: GHC.Types.Double ->
                 case w1 of ww { GHC.Types.D# ww1 -> Lib.$wosc w ww1 }) -}
253f2b474a009dabdf602d5d67f7de05
  oscCycle ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ halfCycle :: Diagrams.Trail.Trail
                                  Linear.V2.V2 GHC.Types.Double ->
                 case halfCycle of wild { Diagrams.Trail.Trail l0 t ->
                 case t of wild1 {
                   Diagrams.Trail.Line dt ds
                   -> Diagrams.Trail.$fMonoidTrail_$c<>
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        Lib.$s$fMonoidQDiagram1
                        Linear.V2.$fMetricV2
                        wild
                        (Diagrams.Trail.Trail
                           @ Linear.V2.V2
                           @ GHC.Types.Double
                           @ Diagrams.Trail.Line
                           (Diagrams.Trail.Line
                              @ Diagrams.Trail.Line
                              @ Linear.V2.V2
                              @ GHC.Types.Double
                              @~ <Diagrams.Trail.Line>_N
                              (Lib.chord18
                                 Lib.chord_w2
                                   `cast`
                                 (Diagrams.Core.Transform.Transformation
                                    (Trans
                                         (Sub (Diagrams.Trail.TFCo:R:VTrail[0]
                                                   <Linear.V2.V2>_N <GHC.Types.Double>_N))
                                         (Sub (Sym (Diagrams.Trail.TFCo:R:VSegTree[0]
                                                        <Linear.V2.V2>_N <GHC.Types.Double>_N))))
                                    (Trans
                                         (Diagrams.Trail.TFCo:R:NTrail[0]
                                              <Linear.V2.V2>_N <GHC.Types.Double>_N)
                                         (Sym (Diagrams.Trail.TFCo:R:NSegTree[0]
                                                   <Linear.V2.V2>_N <GHC.Types.Double>_N))))_R
                                 ds)))
                   Diagrams.Trail.Loop dt ds ds1
                   -> Diagrams.Trail.$fMonoidTrail_$c<>
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        Lib.$s$fMonoidQDiagram1
                        Linear.V2.$fMetricV2
                        wild
                        (Diagrams.Trail.Trail
                           @ Linear.V2.V2
                           @ GHC.Types.Double
                           @ Diagrams.Trail.Loop
                           (Diagrams.Trail.Loop
                              @ Diagrams.Trail.Loop
                              @ Linear.V2.V2
                              @ GHC.Types.Double
                              @~ <Diagrams.Trail.Loop>_N
                              (Lib.chord18
                                 Lib.chord_w2
                                   `cast`
                                 (Diagrams.Core.Transform.Transformation
                                    (Trans
                                         (Sub (Diagrams.Trail.TFCo:R:VTrail[0]
                                                   <Linear.V2.V2>_N <GHC.Types.Double>_N))
                                         (Sub (Sym (Diagrams.Trail.TFCo:R:VSegTree[0]
                                                        <Linear.V2.V2>_N <GHC.Types.Double>_N))))
                                    (Trans
                                         (Diagrams.Trail.TFCo:R:NTrail[0]
                                              <Linear.V2.V2>_N <GHC.Types.Double>_N)
                                         (Sym (Diagrams.Trail.TFCo:R:NSegTree[0]
                                                   <Linear.V2.V2>_N <GHC.Types.Double>_N))))_R
                                 ds)
                              (Diagrams.Segment.$fTransformableSegment1
                                 @ Diagrams.Segment.Open
                                 @ Linear.V2.V2
                                 @ GHC.Types.Double
                                 Lib.chord_w2
                                   `cast`
                                 (Diagrams.Core.Transform.Transformation
                                    (Sub (Diagrams.Trail.TFCo:R:VTrail[0]
                                              <Linear.V2.V2>_N <GHC.Types.Double>_N))
                                    (Diagrams.Trail.TFCo:R:NTrail[0]
                                         <Linear.V2.V2>_N <GHC.Types.Double>_N))_R
                                 ds1))) } }) -}
efaba9c3b4507c7e5e0b34d913c99988
  oscs ::
    (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
     -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
    -> GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ strokeFn :: Diagrams.Trail.Trail
                                 Linear.V2.V2 GHC.Types.Double
                               -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                   sepa :: GHC.Types.Double ->
                 let {
                   f2 :: [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
                         -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                   = Lib.rhythms2
                       (Diagrams.Combinators.CatOpts
                          @ GHC.Types.Double
                          Diagrams.Combinators.Distrib
                          sepa
                          (Data.Proxy.Proxy @ * @ GHC.Types.Double))
                 } in
                 let {
                   a25 :: (Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                          -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                     {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, False)
                                   (\ w :: (Data.Colour.Internal.Colour GHC.Types.Double,
                                            Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double) ->
                                    case w of ww { (,) ww1 ww2 ->
                                    Lib.rhythms_f
                                      (Diagrams.TwoD.Attributes.SC
                                         @ GHC.Types.Double
                                         (Diagrams.Attributes.SomeColor
                                            @ (Data.Colour.Internal.Colour GHC.Types.Double)
                                            Diagrams.TwoD.Attributes.$fDefaultLineTexture_$s$fColorColour
                                            ww1))
                                      (strokeFn ww2) }) -}
                   = \ w :: (Data.Colour.Internal.Colour GHC.Types.Double,
                             Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double) ->
                     case w of ww { (,) ww1 ww2 ->
                     Lib.rhythms_f
                       (Diagrams.TwoD.Attributes.SC
                          @ GHC.Types.Double
                          (Diagrams.Attributes.SomeColor
                             @ (Data.Colour.Internal.Colour GHC.Types.Double)
                             Diagrams.TwoD.Attributes.$fDefaultLineTexture_$s$fColorColour
                             ww1))
                       (strokeFn ww2) }
                 } in
                 \ x1 :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 f2
                   (GHC.Base.map
                      @ (Data.Colour.Internal.Colour GHC.Types.Double,
                         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                      @ (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.B
                           (Diagrams.Core.V.V Diagrams.Backend.SVG.B)
                           (Diagrams.Core.V.N Diagrams.Backend.SVG.B)
                           Data.Monoid.Any)
                      a25
                      x1)) -}
4e62096c1abef388c97b843af4a1781f
  polyOsc ::
    (GHC.Types.Double
     -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    -> (GHC.Types.Double
        -> [(Data.Colour.Internal.Colour GHC.Types.Double,
             Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
        -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
    -> GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Array.Repa.Base.Array
         Data.Array.Repa.Repr.Unboxed.U
         Data.Array.Repa.Index.DIM1
         GHC.Types.Double
    -> GHC.Types.Double
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 6,
     Strictness: <L,C(U)><L,1*C1(C1(U))><L,U(U)><L,1*U><L,U(H,U(U,U,U))><L,1*U(U)> -}
7a6b85185521054489ea5bc81f01e346
  polyRhythm ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Array.Repa.Base.Array
         Data.Array.Repa.Repr.Unboxed.U
         Data.Array.Repa.Index.DIM1
         GHC.Types.Double
    -> GHC.Types.Double
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 4,
     Unfolding: (Lib.polyOsc
                   Lib.rhythm
                   Lib.polyRhythm1
                     `cast`
                   (<GHC.Types.Double>_R
                    ->_R <[(Data.Colour.Internal.Colour GHC.Types.Double,
                            Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]>_R
                    ->_R (Diagrams.Core.Types.QDiagram
                            <Diagrams.Backend.SVG.B>_N
                            (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                            (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                            <Data.Monoid.Any>_R)_R)) -}
8d5e0c2de58424988232efee3db4894f
  polyRhythm1 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 2, Strictness: <L,A><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: GHC.Types.Double
                   w1 :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 Lib.$wa2 w1) -}
cdb996c24d5fcccc8dbe5881d5282e33
  polyRhythm10 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (case Linear.Vector.zero
                        @ Linear.V2.V2
                        Lib.polyRhythm11
                        @ GHC.Types.Double
                        GHC.Float.$fNumDouble of wild { Linear.V2.V2 a25 b ->
                 Linear.V2.V2 @ GHC.Types.Double Lib.chord_x b }) -}
62d8f11f4673c02c4aefa043a66df31e
  polyRhythm11 :: Linear.Vector.Additive Linear.V2.V2
  {- Unfolding: (Diagrams.Core.V.$p3InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$slc_$dInSpace) -}
0d550cef2d5cffe18abb7f8665132e2b
  polyRhythm12 ::
    Linear.Affine.Point
      (Diagrams.Core.V.V
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
      (Diagrams.Core.V.N
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Core.Types.$fHasOriginQDiagram_$cmoveOriginTo
                   @ Diagrams.Backend.SVG.SVG
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1
                   Data.Semigroup.$fSemigroupAny) -}
6a79b4f3ebc7169573f5705618a04b03
  polyRhythm13 ::
    Data.Monoid.WithSemigroup.Monoid'
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
  {- Unfolding: (Data.Monoid.WithSemigroup.$fMonoid'm
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   (Lib.$s$fSemigroupQDiagram @ Diagrams.Backend.SVG.SVG)
                   (Lib.$s$fMonoidQDiagram @ Diagrams.Backend.SVG.SVG)) -}
f074b7b3182cc1c1856272204467f76f
  polyRhythm14 ::
    Diagrams.Core.V.Vn
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 3,
     Unfolding: (Diagrams.Core.Juxtapose.juxtaposeDefault
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.SVG
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.polyRhythm18
                   Lib.polyRhythm15
                     `cast`
                   (Sym (Diagrams.Core.HasOrigin.NTCo:HasOrigin[0]
                             <Diagrams.Core.Types.QDiagram
                                Diagrams.Backend.SVG.SVG
                                Linear.V2.V2
                                GHC.Types.Double
                                Data.Monoid.Any>_N))) -}
49b1dcd46cba0896d04f973034e7b01a
  polyRhythm15 ::
    Linear.Affine.Point
      (Diagrams.Core.V.V
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
      (Diagrams.Core.V.N
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Core.Types.$fHasOriginQDiagram_$cmoveOriginTo
                   @ Diagrams.Backend.SVG.SVG
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1
                   Lib.polyRhythm16) -}
87cf88aa4cb82f0ae572fcce6d3031ed
  polyRhythm16 :: Data.Semigroup.Semigroup Data.Monoid.Any
  {- Unfolding: (Data.Monoid.WithSemigroup.$p1Monoid'
                   @ Data.Monoid.Any
                   Lib.polyRhythm17) -}
fdfd23098e684f9c4bf2b3e149d7ee44
  polyRhythm17 :: Data.Monoid.WithSemigroup.Monoid' Data.Monoid.Any
  {- Unfolding: (Data.Monoid.WithSemigroup.$fMonoid'm
                   @ Data.Monoid.Any
                   Data.Semigroup.$fSemigroupAny
                   Data.Monoid.$fMonoidAny) -}
f8965b250bf84258e33be2976ddb6d19
  polyRhythm18 ::
    Diagrams.Core.Envelope.Enveloped
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
  {- Unfolding: (Diagrams.Core.Types.$fEnvelopedQDiagram
                   @ Diagrams.Backend.SVG.SVG
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                     `cast`
                   (Linear.Metric.Metric
                      (Sym (Diagrams.Core.Types.TFCo:R:VQDiagram[0]
                                <Diagrams.Backend.SVG.SVG>_N
                                <Linear.V2.V2>_N
                                <GHC.Types.Double>_N
                                <Data.Monoid.Any>_N)))_R
                   Lib.$s$fMonoidQDiagram1
                     `cast`
                   (Diagrams.Core.Envelope.OrderedField
                      (Sym (Diagrams.Core.Types.TFCo:R:NQDiagram[0]
                                <Diagrams.Backend.SVG.SVG>_N
                                <Linear.V2.V2>_N
                                <GHC.Types.Double>_N
                                <Data.Monoid.Any>_N)))_R
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1
                   Lib.polyRhythm17) -}
d40b51c05f50367e0f99937afec341f0
  polyRhythm19 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Lib.oscCycle Lib.polyRhythm20) -}
11a6d71d1b4fd2f863a7fd790427b253
  polyRhythm2 ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ cyc :: Diagrams.Trail.Trail
                            Linear.V2.V2 GHC.Types.Double ->
                 Lib.polyRhythm9
                   (GHC.List.zipWith
                      @ (Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                         -> Diagrams.Core.Types.QDiagram
                              Diagrams.Backend.SVG.B
                              Linear.V2.V2
                              GHC.Types.Double
                              Data.Monoid.Any)
                      @ (Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                      @ (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.B
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any)
                      (GHC.Base.$
                         @ (Diagrams.Located.Located
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                         @ (Diagrams.Core.Types.QDiagram
                              Diagrams.Backend.SVG.B
                              Linear.V2.V2
                              GHC.Types.Double
                              Data.Monoid.Any))
                      Lib.polyRhythm_xs'
                      (Lib.polyRhythm3
                         (Diagrams.Located.Loc
                            @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                            Lib.chord3
                              `cast`
                            (Sym (Linear.Affine.NTCo:Point[0]
                                      (Sub (Diagrams.Trail.TFCo:R:VTrail[0]
                                                <Linear.V2.V2>_N
                                                <GHC.Types.Double>_N))) (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                                                                  <Linear.V2.V2>_N
                                                                                  <GHC.Types.Double>_N)))
                            cyc)))) -}
12bb09d74fd0105e5f353fb0108ba5a5
  polyRhythm20 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Trail.Trail
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Diagrams.Trail.Line
                   Lib.polyRhythm21) -}
05065dd9153090ad3e203d1f40611118
  polyRhythm21 ::
    Diagrams.Trail.Trail'
      Diagrams.Trail.Line Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Lib.chord_g Lib.polyRhythm22) -}
b2b9ce93da2e0daab815460ec5038c16
  polyRhythm22 ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
  {- Unfolding: (GHC.Types.:
                   @ (Diagrams.Segment.Segment
                        Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double)
                   Lib.polyRhythm25
                   Lib.polyRhythm23) -}
c03f3f3c3fbd1960a90abfaa8fdacec6
  polyRhythm23 ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
  {- Unfolding: (GHC.Types.:
                   @ (Diagrams.Segment.Segment
                        Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double)
                   Lib.polyRhythm30
                   Lib.polyRhythm24) -}
d0450ce10c8ff37075e490862ebace0d
  polyRhythm24 ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
  {- Unfolding: (GHC.Types.:
                   @ (Diagrams.Segment.Segment
                        Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double)
                   Lib.polyRhythm25
                   (GHC.Types.[]
                      @ (Diagrams.Segment.Segment
                           Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double))) -}
1e58dbda9d2c63bf2df42f37f95ceaa8
  polyRhythm25 ::
    Diagrams.Segment.Segment
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Segment.Linear
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.polyRhythm26) -}
c224f0b64ac5cde27220ca4d46866012
  polyRhythm26 ::
    Diagrams.Segment.Offset
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Segment.OffsetClosed
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @~ <Diagrams.Segment.Closed>_N
                   Lib.polyRhythm27) -}
a27cf1232e62f6cec383058eeabf07d1
  polyRhythm27 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.polyRhythm29
                   Lib.polyRhythm28) -}
3632f2b24840178c32db88b0f46e0956
  polyRhythm28 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# -0.5) -}
f27242613f9626d1050982a8d9557e64
  polyRhythm29 :: GHC.Types.Double
  {- Unfolding: (GHC.Types.D# (GHC.Prim.negateDouble# 0.0)) -}
cf1c2878b4272f3717b6baf086faa7aa
  polyRhythm3 ::
    Diagrams.Located.Located
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    -> [Diagrams.Located.Located
          (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
  {- Unfolding: (Diagrams.TrailLike.explodeTrail
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Located.Located
                        (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                   Lib.polyRhythm5
                   Lib.polyRhythm4
                   Lib.$s$fTrailLikeLocated) -}
7eab12faca819b445da7c7dc475d7d70
  polyRhythm30 ::
    Diagrams.Segment.Segment
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Segment.Linear
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.polyRhythm31) -}
17cacd6fa0b383ddea05a1f841ecdc6f
  polyRhythm31 ::
    Diagrams.Segment.Offset
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Segment.OffsetClosed
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @~ <Diagrams.Segment.Closed>_N
                   Lib.$sunitX) -}
1edf5977569b2754c291d4b8aa15110b
  polyRhythm4 ::
    Diagrams.Core.V.N
      (Diagrams.Located.Located
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
    ~ GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Diagrams.Core.V.N
                        (Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))
                   @ GHC.Types.Double
                   @~ (Trans
                           (Diagrams.Located.TFCo:R:NLocated[0]
                                <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)
                           (Diagrams.Trail.TFCo:R:NTrail[0]
                                <Linear.V2.V2>_N <GHC.Types.Double>_N))) -}
3261984888a2d7c8cfb7c1f4ba56d72c
  polyRhythm5 ::
    Diagrams.Core.V.V
      (Diagrams.Located.Located
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
    ~ Linear.V2.V2
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ (* -> *)
                   @ (Diagrams.Core.V.V
                        (Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))
                   @ Linear.V2.V2
                   @~ (Trans
                           (Diagrams.Located.TFCo:R:VLocated[0]
                                <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)
                           (Diagrams.Trail.TFCo:R:VTrail[0]
                                <Linear.V2.V2>_N <GHC.Types.Double>_N))) -}
cecdb2075c6c64ffbcb86a78fe02d20e
  polyRhythm6 ::
    [Diagrams.Located.Located
       (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
     -> Diagrams.Core.Types.QDiagram
          Diagrams.Backend.SVG.B
          Linear.V2.V2
          GHC.Types.Double
          Data.Monoid.Any]
792a290f38ba15f41e91bf8659e1d7e0
  polyRhythm7 ::
    Diagrams.Located.Located
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ x1 :: Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double) ->
                 Lib.polyRhythm_f
                   (GHC.Types.:
                      @ (Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                      x1
                      (GHC.Types.[]
                         @ (Diagrams.Located.Located
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))))
                     `cast`
                   (Sym (Diagrams.Path.NTCo:Path[0]
                             <Linear.V2.V2>_N <GHC.Types.Double>_N))) -}
89805a0a6c219b0036eff42cc835e4f6
  polyRhythm8 ::
    Diagrams.TwoD.Path.StrokeOpts ()
    -> Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.TwoD.Path.strokeP'
                   @ ()
                   @ GHC.Types.Double
                   @ Diagrams.Backend.SVG.B
                   Lib.$s$fRenderablePathSVG2
                   Lib.$s$fRenderablePathSVG
                   Diagrams.Core.Names.$fIsName()) -}
91a08d818d7e6d5a642ca75fa3c946c7
  polyRhythm9 ::
    [Diagrams.Core.Types.QDiagram
       Diagrams.Backend.SVG.B
       Linear.V2.V2
       GHC.Types.Double
       Data.Monoid.Any]
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Combinators.$wcat'
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$slc_$dInSpace
                   Linear.V2.$fMetricV2
                   GHC.Float.$fFloatingDouble
                   Lib.polyRhythm14
                     `cast`
                   (Sym (Diagrams.Core.Juxtapose.NTCo:Juxtaposable[0]
                             <Diagrams.Core.Types.QDiagram
                                Diagrams.Backend.SVG.SVG
                                Linear.V2.V2
                                GHC.Types.Double
                                Data.Monoid.Any>_N))
                   Lib.polyRhythm13
                   Lib.polyRhythm12
                     `cast`
                   (Sym (Diagrams.Core.HasOrigin.NTCo:HasOrigin[0]
                             <Diagrams.Core.Types.QDiagram
                                Diagrams.Backend.SVG.SVG
                                Linear.V2.V2
                                GHC.Types.Double
                                Data.Monoid.Any>_N))
                   Lib.polyRhythm10
                   Diagrams.Combinators.Cat
                   Lib.chord_a23) -}
9f44b6adc21ebc83568c433c3ca0c715
  polyRhythm_f ::
    Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Lib.polyRhythm8
                   (Diagrams.TwoD.Path.$fDefaultStrokeOpts_$cdef @ ())) -}
087d0eabc352a4c8f38f8092e6117cce
  polyRhythm_xs' ::
    [Diagrams.Located.Located
       (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
     -> Diagrams.Core.Types.QDiagram
          Diagrams.Backend.SVG.B
          Linear.V2.V2
          GHC.Types.Double
          Data.Monoid.Any]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Diagrams.Located.Located
                        (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                      -> Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.B
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any)
                   Lib.polyRhythm7
                   Lib.polyRhythm6) -}
97d72e56ab6d77529ea43cad02358165
  rhythm ::
    GHC.Types.Double
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 1, Unfolding: (Lib.osc Lib.polyRhythm19) -}
35d3e1672d44e0ff9958f858c624812a
  rhythms ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Array.Repa.Base.Array
         Data.Array.Repa.Repr.Unboxed.U
         Data.Array.Repa.Index.DIM1
         GHC.Types.Double
    -> GHC.Types.Double
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 4, Unfolding: (Lib.polyOsc Lib.rhythm Lib.rhythms1) -}
2e30c6ea54fefd468947c70f504f497d
  rhythms1 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 1,
     Unfolding: (\ sepa :: GHC.Types.Double ->
                 let {
                   f2 :: [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
                         -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                   = Lib.rhythms2
                       (Diagrams.Combinators.CatOpts
                          @ GHC.Types.Double
                          Diagrams.Combinators.Distrib
                          sepa
                          (Data.Proxy.Proxy @ * @ GHC.Types.Double))
                 } in
                 let {
                   a25 :: (Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                          -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                     {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, False)
                                   (\ w :: (Data.Colour.Internal.Colour GHC.Types.Double,
                                            Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double) ->
                                    case w of ww { (,) ww1 ww2 ->
                                    Lib.rhythms_f
                                      (Diagrams.TwoD.Attributes.SC
                                         @ GHC.Types.Double
                                         (Diagrams.Attributes.SomeColor
                                            @ (Data.Colour.Internal.Colour GHC.Types.Double)
                                            Diagrams.TwoD.Attributes.$fDefaultLineTexture_$s$fColorColour
                                            ww1))
                                      (Lib.polyRhythm2 ww2)
                                        `cast`
                                      (Diagrams.Core.Types.QDiagram
                                         <Diagrams.Backend.SVG.B>_N
                                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                                         <Data.Monoid.Any>_R)_R }) -}
                   = \ w :: (Data.Colour.Internal.Colour GHC.Types.Double,
                             Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double) ->
                     case w of ww { (,) ww1 ww2 ->
                     Lib.rhythms_f
                       (Diagrams.TwoD.Attributes.SC
                          @ GHC.Types.Double
                          (Diagrams.Attributes.SomeColor
                             @ (Data.Colour.Internal.Colour GHC.Types.Double)
                             Diagrams.TwoD.Attributes.$fDefaultLineTexture_$s$fColorColour
                             ww1))
                       (Lib.polyRhythm2 ww2)
                         `cast`
                       (Diagrams.Core.Types.QDiagram
                          <Diagrams.Backend.SVG.B>_N
                          (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                          (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                          <Data.Monoid.Any>_R)_R }
                 } in
                 \ x1 :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 f2
                   (GHC.Base.map
                      @ (Data.Colour.Internal.Colour GHC.Types.Double,
                         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                      @ (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.B
                           (Diagrams.Core.V.V Diagrams.Backend.SVG.B)
                           (Diagrams.Core.V.N Diagrams.Backend.SVG.B)
                           Data.Monoid.Any)
                      a25
                      x1)) -}
e1713f0b4113039ea94dbe7becfc292c
  rhythms2 ::
    Diagrams.Combinators.CatOpts GHC.Types.Double
    -> [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Unfolding: (Diagrams.TwoD.Combinators.vcat'
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                   Lib.$slc_$dInSpace
                     `cast`
                   (Diagrams.Core.V.InSpace
                      <Linear.V2.V2>_N
                      <GHC.Types.Double>_N
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R
                   GHC.Float.$fFloatingDouble
                   Lib.polyRhythm14
                     `cast`
                   (Sym (Diagrams.Core.Juxtapose.NTCo:Juxtaposable[0]
                             (Diagrams.Core.Types.QDiagram
                                <Diagrams.Backend.SVG.B>_N
                                (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                <Data.Monoid.Any>_N)_N))
                   Lib.polyRhythm12
                     `cast`
                   (Sym (Diagrams.Core.HasOrigin.NTCo:HasOrigin[0]
                             (Diagrams.Core.Types.QDiagram
                                <Diagrams.Backend.SVG.B>_N
                                (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                <Data.Monoid.Any>_N)_N))
                   Lib.polyRhythm13
                     `cast`
                   (Data.Monoid.WithSemigroup.Monoid'
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R) -}
a476bd187d99d733c1853c5567bb750c
  rhythmsWithSync ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Array.Repa.Base.Array
         Data.Array.Repa.Repr.Unboxed.U
         Data.Array.Repa.Index.DIM1
         GHC.Types.Double
    -> GHC.Types.Double
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 4, Strictness: <L,U(U)><L,U><L,U(H,U(U,U,U))><L,U(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.rhythmsWithSync1
                  `cast`
                (<GHC.Types.Double>_R
                 ->_R <[(Data.Colour.Internal.Colour GHC.Types.Double,
                         GHC.Types.Int)]>_R
                 ->_R <Data.Array.Repa.Base.Array
                         Data.Array.Repa.Repr.Unboxed.U
                         Data.Array.Repa.Index.DIM1
                         GHC.Types.Double>_R
                 ->_R <GHC.Types.Double>_R
                 ->_R (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_R)_R) -}
f580a381fc5e20c3b688bd2e64f8d7de
  rhythmsWithSync1 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Array.Repa.Base.Array
         Data.Array.Repa.Repr.Unboxed.U
         Data.Array.Repa.Index.DIM1
         GHC.Types.Double
    -> GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 4, Strictness: <L,U(U)><L,U><L,U(H,U(U,U,U))><L,U(U)>,
     Unfolding: (\ w0 :: GHC.Types.Double
                   pcs :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                            GHC.Types.Int)]
                   tn :: Data.Array.Repa.Base.Array
                           Data.Array.Repa.Repr.Unboxed.U
                           Data.Array.Repa.Index.DIM1
                           GHC.Types.Double
                   f0 :: GHC.Types.Double ->
                 Lib.rhythmsWithSync12
                   (Lib.polyOsc Lib.rhythm Lib.rhythms1 w0 pcs tn f0)
                     `cast`
                   (Diagrams.Core.Types.QDiagram
                      <Diagrams.Backend.SVG.SVG>_N
                      (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                      (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                      <Data.Monoid.Any>_R)_R
                   (Lib.polyOsc
                      Lib.rhythm
                      Lib.rhythmsWithSync2
                        `cast`
                      (<GHC.Types.Double>_R
                       ->_R <[(Data.Colour.Internal.Colour GHC.Types.Double,
                               Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]>_R
                       ->_R (Diagrams.Core.Types.QDiagram
                               <Diagrams.Backend.SVG.B>_N
                               (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                               (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                               <Data.Monoid.Any>_R)_R)
                      w0
                      pcs
                      tn
                      f0)
                     `cast`
                   (Diagrams.Core.Types.QDiagram
                      <Diagrams.Backend.SVG.SVG>_N
                      (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                      (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                      <Data.Monoid.Any>_R)_R) -}
2bf4d1af2785a4f6e6276c77f55d24ed
  rhythmsWithSync10 ::
    Data.HashMap.Base.HashMap
      Data.Typeable.Internal.TypeRep
      (Diagrams.Core.Style.Attribute
         (Diagrams.Core.V.V
            (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B))
         (Diagrams.Core.V.N
            (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)))
  {- Unfolding: (Data.HashMap.Base.Leaf
                   @ Data.Typeable.Internal.TypeRep
                   @ (Diagrams.Core.Style.Attribute
                        (Diagrams.Core.V.V
                           (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B))
                        (Diagrams.Core.V.N
                           (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)))
                   __word 8940204702237973666
                   Diagrams.Attributes.$fAttributeClassOpacity3
                   Lib.rhythmsWithSync11) -}
0e2e8f74ebf9e22ca8e775953b5ce035
  rhythmsWithSync11 ::
    Diagrams.Core.Style.Attribute
      (Diagrams.Core.V.V
         (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B))
      (Diagrams.Core.V.N
         (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B))
  {- Unfolding: (Diagrams.Core.Style.Attribute
                   @ (Diagrams.Core.V.V
                        (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B))
                   @ (Diagrams.Core.V.N
                        (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B))
                   @ Diagrams.Attributes.Opacity
                   Diagrams.Attributes.$fAttributeClassOpacity
                   Lib.chord16
                     `cast`
                   (Trans
                        (Sym (Data.Monoid.NTCo:Product[0] <GHC.Types.Double>_R))
                        (Sym (Diagrams.Attributes.NTCo:Opacity[0])))) -}
331998123272130f2e1d9e7d74342e49
  rhythmsWithSync12 ::
    Diagrams.Core.Types.QDiagram
      Diagrams.Backend.SVG.B
      Linear.V2.V2
      GHC.Types.Double
      Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                   @ Diagrams.Backend.SVG.B
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1
                   Data.Semigroup.$fSemigroupAny) -}
f78aa9fdfeb82cc7af322f874e5ba910
  rhythmsWithSync2 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U>,
     Unfolding: (\ sepa :: GHC.Types.Double
                   oscs1 :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                              Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 Lib.rhythmsWithSync9
                   (Lib.rhythmsWithSync4
                      (case Lib.$wgo2 oscs1 of ww { (#,#) ww1 ww2 ->
                       let {
                         grid' :: [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
                         = Lib.rhythmsWithSync_go1
                             ww2
                             (case GHC.Real.$wnumericEnumFromThen
                                     @ GHC.Types.Double
                                     GHC.Float.$fFractionalDouble
                                     Lib.chord_a23
                                     (GHC.Float.negateDouble sepa) of ww3 { (#,#) ww4 ww5 ->
                              GHC.Base.map
                                @ GHC.Types.Double
                                @ (Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
                                Lib.rhythmsWithSync3
                                (GHC.Types.: @ GHC.Types.Double ww4 ww5) })
                       } in
                       Diagrams.Core.Types.$fMonoidQDiagram_$cmconcat
                         @ Diagrams.Backend.SVG.SVG
                         @ Linear.V2.V2
                         @ GHC.Types.Double
                         @ Data.Monoid.Any
                         Linear.V2.$fMetricV2
                         Lib.$s$fMonoidQDiagram1
                         Data.Semigroup.$fSemigroupAny
                         (Lib.rhythmsWithSync_go
                            grid'
                            (case grid' of wild {
                               []
                               -> GHC.List.scanl2
                                    @ [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
                               : ds1 xs -> xs })
                            grid') }))) -}
de5cb6326e3c5523cfd0504b474a4c11
  rhythmsWithSync3 ::
    GHC.Types.Double
    -> Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: GHC.Types.Double ->
                 case ds of wild { GHC.Types.D# x1 ->
                 (Linear.V2.V2
                    @ GHC.Types.Double
                    (GHC.Types.D# (GHC.Prim.*## x1 0.0))
                    (GHC.Types.D# x1))
                   `cast`
                 (Sym (Linear.Affine.NTCo:Point[0]
                           <Linear.V2.V2>_R) <GHC.Types.Double>_N) }) -}
e774db9c75a5e8b0439ce2b280488e4d
  rhythmsWithSync4 ::
    Diagrams.Core.Types.QDiagram
      Diagrams.Backend.SVG.B
      Linear.V2.V2
      GHC.Types.Double
      Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (case Diagrams.Core.V.$p1InSpace
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        @ (Diagrams.Core.Types.QDiagram
                             Diagrams.Backend.SVG.B
                             Linear.V2.V2
                             GHC.Types.Double
                             Data.Monoid.Any)
                        Lib.$slc_$dInSpace of cobox { GHC.Types.Eq# cobox1 ->
                 case Diagrams.Core.V.$p2InSpace
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        @ (Diagrams.Core.Types.QDiagram
                             Diagrams.Backend.SVG.B
                             Linear.V2.V2
                             GHC.Types.Double
                             Data.Monoid.Any)
                        Lib.$slc_$dInSpace of cobox2 { GHC.Types.Eq# cobox3 ->
                 Lib.rhythmsWithSync8
                   Lib.rhythmsWithSync5
                     `cast`
                   (Diagrams.Core.Transform.Transformation
                      (Sub (Sym cobox1)) (Sym cobox3))_R } }) -}
b5de62dadc39cf2d99141972ab904772
  rhythmsWithSync5 ::
    Diagrams.Core.Transform.Transformation
      Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Core.Transform.Transformation
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   (Diagrams.Core.Transform.$fMonoid:-:_$cmempty
                      @ (Linear.V2.V2 GHC.Types.Double))
                   (Diagrams.Core.Transform.$fMonoid:-:_$cmempty
                      @ (Linear.V2.V2 GHC.Types.Double))
                   Lib.rhythmsWithSync6) -}
66d7c8465c5ad8007e0d1542fc4db1cb
  rhythmsWithSync6 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (case Linear.Vector.zero
                        @ Linear.V2.V2
                        Lib.polyRhythm11
                        @ GHC.Types.Double
                        Lib.rhythmsWithSync7 of wild { Linear.V2.V2 a25 b ->
                 Linear.V2.V2 @ GHC.Types.Double a25 Lib.polyRhythm28 }) -}
0e748d33f71710bca77d05fec96913ce
  rhythmsWithSync7 :: GHC.Num.Num GHC.Types.Double
  {- Unfolding: (Diagrams.Core.V.$p4InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$slc_$dInSpace) -}
af79d82e1f5dbad71429446b9dedf93c
  rhythmsWithSync8 ::
    Diagrams.Core.Transform.Transformation
      (Diagrams.Core.V.V
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
      (Diagrams.Core.V.N
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Core.Types.$fHasOriginQDiagram_$ctransform
                   @ Diagrams.Backend.SVG.SVG
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Lib.$s$fMonoidQDiagram1
                   Linear.V2.$fMetricV2
                   Data.Semigroup.$fSemigroupAny) -}
da1e225e83ea203a4e97a7ff1483bc3a
  rhythmsWithSync9 ::
    Diagrams.Core.Types.QDiagram
      Diagrams.Backend.SVG.SVG
      Linear.V2.V2
      GHC.Types.Double
      Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Lib.$slc2
                   Lib.rhythmsWithSync10
                     `cast`
                   (Sym (Diagrams.Core.Style.NTCo:Style[0]
                             (Diagrams.Core.V.V
                                (Diagrams.Core.Types.QDiagram
                                   <Diagrams.Backend.SVG.B>_N
                                   (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                                   (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                                   <Data.Monoid.Any>_N)_N)_N
                             (Diagrams.Core.V.N
                                (Diagrams.Core.Types.QDiagram
                                   <Diagrams.Backend.SVG.B>_N
                                   (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                                   (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                                   <Data.Monoid.Any>_N)_N)_N))) -}
6cd11101cecbfdcd96981aff12cdbd7b
  rhythmsWithSync_go ::
    [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
    -> [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
    -> [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
    -> [Diagrams.Core.Types.QDiagram
          Diagrams.Backend.SVG.B
          Linear.V2.V2
          GHC.Types.Double
          Data.Monoid.Any]
  {- Arity: 3, Strictness: <S,1*U><L,1*U><L,1*U> -}
93a28c9e315208c88cd0cee15514e3b2
  rhythmsWithSync_go1 ::
    [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
    -> [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
    -> [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
3ff8f08429d2d3d93100c1cd9cc77614
  rhythms_f ::
    Diagrams.TwoD.Attributes.Texture GHC.Types.Double
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Unfolding: (Diagrams.TwoD.Attributes.lineTexture
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                   Lib.$slc_$dInSpace
                     `cast`
                   (Diagrams.Core.V.InSpace
                      <Linear.V2.V2>_N
                      <GHC.Types.Double>_N
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R
                   Lib.$s$fRenderablePathSVG3
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <GHC.Types.Double>_N))
                   GHC.Float.$fFloatingDouble
                   Lib.$slc2
                     `cast`
                   (Sym (Diagrams.Core.Style.NTCo:HasStyle[0]
                             (Diagrams.Core.Types.QDiagram
                                <Diagrams.Backend.SVG.B>_N
                                (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                <Data.Monoid.Any>_N)_N))) -}
7ccbf0baa4b1ee69a284ec9fa36f397d
  tone ::
    GHC.Types.Double
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 1, Unfolding: (Lib.osc Lib.chord7) -}
7ab7ab2c5c0052940fc810c436145ae9
  tones ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Array.Repa.Base.Array
         Data.Array.Repa.Repr.Unboxed.U
         Data.Array.Repa.Index.DIM1
         GHC.Types.Double
    -> GHC.Types.Double
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 4, Unfolding: (Lib.polyOsc Lib.tone Lib.tones1) -}
e899e08ac4d2ddd40afa2735085f27f2
  tones1 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 1,
     Unfolding: (Lib.oscs
                   Lib.chord6
                     `cast`
                   (<Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_R
                    ->_R (Diagrams.Core.Types.QDiagram
                            <Diagrams.Backend.SVG.B>_N
                            (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                            (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                            <Data.Monoid.Any>_R)_R)) -}
"SPEC/Lib $fEq:. @ Z @ Int" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                      Data.Array.Repa.Index.Z
                                            $dEq1 :: GHC.Classes.Eq GHC.Types.Int
  Data.Array.Repa.Index.$fEq:. @ Data.Array.Repa.Index.Z
                               @ GHC.Types.Int
                               $dEq
                               $dEq1
  = Lib.$s!_$s$fEq:.
"SPEC/Lib $fFractionalV2 @ Double" [ALWAYS] forall $dNum :: GHC.Num.Num
                                                              (Linear.V2.V2 GHC.Types.Double)
                                                   $dFractional :: GHC.Real.Fractional
                                                                     GHC.Types.Double
  Linear.V2.$fFractionalV2 @ GHC.Types.Double $dNum $dFractional
  = Lib.$s$fFractionalV2
"SPEC/Lib $fMonoidQDiagram _ @ V2 @ Double @ Any" [ALWAYS] forall @ b
                                                                  $dMetric :: Linear.Metric.Metric
                                                                                Linear.V2.V2
                                                                  $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                                      GHC.Types.Double
                                                                  $dSemigroup :: Data.Semigroup.Semigroup
                                                                                   Data.Monoid.Any
  Diagrams.Core.Types.$fMonoidQDiagram @ b
                                       @ Linear.V2.V2
                                       @ GHC.Types.Double
                                       @ Data.Monoid.Any
                                       $dMetric
                                       $dOrderedField
                                       $dSemigroup
  = Lib.$s$fMonoidQDiagram @ b
"SPEC/Lib $fNumV2 @ Double" [ALWAYS] forall $dNum :: GHC.Num.Num
                                                       GHC.Types.Double
  Linear.V2.$fNumV2 @ GHC.Types.Double $dNum
  = Lib.$s$fFractionalV2_$s$fNumV2
"SPEC/Lib $fRenderablePathSVG @ Double" [ALWAYS] forall $dTransformable :: Diagrams.Core.Transform.Transformable
                                                                             (Diagrams.Path.Path
                                                                                Linear.V2.V2
                                                                                GHC.Types.Double)
                                                        tup :: Graphics.Rendering.SVG.SVGFloat
                                                                 GHC.Types.Double
  Diagrams.Backend.SVG.$fRenderablePathSVG @ GHC.Types.Double
                                           $dTransformable
                                           tup
  = Lib.$s$fRenderablePathSVG
"SPEC/Lib $fSemigroupQDiagram _ @ V2 @ Double @ Any" [ALWAYS] forall @ b
                                                                     $dMetric :: Linear.Metric.Metric
                                                                                   Linear.V2.V2
                                                                     $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                                         GHC.Types.Double
                                                                     $dSemigroup :: Data.Semigroup.Semigroup
                                                                                      Data.Monoid.Any
  Diagrams.Core.Types.$fSemigroupQDiagram @ b
                                          @ Linear.V2.V2
                                          @ GHC.Types.Double
                                          @ Data.Monoid.Any
                                          $dMetric
                                          $dOrderedField
                                          $dSemigroup
  = Lib.$s$fSemigroupQDiagram @ b
"SPEC/Lib $fSemigroupQDiagram_$cstimes _ @ V2 @ Double @ Any" [ALWAYS] forall @ b
                                                                              $dMetric :: Linear.Metric.Metric
                                                                                            Linear.V2.V2
                                                                              $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                                                  GHC.Types.Double
                                                                              $dSemigroup :: Data.Semigroup.Semigroup
                                                                                               Data.Monoid.Any
  Diagrams.Core.Types.$fSemigroupQDiagram_$cstimes @ b
                                                   @ Linear.V2.V2
                                                   @ GHC.Types.Double
                                                   @ Data.Monoid.Any
                                                   $dMetric
                                                   $dOrderedField
                                                   $dSemigroup
  = Lib.$s$fSemigroupQDiagram_$s$fSemigroupQDiagram_$cstimes @ b
"SPEC/Lib $fShape:. @ Z" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                   (Data.Array.Repa.Index.Z
                                                    Data.Array.Repa.Index.:. GHC.Types.Int)
                                         $dShape :: Data.Array.Repa.Shape.Shape
                                                      Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:. @ Data.Array.Repa.Index.Z
                                  $dEq
                                  $dShape
  = Lib.$s!_$s$fShape:.
"SPEC/Lib $fShape:._$caddDim @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                       (Data.Array.Repa.Index.Z
                                                        Data.Array.Repa.Index.:. GHC.Types.Int)
                                             $dShape :: Data.Array.Repa.Shape.Shape
                                                          Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$caddDim @ Data.Array.Repa.Index.Z
                                           $dEq
                                           $dShape
  = Lib.$s$fShape:._$caddDim
"SPEC/Lib $fShape:._$cdeepSeq @ Z" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                             (Data.Array.Repa.Index.Z
                                                              Data.Array.Repa.Index.:. GHC.Types.Int)
                                                   $dShape :: Data.Array.Repa.Shape.Shape
                                                                Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$cdeepSeq @ Data.Array.Repa.Index.Z
                                            $dEq
                                            $dShape
  = Lib.$s!_$s$fShape:._$cdeepSeq
"SPEC/Lib $fShape:._$cfromIndex @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                          (Data.Array.Repa.Index.Z
                                                           Data.Array.Repa.Index.:. GHC.Types.Int)
                                                $dShape :: Data.Array.Repa.Shape.Shape
                                                             Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$cfromIndex @ Data.Array.Repa.Index.Z
                                              $dEq
                                              $dShape
  = Lib.$s$fShape:._$cfromIndex
"SPEC/Lib $fShape:._$cinShapeRange @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                             (Data.Array.Repa.Index.Z
                                                              Data.Array.Repa.Index.:. GHC.Types.Int)
                                                   $dShape :: Data.Array.Repa.Shape.Shape
                                                                Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$cinShapeRange @ Data.Array.Repa.Index.Z
                                                 $dEq
                                                 $dShape
  = Lib.$s$fShape:._$cinShapeRange
"SPEC/Lib $fShape:._$cintersectDim @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                             (Data.Array.Repa.Index.Z
                                                              Data.Array.Repa.Index.:. GHC.Types.Int)
                                                   $dShape :: Data.Array.Repa.Shape.Shape
                                                                Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$cintersectDim @ Data.Array.Repa.Index.Z
                                                 $dEq
                                                 $dShape
  = Lib.$s$fShape:._$cintersectDim
"SPEC/Lib $fShape:._$crank @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                     (Data.Array.Repa.Index.Z
                                                      Data.Array.Repa.Index.:. GHC.Types.Int)
                                           $dShape :: Data.Array.Repa.Shape.Shape
                                                        Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$crank @ Data.Array.Repa.Index.Z
                                         $dEq
                                         $dShape
  = Lib.$s$fShape:._$crank
"SPEC/Lib $fShape:._$csize @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                     (Data.Array.Repa.Index.Z
                                                      Data.Array.Repa.Index.:. GHC.Types.Int)
                                           $dShape :: Data.Array.Repa.Shape.Shape
                                                        Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$csize @ Data.Array.Repa.Index.Z
                                         $dEq
                                         $dShape
  = Lib.$s$fShape:._$csize
"SPEC/Lib $fShape:._$csizeIsValid @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                            (Data.Array.Repa.Index.Z
                                                             Data.Array.Repa.Index.:. GHC.Types.Int)
                                                  $dShape :: Data.Array.Repa.Shape.Shape
                                                               Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$csizeIsValid @ Data.Array.Repa.Index.Z
                                                $dEq
                                                $dShape
  = Lib.$s$fShape:._$csizeIsValid
"SPEC/Lib $fShape:._$ctoIndex @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                        (Data.Array.Repa.Index.Z
                                                         Data.Array.Repa.Index.:. GHC.Types.Int)
                                              $dShape :: Data.Array.Repa.Shape.Shape
                                                           Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$ctoIndex @ Data.Array.Repa.Index.Z
                                            $dEq
                                            $dShape
  = Lib.$s$fShape:._$ctoIndex
"SPEC/Lib $fTargetUe @ Double" [ALWAYS] forall $dUnbox :: Data.Vector.Unboxed.Base.Unbox
                                                            GHC.Types.Double
  Data.Array.Repa.Repr.Unboxed.$fTargetUe @ GHC.Types.Double $dUnbox
  = Lib.$s$fTargetUe
"SPEC/Lib $fTargetUe_$cdeepSeqMVec @ Double" [ALWAYS] forall $dUnbox :: Data.Vector.Unboxed.Base.Unbox
                                                                          GHC.Types.Double
  Data.Array.Repa.Repr.Unboxed.$fTargetUe_$cdeepSeqMVec @ GHC.Types.Double
                                                        $dUnbox
  = Lib.$s$fTargetUe_$s$fTargetUe_$cdeepSeqMVec
"SPEC/Lib $fTargetUe_$cunsafeFreezeMVec @ Double" [ALWAYS] forall $dUnbox :: Data.Vector.Unboxed.Base.Unbox
                                                                               GHC.Types.Double
  Data.Array.Repa.Repr.Unboxed.$fTargetUe_$cunsafeFreezeMVec @ GHC.Types.Double
                                                             $dUnbox
  = Lib.$s$fTargetUe_$s$fTargetUe_$cunsafeFreezeMVec
"SPEC/Lib $fTargetUe_$cunsafeWriteMVec @ Double" [ALWAYS] forall $dUnbox :: Data.Vector.Unboxed.Base.Unbox
                                                                              GHC.Types.Double
  Data.Array.Repa.Repr.Unboxed.$fTargetUe_$cunsafeWriteMVec @ GHC.Types.Double
                                                            $dUnbox
  = Lib.$s$fTargetUe_$s$fTargetUe_$cunsafeWriteMVec
"SPEC/Lib $fTrailLikeLocated @ (Trail V2 Double)" [ALWAYS] forall $dMetric :: Linear.Metric.Metric
                                                                                (Diagrams.Core.V.V
                                                                                   (Diagrams.Located.Located
                                                                                      (Diagrams.Trail.Trail
                                                                                         Linear.V2.V2
                                                                                         GHC.Types.Double)))
                                                                  $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                                      (Diagrams.Core.V.N
                                                                                         (Diagrams.Located.Located
                                                                                            (Diagrams.Trail.Trail
                                                                                               Linear.V2.V2
                                                                                               GHC.Types.Double)))
                                                                  $dTrailLike :: Diagrams.TrailLike.TrailLike
                                                                                   (Diagrams.Trail.Trail
                                                                                      Linear.V2.V2
                                                                                      GHC.Types.Double)
  Diagrams.TrailLike.$fTrailLikeLocated @ (Diagrams.Trail.Trail
                                             Linear.V2.V2 GHC.Types.Double)
                                        $dMetric
                                        $dOrderedField
                                        $dTrailLike
  = Lib.$s$fTrailLikeLocated
"SPEC/Lib $fTrailLikeTrail @ V2 @ Double" [ALWAYS] forall $dMetric :: Linear.Metric.Metric
                                                                        (Diagrams.Core.V.V
                                                                           (Diagrams.Trail.Trail
                                                                              Linear.V2.V2
                                                                              GHC.Types.Double))
                                                          $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                              (Diagrams.Core.V.N
                                                                                 (Diagrams.Trail.Trail
                                                                                    Linear.V2.V2
                                                                                    GHC.Types.Double))
                                                          $dMetric1 :: Linear.Metric.Metric
                                                                         Linear.V2.V2
                                                          $dOrderedField1 :: Diagrams.Core.Envelope.OrderedField
                                                                               GHC.Types.Double
  Diagrams.TrailLike.$fTrailLikeTrail @ Linear.V2.V2
                                      @ GHC.Types.Double
                                      $dMetric
                                      $dOrderedField
                                      $dMetric1
                                      $dOrderedField1
  = Lib.$s$fTrailLikeTrail
"SPEC/Lib length @ Vector @ Double" [ALWAYS] forall $dVector :: Data.Vector.Generic.Base.Vector
                                                                  Data.Vector.Unboxed.Base.Vector
                                                                  GHC.Types.Double
  Data.Vector.Generic.length @ Data.Vector.Unboxed.Base.Vector
                             @ GHC.Types.Double
                             $dVector
  = Lib.$s!_$slength
"SPEC/Lib unitX @ V2 @ Double" [ALWAYS] forall $dR1 :: Linear.V1.R1
                                                         Linear.V2.V2
                                               $dAdditive :: Linear.Vector.Additive Linear.V2.V2
                                               $dNum :: GHC.Num.Num GHC.Types.Double
  Diagrams.TwoD.Vector.unitX @ Linear.V2.V2
                             @ GHC.Types.Double
                             $dR1
                             $dAdditive
                             $dNum
  = Lib.$sunitX
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

