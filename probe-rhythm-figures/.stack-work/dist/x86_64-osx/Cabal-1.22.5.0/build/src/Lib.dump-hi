
==================== FINAL INTERFACE ====================
2016-09-19 16:17:30.611537 UTC

interface probe_G2rIiywLUzz2z377ALaJVY:Lib 7103
  interface hash: ea6a86c5e603a510a7eca731443d1344
  ABI hash: 36ab6011bbd6453231e3c564028f8247
  export-list hash: dc98d4cdebad7d2f9c17a8f9e9c95cfd
  orphan hash: b853aee31d3e43eb0e644b22ce96884b
  flag hash: 0d0e8bf775f5cba7cce7221067c4042c
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.beside'
  Lib.chord
  Lib.eqt
  Lib.farey
  Lib.hdist
  Lib.labelOscs
  Lib.labelPolyOsc
  Lib.oscScale
  Lib.polyRhythm
  Lib.rhythms
  Lib.rhythmsWithSync
  Lib.tones
  Lib.vdist
module dependencies:
package dependencies: JuicyPixels-3.2.7.2@Juicy_FsUyw0EJkIqKIuj8ORojoT
                      StateVar-1.1.0.4@State_IOvB80WkYNkEizdt0JVpzy
                      active-0.2.0.10@activ_EndpnTck6Qn4ZBG7VTfRFy
                      adjunctions-4.3@adjun_HUA1si0oygHIohE6wWvtj8
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      ansi-wl-pprint-0.6.7.3@ansiw_KTAhiPa3RNI09mbeoAwSSX
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      async-2.1.0@async_KuqnF1GrhHK5nNp6Zzm3jy base-4.8.2.0
                      base64-bytestring-1.0.0.1@base6_AkCk8zInckjJsyQ4AIFHPN
                      base-orphans-0.5.4@baseo_0gFtKFBT26OGSKHmmdqdfx
                      bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      blaze-builder-0.4.0.2@blaze_5LQurmvTy7l9rPlWgPlNE4
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      bytes-0.15.2@bytes_LGwqVSlCJrR4BGoUsj8EWt
                      cereal-0.5.2.0@cerea_GKnWyxn5hRWK9xfCMeMEL8
                      colour-2.3.3@colou_4tkGkumXZDK9tS5HCSa7Y0
                      comonad-4.2.7.2@comon_5wEqfQVXg9MGfIPxSKfS4M
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      contravariant-1.4@contr_7gFjdZ6ciei9744gjZQMHp
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx
                      diagrams-solve-0.1.0.1@diagr_4QN76f31u5VGJm9TMFt1id
                      diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos
                      diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      distributive-0.5.0.2@distr_55SIdsoyihS4jXBaaVvPQX
                      dual-tree-0.2.0.9@dualt_5jNsABX0YwSIha1EAMeU6i
                      exceptions-0.8.3@excep_BEih2K3eMGTE4cg5iulra8
                      fail-4.9.0.0@fail_2xB1AvdW34sDm9N3JOe33G
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m
                      fingertree-0.1.1.0@finge_1lOqL113GSbGT54Xr1ttX9
                      free-4.12.4@free_D8pop1Lncn7BkE4zjJTjla
                      fsnotify-0.2.1@fsnot_6GshfYbGW9a0XQQFUIcEx3 ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I
                      hfsevents-0.1.6@hfsev_GV1CDMEJaKE6yriQq8fXZ2
                      hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz integer-gmp-1.0.0.0
                      intervals-0.7.2@inter_CVqja9i5ZjWEnJ4aryb7v4
                      kan-extensions-4.2.3@kanex_8yLFa561sPQJZ5XPOmzMGi
                      lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if
                      linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv
                      lucid-2.9.6@lucid_HB98YTuafJo82fcOQnijha
                      lucid-svg-0.6.0.1@lucid_IfaODiCffQ9JIcJQYUi8er
                      mmorph-1.0.6@mmorp_42KUkOfzC6q3qCtAMiSHam
                      monoid-extras-0.4.2@monoi_H1bs9gF4pIcGpoc15tQgor
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      newtype-0.2@newty_Bn42BOEtLjZ0LahRn80jTb
                      optparse-applicative-0.12.1.0@optpa_FpNJ7fLofFNEy3rK4ZnBoD
                      prelude-extras-0.4.0.3@prelu_1gQpKVfMHul71LsAFgGRhv
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      profunctors-5.2@profu_LHFqrYSAR0z1HJQ4sjj1Mu
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      reflection-2.1.2@refle_Is9SiIf9zRHG2wDNDxPaS9
                      scientific-0.3.4.9@scien_1WVNjGUftkQ9QzH4DOM2n1
                      semigroupoids-5.0.1@semig_GRN7TOS9fx09tFw63gc4EK
                      semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1
                      split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6 template-haskell-2.10.0.0
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unix-compat-0.4.1.4@unixc_Km8uiabmElX5mrb8D4Fywe
                      unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu
orphans: active-0.2.0.10@activ_EndpnTck6Qn4ZBG7VTfRFy:Data.Active
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         base-orphans-0.5.4@baseo_0gFtKFBT26OGSKHmmdqdfx:Data.Orphans
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         colour-2.3.3@colou_4tkGkumXZDK9tS5HCSa7Y0:Data.Colour
         diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx:Diagrams.Backend.SVG.CmdLine
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Animation.Active
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.ThreeD.Types
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Trail
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Path
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Segment
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Types
         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Points
         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Types
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Element
         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Util
         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Vector
         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Numeric.Matrix
         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Numeric.Vector
         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Instances
         monoid-extras-0.4.2@monoi_H1bs9gF4pIcGpoc15tQgor:Data.Monoid.MList
         reflection-2.1.2@refle_Is9SiIf9zRHG2wDNDxPaS9:Data.Reflection
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: JuicyPixels-3.2.7.2@Juicy_FsUyw0EJkIqKIuj8ORojoT:Codec.Picture.Tga
                         JuicyPixels-3.2.7.2@Juicy_FsUyw0EJkIqKIuj8ORojoT:Codec.Picture.Tiff
                         JuicyPixels-3.2.7.2@Juicy_FsUyw0EJkIqKIuj8ORojoT:Codec.Picture.Types
                         active-0.2.0.10@activ_EndpnTck6Qn4ZBG7VTfRFy:Data.Active
                         adjunctions-4.3@adjun_HUA1si0oygHIohE6wWvtj8:Data.Functor.Rep
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         base-4.8.2.0:GHC.TypeLits
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Biff
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Clown
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Flip
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Join
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Joker
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Product
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Sum
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Tannen
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Wrapped
                         bytes-0.15.2@bytes_LGwqVSlCJrR4BGoUsj8EWt:Data.Bytes.Get
                         bytes-0.15.2@bytes_LGwqVSlCJrR4BGoUsj8EWt:Data.Bytes.Signed
                         bytes-0.15.2@bytes_LGwqVSlCJrR4BGoUsj8EWt:Data.Bytes.VarInt
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx:Diagrams.Backend.SVG
                         diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx:Diagrams.Backend.SVG.CmdLine
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Angle
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Animation.Active
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Backend.CmdLine
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.BoundingBox
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Coordinates
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Direction
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Located
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Path
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Segment
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Size
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Tangent
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.ThreeD.Camera
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.ThreeD.Light
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.ThreeD.Shapes
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.ThreeD.Types
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Trail
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Attributes
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Image
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Path
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Segment.Bernstein
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Text
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Types
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Envelope
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Measure
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Names
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Points
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Query
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Style
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Trace
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Transform
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Types
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.V
                         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Devel
                         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Matrix
                         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Modular
                         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Numeric
                         intervals-0.7.2@inter_CVqja9i5ZjWEnJ4aryb7v4:Numeric.Interval.Kaucher
                         kan-extensions-4.2.3@kanex_8yLFa561sPQJZ5XPOmzMGi:Data.Functor.Yoneda
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.At
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Internal.Indexed
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Internal.Zoom
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Reified
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Tuple
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Wrapped
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Affine
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Plucker
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Quaternion
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V0
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V1
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V2
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V3
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V4
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         profunctors-5.2@profu_LHFqrYSAR0z1HJQ4sjj1Mu:Data.Profunctor.Rep
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.List.NonEmpty
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.Semigroup
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashSet
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
                         zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu:Codec.Compression.Zlib.Stream
import  -/  base-4.8.2.0:Control.Arrow ab7f126fed349de468f94ac777dc8f4e
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Function 6b13a8d3a5e3bd757a91434dce3fc7f3
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:Data.Tuple 012ad951a59a9d85fe1de36a2f012986
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Float e532d434ec2447d809887c0fca1d78a5
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  colour-2.3.3@colou_4tkGkumXZDK9tS5HCSa7Y0:Data.Colour.Internal c20506210de7efa28736509943f23e6a
import  -/  diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx:Diagrams.Backend.SVG c562a010d4595b18d96d53f74cf07048
import  -/  diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx:Diagrams.Backend.SVG.CmdLine dbe49f9e9d2cb2d4320daa55800596bc
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Angle c477bc8203c82b6b08ba26a48767798a
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Attributes e945f2a5f87fb235562bae36a3c6bb4a
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Combinators 7b77613aefaf8597e8ee70feb2ce44b6
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Coordinates 7f387e4b397793d7c5397c5ee97f282a
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.CubicSpline 2f6846320e30ffa671b1d0d42e59c0a7
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Located f3c9207b3d0bc09ee24792b0842d6336
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Parametric 7634c31d349bf40bec0b69474240d46c
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Prelude 0f0b2fe832b1921709da84f6a857570f
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Segment 2b04359ef9a61229df01d2bb7ff95936
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Trail 4d5ca131a4b41262b2cda77b553bdef5
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TrailLike fb3426a9fbba5e2a34617c60350ba21c
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Align 0295e9e280ccccb4b611acd089fd3075
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Attributes b3e78a4dd9a8d93e24a7556a777bd61a
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Combinators 03231dedce72c19a9bc778ea7b256eed
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Path bfcb360c51da34d703d00c4826347048
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Shapes 3a4acfa0de3b0a4712b821a6631e632e
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Size cd7ea9a5a38f1bc969b043d812a315b2
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Text 189af8ca2b3159b4323696fdc02a9ff0
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Transform fb786e473269a475ce61f25b3d039d31
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Types 5b80bccbd13380ff61de84fba9aa6866
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Vector 1c596ab9358c7ea1c5e7f0a44ab251dc
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Util c1d249654ca2108c93e5f23664b382b3
import  -/  diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Types b26bfe70fb5690d8bf4d222cdc975e30
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Container 15e064ebb72d02d745e2d41c58d36b71
import  -/  hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Util a1800fa260fb2c6a63231b949f2e9a56
import  -/  hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Vector b0399c52da44b2d43a18d6540863edd5
import  -/  hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Numeric.LinearAlgebra.Data 2eb4564f65b2fcb1a7ad5c48cbb49507
import  -/  lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Getter 105503d237cde0a4a0283df0df261cdd
import  -/  lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Setter 7cb2279cdbd18e7424cc7b945ac52ae2
import  -/  linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Affine c4bd38b10598575abfa995e92f3479d0
import  -/  linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Metric b043a26170dabe6d32ee4f608e059c3a
import  -/  linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V1 f2f299a56736b3bd3ae1444710aa1996
import  -/  linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V2 08d35c0cfda723bf552ac2d085f0e2eb
import  -/  linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Vector c60d3353f143a6f7dc07e60f46ac356e
import  -/  semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.Semigroup 7e43d8b45f777a53523f0158b401b8aa
import  -/  split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE:Data.List.Split 487cc1966f0f25916f1ba58bdff4b0ee
import  -/  split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE:Data.List.Split.Internals ec8cf5264ec78ab060cadb7ee5b994f0
import  -/  vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable 7cbc4e18155a779cbf01d5724261dd19
1aa4ec35e6d50a207cf4a7d4c8316787
  $s$fAlignableQDiagram1 ::
    Data.Monoid.WithSemigroup.Monoid' Data.Monoid.Any
  {- Unfolding: (Data.Monoid.WithSemigroup.$fMonoid'm
                   @ Data.Monoid.Any
                   Data.Semigroup.$fSemigroupAny
                   Data.Monoid.$fMonoidAny) -}
3417ac04a255adb641912269ee5c709c
  $s$fAlignableQDiagram2 ::
    Diagrams.Core.Envelope.OrderedField GHC.Types.Double
  {- Unfolding: (Diagrams.Core.Envelope.$fOrderedFields
                   @ GHC.Types.Double
                   GHC.Float.$fFloatingDouble
                   GHC.Classes.$fOrdDouble) -}
8395fcc92def355e6a5480fa4c20570e
  $s$fEnvelopedQDiagram ::
    Diagrams.Core.Envelope.Enveloped
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Diagrams.Core.Types.QDiagram
                       Diagrams.Backend.SVG.SVG
                       Linear.V2.V2
                       GHC.Types.Double
                       Data.Monoid.Any)
                  Linear.V2.$fMetricV2
                    `cast`
                  (Linear.Metric.Metric
                     (Sym (Diagrams.Core.Types.TFCo:R:VQDiagram[0]
                               <Diagrams.Backend.SVG.SVG>_N
                               <Linear.V2.V2>_N
                               <GHC.Types.Double>_N
                               <Data.Monoid.Any>_N)))_R
                  Lib.$s$fAlignableQDiagram2
                    `cast`
                  (Diagrams.Core.Envelope.OrderedField
                     (Sym (Diagrams.Core.Types.TFCo:R:NQDiagram[0]
                               <Diagrams.Backend.SVG.SVG>_N
                               <Linear.V2.V2>_N
                               <GHC.Types.Double>_N
                               <Data.Monoid.Any>_N)))_R
                  (Diagrams.Core.Types.$fEnvelopedQDiagram_$cgetEnvelope
                     @ Diagrams.Backend.SVG.SVG
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                       `cast`
                     (Linear.Metric.Metric
                        (Sym (Diagrams.Core.Types.TFCo:R:VQDiagram[0]
                                  <Diagrams.Backend.SVG.SVG>_N
                                  <Linear.V2.V2>_N
                                  <GHC.Types.Double>_N
                                  <Data.Monoid.Any>_N)))_R
                     Lib.$s$fAlignableQDiagram2
                       `cast`
                     (Diagrams.Core.Envelope.OrderedField
                        (Sym (Diagrams.Core.Types.TFCo:R:NQDiagram[0]
                                  <Diagrams.Backend.SVG.SVG>_N
                                  <Linear.V2.V2>_N
                                  <GHC.Types.Double>_N
                                  <Data.Monoid.Any>_N)))_R
                     Linear.V2.$fMetricV2
                     Lib.$s$fAlignableQDiagram2
                     Lib.$s$fAlignableQDiagram1) -}
4a8105ecbb5e5e5b4b861183ffc0db3d
  $s$fFractionalV1 :: GHC.Num.Num (Linear.V2.V2 GHC.Types.Double)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fFractionalV2_$s$fNumV2 -}
5551055c8e41f24d836a71a267f3db17
  $s$fFractionalV2 ::
    GHC.Real.Fractional (Linear.V2.V2 GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V2.V2 GHC.Types.Double)
                  Lib.$s$fFractionalV1
                  (\ eta :: Linear.V2.V2 GHC.Types.Double
                     eta1 :: Linear.V2.V2 GHC.Types.Double ->
                   Linear.V2.$fAdditiveV2_$sliftA2
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     GHC.Float.$fFractionalDouble_$c/
                     eta
                     eta1)
                  (\ eta :: Linear.V2.V2 GHC.Types.Double ->
                   case eta of wild { Linear.V2.V2 a23 b ->
                   case GHC.Float.$fFractionalDouble_$crecip
                          a23 of dt { GHC.Types.D# ipv ->
                   case GHC.Float.$fFractionalDouble_$crecip
                          b of dt1 { GHC.Types.D# ipv1 ->
                   Linear.V2.V2 @ GHC.Types.Double dt dt1 } } })
                  (\ eta :: GHC.Real.Rational ->
                   let {
                     a23 :: GHC.Types.Double
                     = case eta of wild { GHC.Real.:% n d ->
                       GHC.Float.rationalToDouble n d }
                   } in
                   Linear.V2.$WV2 @ GHC.Types.Double a23 a23) -}
94064abdca4e76a4515f049b8a929100
  $s$fFractionalV2_$s$fNumV2 ::
    GHC.Num.Num (Linear.V2.V2 GHC.Types.Double)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V2.V2 GHC.Types.Double)
                  (\ eta :: Linear.V2.V2 GHC.Types.Double
                     eta1 :: Linear.V2.V2 GHC.Types.Double ->
                   Linear.V2.$fAdditiveV2_$sliftA2
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     GHC.Float.$fNumDouble_$c+
                     eta
                     eta1)
                  (\ eta :: Linear.V2.V2 GHC.Types.Double
                     eta1 :: Linear.V2.V2 GHC.Types.Double ->
                   Linear.V2.$fAdditiveV2_$sliftA2
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     GHC.Float.$fNumDouble_$c-
                     eta
                     eta1)
                  (\ eta :: Linear.V2.V2 GHC.Types.Double
                     eta1 :: Linear.V2.V2 GHC.Types.Double ->
                   Linear.V2.$fAdditiveV2_$sliftA2
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     GHC.Float.$fNumDouble_$c*
                     eta
                     eta1)
                  (\ eta :: Linear.V2.V2 GHC.Types.Double ->
                   case eta of wild { Linear.V2.V2 a23 b ->
                   case GHC.Float.$fNumDouble_$cnegate a23 of dt { GHC.Types.D# ipv ->
                   case GHC.Float.$fNumDouble_$cnegate b of dt1 { GHC.Types.D# ipv1 ->
                   Linear.V2.V2 @ GHC.Types.Double dt dt1 } } })
                  (\ eta :: Linear.V2.V2 GHC.Types.Double ->
                   case eta of wild { Linear.V2.V2 a23 b ->
                   case GHC.Float.$fNumDouble_$cabs a23 of dt { GHC.Types.D# ipv ->
                   case GHC.Float.$fNumDouble_$cabs b of dt1 { GHC.Types.D# ipv1 ->
                   Linear.V2.V2 @ GHC.Types.Double dt dt1 } } })
                  (\ eta :: Linear.V2.V2 GHC.Types.Double ->
                   case eta of wild { Linear.V2.V2 a23 b ->
                   case GHC.Float.$fNumDouble_$csignum a23 of dt { GHC.Types.D# ipv ->
                   case GHC.Float.$fNumDouble_$csignum b of dt1 { GHC.Types.D# ipv1 ->
                   Linear.V2.V2 @ GHC.Types.Double dt dt1 } } })
                  (\ eta :: GHC.Integer.Type.Integer ->
                   let {
                     a23 :: GHC.Types.Double
                     = case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                       GHC.Types.D# wild }
                   } in
                   Linear.V2.$WV2 @ GHC.Types.Double a23 a23) -}
e4dbc9ae25c0b33d36c39927bf358b55
  $s$fMonoidQDiagram ::
    GHC.Base.Monoid
      (Diagrams.Core.Types.QDiagram
         b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ b.
                  @ (Diagrams.Core.Types.QDiagram
                       b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any)
                  (Diagrams.Core.Types.$fMonoidQDiagram_$cmempty
                     @ b
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                     Lib.$s$fAlignableQDiagram2
                     Data.Semigroup.$fSemigroupAny)
                  (Diagrams.Core.Types.$fMonoidQDiagram_$cmappend
                     @ b
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                     Lib.$s$fAlignableQDiagram2
                     Data.Semigroup.$fSemigroupAny)
                  (Diagrams.Core.Types.$fMonoidQDiagram_$cmconcat
                     @ b
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                     Lib.$s$fAlignableQDiagram2
                     Data.Semigroup.$fSemigroupAny) -}
391f633bd929d73330f4f48ba8967d8c
  $s$fRenderablePathSVG ::
    Diagrams.Core.Types.Renderable
      (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double)
      Diagrams.Backend.SVG.SVG
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double)
                  @ Diagrams.Backend.SVG.SVG
                  Lib.$s$fRenderablePathSVG5
                  (Diagrams.Backend.SVG.$fRenderablePathSVG_$crender
                     @ GHC.Types.Double
                     Lib.$s$fRenderablePathSVG5
                     Lib.$s$fRenderablePathSVG1) -}
ebb19568cb097ded920dbb0bbf3bc9b0
  $s$fRenderablePathSVG1 ::
    Graphics.Rendering.SVG.SVGFloat GHC.Types.Double
  {- Strictness: m,
     Unfolding: ((GHC.Float.$fShowDouble,
                  Lib.$s$fRenderablePathSVG2)) -}
1cbf481317229bdf6e5ebdaa165095d5
  $s$fRenderablePathSVG2 ::
    Diagrams.Core.Types.TypeableFloat GHC.Types.Double
  {- Unfolding: (Diagrams.Core.Types.$fTypeableFloatn
                   @ GHC.Types.Double
                   Lib.$s$fRenderablePathSVG3
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <GHC.Types.Double>_N))
                   GHC.Float.$fRealFloatDouble) -}
ac73d5e2503c206985eab497dca74a46
  $s$fRenderablePathSVG3 ::
    GHC.Prim.Proxy# GHC.Types.Double -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# GHC.Types.Double ->
                 Lib.$s$fRenderablePathSVG4) -}
6b1743d98e7fb4192dc286aea48e29fd
  $s$fRenderablePathSVG4 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 8705313363352784917
                   __word 10768904120299974647
                   Lib.$s$fRenderablePathSVG_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
2dd23d1574e78ba7889f59dca8256c83
  $s$fRenderablePathSVG5 ::
    Diagrams.Core.Transform.Transformable
      (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double)
  {- Arity: 1, Strictness: <L,U(U(U,U),U,U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fRenderablePathSVG6
                  `cast`
                (Sym (Diagrams.Core.Transform.NTCo:Transformable[0]
                          <Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double>_N)) -}
8a42d6b083c76d2b01e5e1b87d7c5aea
  $s$fRenderablePathSVG6 ::
    Diagrams.Core.Transform.Transformation
      (Diagrams.Core.V.V
         (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double))
      (Diagrams.Core.V.N
         (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double))
    -> Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double
  {- Arity: 1, Strictness: <L,U(U(U,U),U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ w3 :: Diagrams.Core.Transform.Transformation
                           (Diagrams.Core.V.V
                              (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double))
                           (Diagrams.Core.V.N
                              (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double)) ->
                 Diagrams.Path.$w$ctransform
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Linear.V2.$fMetricV2
                   Lib.$s$fAlignableQDiagram2
                   w3) -}
8a75ad8022a5ea05dfacc379c421db7b
  $s$fRenderablePathSVG_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 8705313363352784917
                   __word 10768904120299974647
                   Lib.$s$fRenderablePathSVG_ww2
                   Lib.$s$fRenderablePathSVG_ww3
                   Lib.$s$fRenderablePathSVG_ww4) -}
45ca38f7607ee2a7eeff0e67c6591c4c
  $s$fRenderablePathSVG_ww2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "ghc-prim"#) -}
52e4925d0502f951ffa495393f7d13fe
  $s$fRenderablePathSVG_ww3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "GHC.Types"#) -}
fcef597e1d976ce6a047e9dc09a2c931
  $s$fRenderablePathSVG_ww4 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "Double"#) -}
4a2813ecee653acd7c56e6083a03d8fc
  $s$fRenderableTextSVG ::
    Diagrams.Core.Types.Renderable
      (Diagrams.TwoD.Text.Text GHC.Types.Double) Diagrams.Backend.SVG.SVG
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Diagrams.TwoD.Text.Text GHC.Types.Double)
                  @ Diagrams.Backend.SVG.SVG
                  Lib.$s$fRenderableTextSVG1
                  (Diagrams.Backend.SVG.$fRenderableTextSVG_$crender
                     @ GHC.Types.Double
                     Lib.$s$fRenderableTextSVG1
                     Lib.$s$fRenderablePathSVG1) -}
8761a7c0b3549eae15f281bb1b41da3d
  $s$fRenderableTextSVG1 ::
    Diagrams.Core.Transform.Transformable
      (Diagrams.TwoD.Text.Text GHC.Types.Double)
  {- Arity: 2,
     Strictness: <L,1*U(U(C(U(U,U)),C(U)),1*U(C(U),C(U)),1*U(U,U))><S,1*U(1*U(U(C(U(U,U)),C(U(U,U))),1*U(C(U(U,U)),C(U)),1*U(U,U)),U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fRenderableTextSVG2
                  `cast`
                (Sym (Diagrams.Core.Transform.NTCo:Transformable[0]
                          <Diagrams.TwoD.Text.Text GHC.Types.Double>_N)) -}
2a7fe357998ffe3b26c001dec3bef769
  $s$fRenderableTextSVG2 ::
    Diagrams.Core.Transform.Transformation
      (Diagrams.Core.V.V (Diagrams.TwoD.Text.Text GHC.Types.Double))
      (Diagrams.Core.V.N (Diagrams.TwoD.Text.Text GHC.Types.Double))
    -> Diagrams.TwoD.Text.Text GHC.Types.Double
    -> Diagrams.TwoD.Text.Text GHC.Types.Double
  {- Arity: 2,
     Strictness: <L,1*U(U(C(U(U,U)),C(U)),1*U(C(U),C(U)),1*U(U,U))><S,1*U(1*U(U(C(U(U,U)),C(U(U,U))),1*U(C(U(U,U)),C(U)),1*U(U,U)),U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ w1 :: Diagrams.Core.Transform.Transformation
                           (Diagrams.Core.V.V (Diagrams.TwoD.Text.Text GHC.Types.Double))
                           (Diagrams.Core.V.N (Diagrams.TwoD.Text.Text GHC.Types.Double))
                   w2 :: Diagrams.TwoD.Text.Text GHC.Types.Double ->
                 case w2 of ww { Diagrams.TwoD.Text.Text ww2 ww6 ww7 ->
                 case Diagrams.TwoD.Text.$w$ctransform
                        @ GHC.Types.Double
                        GHC.Float.$fFloatingDouble
                        w1
                        ww2
                        ww6
                        ww7 of ww8 { (#,,#) ww9 ww10 ww11 ->
                 Diagrams.TwoD.Text.Text @ GHC.Types.Double ww9 ww10 ww11 } }) -}
ce20cfb2b2940c5a92ac36412a520945
  $s$fSemigroupQDiagram ::
    Data.Semigroup.Semigroup
      (Diagrams.Core.Types.QDiagram
         b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ b.
                  @ (Diagrams.Core.Types.QDiagram
                       b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any)
                  (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                     @ b
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                     Lib.$s$fAlignableQDiagram2
                     Data.Semigroup.$fSemigroupAny)
                  (Diagrams.Core.Types.$fSemigroupQDiagram_$csconcat
                     @ b
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                     Lib.$s$fAlignableQDiagram2
                     Data.Semigroup.$fSemigroupAny)
                  (Lib.$s$fSemigroupQDiagram_$s$fSemigroupQDiagram_$cstimes @ b) -}
e4e85e9fadb50702382d712b84edfc07
  $s$fSemigroupQDiagram_$s$fSemigroupQDiagram_$cstimes ::
    GHC.Real.Integral b1 =>
    b1
    -> Diagrams.Core.Types.QDiagram
         b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
  {- Arity: 3,
     Strictness: <S(SLLLLLLLL),U(U,U,C(C1(U)),C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ b
                   @ b1
                   $dIntegral :: GHC.Real.Integral b1
                   eta :: b1
                   eta1 :: Diagrams.Core.Types.QDiagram
                             b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any ->
                 let {
                   $dReal :: GHC.Real.Real b1 = GHC.Real.$p1Integral @ b1 $dIntegral
                 } in
                 case GHC.Classes.<=
                        @ b1
                        (GHC.Real.$p2Real @ b1 $dReal)
                        eta
                        (GHC.Num.fromInteger
                           @ b1
                           (GHC.Real.$p1Real @ b1 $dReal)
                           __integer 0) of wild {
                   GHC.Types.False
                   -> let {
                        $dReal1 :: GHC.Real.Real b1 = GHC.Real.$p1Integral @ b1 $dIntegral
                      } in
                      let {
                        $dEnum :: GHC.Enum.Enum b1 = GHC.Real.$p2Integral @ b1 $dIntegral
                      } in
                      let {
                        a31 :: GHC.Classes.Ord b1 = GHC.Real.$p2Real @ b1 $dReal1
                      } in
                      let {
                        $dEq :: GHC.Classes.Eq b1 = GHC.Classes.$p1Ord @ b1 a31
                      } in
                      let {
                        $dNum :: GHC.Num.Num b1 = GHC.Real.$p1Real @ b1 $dReal1
                      } in
                      letrec {
                        f3 :: Diagrams.Core.Types.QDiagram
                                b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                              -> b1
                              -> Diagrams.Core.Types.QDiagram
                                   b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                          {- Arity: 2 -}
                        = \ x1 :: Diagrams.Core.Types.QDiagram
                                    b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                            y :: b1 ->
                          case GHC.Real.even @ b1 $dIntegral y of wild1 {
                            GHC.Types.False
                            -> case GHC.Classes.==
                                      @ b1
                                      $dEq
                                      y
                                      (GHC.Num.fromInteger @ b1 $dNum __integer 1) of wild2 {
                                 GHC.Types.False
                                 -> let {
                                      $dReal2 :: GHC.Real.Real b1
                                      = GHC.Real.$p1Integral @ b1 $dIntegral
                                    } in
                                    let {
                                      $dEnum1 :: GHC.Enum.Enum b1
                                      = GHC.Real.$p2Integral @ b1 $dIntegral
                                    } in
                                    let {
                                      a32 :: GHC.Classes.Ord b1 = GHC.Real.$p2Real @ b1 $dReal2
                                    } in
                                    let {
                                      $dEq1 :: GHC.Classes.Eq b1 = GHC.Classes.$p1Ord @ b1 a32
                                    } in
                                    let {
                                      $dNum1 :: GHC.Num.Num b1 = GHC.Real.$p1Real @ b1 $dReal2
                                    } in
                                    letrec {
                                      g2 :: Diagrams.Core.Types.QDiagram
                                              b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                                            -> b1
                                            -> Diagrams.Core.Types.QDiagram
                                                 b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                                            -> Diagrams.Core.Types.QDiagram
                                                 b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                                        {- Arity: 3 -}
                                      = \ x2 :: Diagrams.Core.Types.QDiagram
                                                  b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                                          y1 :: b1
                                          z1 :: Diagrams.Core.Types.QDiagram
                                                  b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any ->
                                        case GHC.Real.even @ b1 $dIntegral y1 of wild3 {
                                          GHC.Types.False
                                          -> case GHC.Classes.==
                                                    @ b1
                                                    $dEq1
                                                    y1
                                                    (GHC.Num.fromInteger
                                                       @ b1
                                                       $dNum1
                                                       __integer 1) of wild4 {
                                               GHC.Types.False
                                               -> g2
                                                    (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                                       @ b
                                                       @ Linear.V2.V2
                                                       @ GHC.Types.Double
                                                       @ Data.Monoid.Any
                                                       Linear.V2.$fMetricV2
                                                       Lib.$s$fAlignableQDiagram2
                                                       Data.Semigroup.$fSemigroupAny
                                                       x2
                                                       x2)
                                                    (GHC.Real.quot
                                                       @ b1
                                                       $dIntegral
                                                       (GHC.Enum.pred @ b1 $dEnum1 y1)
                                                       (GHC.Num.fromInteger
                                                          @ b1
                                                          $dNum1
                                                          __integer 2))
                                                    (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                                       @ b
                                                       @ Linear.V2.V2
                                                       @ GHC.Types.Double
                                                       @ Data.Monoid.Any
                                                       Linear.V2.$fMetricV2
                                                       Lib.$s$fAlignableQDiagram2
                                                       Data.Semigroup.$fSemigroupAny
                                                       x2
                                                       z1)
                                               GHC.Types.True
                                               -> Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                                    @ b
                                                    @ Linear.V2.V2
                                                    @ GHC.Types.Double
                                                    @ Data.Monoid.Any
                                                    Linear.V2.$fMetricV2
                                                    Lib.$s$fAlignableQDiagram2
                                                    Data.Semigroup.$fSemigroupAny
                                                    x2
                                                    z1 }
                                          GHC.Types.True
                                          -> g2
                                               (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                                  @ b
                                                  @ Linear.V2.V2
                                                  @ GHC.Types.Double
                                                  @ Data.Monoid.Any
                                                  Linear.V2.$fMetricV2
                                                  Lib.$s$fAlignableQDiagram2
                                                  Data.Semigroup.$fSemigroupAny
                                                  x2
                                                  x2)
                                               (GHC.Real.quot
                                                  @ b1
                                                  $dIntegral
                                                  y1
                                                  (GHC.Num.fromInteger @ b1 $dNum1 __integer 2))
                                               z1 }
                                    } in
                                    g2
                                      (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                         @ b
                                         @ Linear.V2.V2
                                         @ GHC.Types.Double
                                         @ Data.Monoid.Any
                                         Linear.V2.$fMetricV2
                                         Lib.$s$fAlignableQDiagram2
                                         Data.Semigroup.$fSemigroupAny
                                         x1
                                         x1)
                                      (GHC.Real.quot
                                         @ b1
                                         $dIntegral
                                         (GHC.Enum.pred @ b1 $dEnum y)
                                         (GHC.Num.fromInteger @ b1 $dNum __integer 2))
                                      x1
                                 GHC.Types.True -> x1 }
                            GHC.Types.True
                            -> f3
                                 (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                    @ b
                                    @ Linear.V2.V2
                                    @ GHC.Types.Double
                                    @ Data.Monoid.Any
                                    Linear.V2.$fMetricV2
                                    Lib.$s$fAlignableQDiagram2
                                    Data.Semigroup.$fSemigroupAny
                                    x1
                                    x1)
                                 (GHC.Real.quot
                                    @ b1
                                    $dIntegral
                                    y
                                    (GHC.Num.fromInteger @ b1 $dNum __integer 2)) }
                      } in
                      f3 eta1 eta
                   GHC.Types.True
                   -> GHC.Err.error
                        @ (Diagrams.Core.Types.QDiagram
                             b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any)
                        (GHC.Base.build
                           @ GHC.Types.Char
                           (\ @ b2 ->
                            GHC.CString.unpackFoldrCString#
                              @ b2
                              "stimes: positive multiplier expected"#)) }) -}
ae8089c6ba2955a05f199be5ee0a1778
  $s$fTrailLikeLocated ::
    Diagrams.TrailLike.TrailLike
      (Diagrams.Located.Located
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Diagrams.Located.Located
                       (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                  Linear.V2.$fMetricV2
                    `cast`
                  (Linear.Metric.Metric
                     (Trans
                          (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                                    <Linear.V2.V2>_N <GHC.Types.Double>_N))
                          (Sym (Diagrams.Located.TFCo:R:VLocated[0]
                                    <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N))))_R
                  Lib.$s$fAlignableQDiagram2
                    `cast`
                  (Diagrams.Core.Envelope.OrderedField
                     (Trans
                          (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                    <Linear.V2.V2>_N <GHC.Types.Double>_N))
                          (Sym (Diagrams.Located.TFCo:R:NLocated[0]
                                    <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N))))_R
                  Lib.$s$fTrailLikeLocated1 -}
c3d30d7a17e27310f3a0ad51819df4ca
  $s$fTrailLikeLocated1 ::
    Diagrams.Located.Located
      (Diagrams.Trail.Trail
         (Diagrams.Core.V.V
            (Diagrams.Located.Located
               (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))
         (Diagrams.Core.V.N
            (Diagrams.Located.Located
               (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))))
    -> Diagrams.Located.Located
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(1*U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ t1 :: Diagrams.Located.Located
                           (Diagrams.Trail.Trail
                              (Diagrams.Core.V.V
                                 (Diagrams.Located.Located
                                    (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))
                              (Diagrams.Core.V.N
                                 (Diagrams.Located.Located
                                    (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))) ->
                 Diagrams.Located.Loc
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   (Diagrams.Located.loc
                      @ (Diagrams.Trail.Trail
                           (Diagrams.Core.V.V
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                           (Diagrams.Core.V.N
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))
                      t1
                        `cast`
                      (Diagrams.Located.Located
                         (Diagrams.Trail.Trail
                            (Diagrams.Located.TFCo:R:VLocated[0]
                                 <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)
                            (Diagrams.Located.TFCo:R:NLocated[0]
                                 <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N))_N)_R)
                     `cast`
                   (Linear.Affine.Point
                      (Sub (Diagrams.Trail.TFCo:R:VTrail[0]
                                <Diagrams.Core.V.V
                                   (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)>_N
                                <Diagrams.Core.V.N
                                   (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)>_N))
                      (Diagrams.Trail.TFCo:R:NTrail[0]
                           <Diagrams.Core.V.V
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)>_N
                           <Diagrams.Core.V.N
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)>_N))_R
                   (Diagrams.Located.unLoc
                      @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                      t1
                        `cast`
                      (Diagrams.Located.Located
                         (Diagrams.Trail.Trail
                            (Trans
                                 (Diagrams.Located.TFCo:R:VLocated[0]
                                      <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)
                                 (Diagrams.Trail.TFCo:R:VTrail[0]
                                      <Linear.V2.V2>_N <GHC.Types.Double>_N))
                            (Trans
                                 (Diagrams.Located.TFCo:R:NLocated[0]
                                      <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)
                                 (Diagrams.Trail.TFCo:R:NTrail[0]
                                      <Linear.V2.V2>_N <GHC.Types.Double>_N)))_N)_R)) -}
62d97ed1f389032219e4a3b3f308c26d
  $s$fTrailLikeQDiagram ::
    Diagrams.TrailLike.TrailLike
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Diagrams.Core.Types.QDiagram
                       Diagrams.Backend.SVG.SVG
                       Linear.V2.V2
                       GHC.Types.Double
                       Data.Monoid.Any)
                  Linear.V2.$fMetricV2
                    `cast`
                  (Linear.Metric.Metric
                     (Sym (Diagrams.Core.Types.TFCo:R:VQDiagram[0]
                               <Diagrams.Backend.SVG.SVG>_N
                               <Linear.V2.V2>_N
                               <GHC.Types.Double>_N
                               <Data.Monoid.Any>_N)))_R
                  Lib.$s$fAlignableQDiagram2
                    `cast`
                  (Diagrams.Core.Envelope.OrderedField
                     (Sym (Diagrams.Core.Types.TFCo:R:NQDiagram[0]
                               <Diagrams.Backend.SVG.SVG>_N
                               <Linear.V2.V2>_N
                               <GHC.Types.Double>_N
                               <Data.Monoid.Any>_N)))_R
                  (Diagrams.TwoD.Path.$fTrailLikeQDiagram_$ctrailLike
                     @ Diagrams.Backend.SVG.SVG
                     @ GHC.Types.Double
                     Linear.V2.$fMetricV2
                       `cast`
                     (Linear.Metric.Metric
                        (Sym (Diagrams.Core.Types.TFCo:R:VQDiagram[0]
                                  <Diagrams.Backend.SVG.SVG>_N
                                  <Linear.V2.V2>_N
                                  <GHC.Types.Double>_N
                                  <Data.Monoid.Any>_N)))_R
                     Lib.$s$fAlignableQDiagram2
                       `cast`
                     (Diagrams.Core.Envelope.OrderedField
                        (Sym (Diagrams.Core.Types.TFCo:R:NQDiagram[0]
                                  <Diagrams.Backend.SVG.SVG>_N
                                  <Linear.V2.V2>_N
                                  <GHC.Types.Double>_N
                                  <Data.Monoid.Any>_N)))_R
                     Lib.$s$fRenderablePathSVG2
                     Lib.$s$fTrailLikeQDiagram1) -}
34a1898590c2e4046e2157942cf89cd5
  $s$fTrailLikeQDiagram1 ::
    Diagrams.Core.Types.Renderable
      (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double)
      Diagrams.Backend.SVG.B
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Lib.$s$fRenderablePathSVG -}
4148ba8348e5519729d02b880d4f6ef3
  $s$fTrailLikeTrail ::
    Diagrams.TrailLike.TrailLike
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                  Linear.V2.$fMetricV2
                    `cast`
                  (Linear.Metric.Metric
                     (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                               <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                  Lib.$s$fAlignableQDiagram2
                    `cast`
                  (Diagrams.Core.Envelope.OrderedField
                     (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                               <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                  (Diagrams.TrailLike.$fTrailLikeTrail_$ctrailLike
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     Linear.V2.$fMetricV2
                       `cast`
                     (Linear.Metric.Metric
                        (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                                  <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                     Lib.$s$fAlignableQDiagram2
                       `cast`
                     (Diagrams.Core.Envelope.OrderedField
                        (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                  <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                     Linear.V2.$fMetricV2
                     Lib.$s$fAlignableQDiagram2) -}
e8d936e5aeddf267e5739bf30cfa5d67
  $satParam10 ::
    Diagrams.Core.V.N
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    ~ GHC.Types.Double
  {- Unfolding: (Diagrams.Core.V.$p2InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam5) -}
4f81bc04b2cc73f9cdec623de6156535
  $satParam3 ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.V.N
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    -> Diagrams.Parametric.Codomain
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
         (Diagrams.Core.V.N
            (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
  {- Unfolding: (Diagrams.Trail.$fParametricTrail_$catParam
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Linear.V2.$fMetricV2
                   Lib.$s$fAlignableQDiagram2
                   GHC.Float.$fRealDouble) -}
dca3fb7e5d2da41c2aaf956b72cf3b51
  $satParam4 ::
    Diagrams.Core.V.V
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    ~ Linear.V2.V2
  {- Unfolding: (Diagrams.Core.V.$p1InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam5) -}
2938fe73be42170b58d3b1ce02b75023
  $satParam5 ::
    Diagrams.Core.V.InSpace
      Linear.V2.V2
      GHC.Types.Double
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
  {- Unfolding: (Diagrams.Core.V.$fInSpacevna
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam7
                   Lib.$satParam6
                   Linear.V2.$fAdditiveV2
                   GHC.Float.$fNumDouble) -}
63953b35bcfb6698122d9a91dd607287
  $satParam6 ::
    Diagrams.Core.V.N
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    ~ GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Diagrams.Core.V.N
                        (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                   @ GHC.Types.Double
                   @~ (Diagrams.Trail.TFCo:R:NTrail[0]
                           <Linear.V2.V2>_N <GHC.Types.Double>_N)) -}
0438c79c6052ebbbcc2cd3294c3cd1e5
  $satParam7 ::
    Diagrams.Core.V.V
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    ~ Linear.V2.V2
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ (* -> *)
                   @ (Diagrams.Core.V.V
                        (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                   @ Linear.V2.V2
                   @~ (Diagrams.Trail.TFCo:R:VTrail[0]
                           <Linear.V2.V2>_N <GHC.Types.Double>_N)) -}
d576f3ed5a040ed6b81e46a3e8d87242
  $satParam8 :: GHC.Num.Num GHC.Types.Double
  {- Unfolding: (Diagrams.Core.V.$p4InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam5) -}
69eb2f42c43e72773ade0095ce79b2fa
  $satParam9 :: Linear.Vector.Additive Linear.V2.V2
  {- Unfolding: (Diagrams.Core.V.$p3InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam5) -}
4e6e0a243a0c0416f10427b5f8511727
  $sfc2 ::
    Diagrams.Core.Style.Style
      (Diagrams.Core.V.V
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
      (Diagrams.Core.V.N
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Core.Types.$fHasStyleQDiagram_$capplyStyle
                   @ Diagrams.Backend.SVG.SVG
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                   Lib.$s$fAlignableQDiagram2
                   Data.Semigroup.$fSemigroupAny) -}
19669c7ef5a1c105deeb0af1f0551b6f
  $sfc4 ::
    Diagrams.Core.V.InSpace
      Linear.V2.V2
      GHC.Types.Double
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
  {- Unfolding: (Diagrams.Core.V.$fInSpacevna
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$sfc6
                   Lib.$sfc5
                   Linear.V2.$fAdditiveV2
                   GHC.Float.$fNumDouble) -}
8702847ee5f224aa918342c90312dcde
  $sfc5 ::
    Diagrams.Core.V.N
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
    ~ GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Diagrams.Core.V.N
                        (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.SVG
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any))
                   @ GHC.Types.Double
                   @~ (Diagrams.Core.Types.TFCo:R:NQDiagram[0]
                           <Diagrams.Backend.SVG.SVG>_N
                           <Linear.V2.V2>_N
                           <GHC.Types.Double>_N
                           <Data.Monoid.Any>_N)) -}
f20c1d263b8eb0fbdb6b1b6f20ab273e
  $sfc6 ::
    Diagrams.Core.V.V
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
    ~ Linear.V2.V2
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ (* -> *)
                   @ (Diagrams.Core.V.V
                        (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.SVG
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any))
                   @ Linear.V2.V2
                   @~ (Diagrams.Core.Types.TFCo:R:VQDiagram[0]
                           <Diagrams.Backend.SVG.SVG>_N
                           <Linear.V2.V2>_N
                           <GHC.Types.Double>_N
                           <Data.Monoid.Any>_N)) -}
64d49b518f05d2d34dce21223e22d763
  $sunitX :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (let {
                   a23 :: GHC.Types.Double = GHC.Types.D# 0.0
                 } in
                 (Data.Functor.<$>
                    @ GHC.Types.Double
                    @ (Linear.V2.V2 GHC.Types.Double)
                    @ Data.Functor.Identity.Identity
                    Data.Functor.Identity.$fFunctorIdentity
                    (\ ds1 :: GHC.Types.Double ->
                     case ds1 of dt { GHC.Types.D# ipv ->
                     Linear.V2.V2 @ GHC.Types.Double dt a23 })
                    (GHC.Types.D# 1.0)
                      `cast`
                    (Sym (Data.Functor.Identity.NTCo:Identity[0]
                              <GHC.Types.Double>_R)))
                   `cast`
                 (Data.Functor.Identity.NTCo:Identity[0]
                      <Linear.V2.V2 GHC.Types.Double>_R)) -}
6bda7d6b17d99ed25b12b70488a74aea
  $svsep1 ::
    Data.Monoid.WithSemigroup.Monoid'
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
  {- Unfolding: (Data.Monoid.WithSemigroup.$fMonoid'm
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   (Lib.$s$fSemigroupQDiagram @ Diagrams.Backend.SVG.SVG)
                   (Lib.$s$fMonoidQDiagram @ Diagrams.Backend.SVG.SVG)) -}
f5943e8ed502502faa4be19db6ebba5e
  $svsep3 ::
    Linear.Affine.Point
      (Diagrams.Core.V.V
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
      (Diagrams.Core.V.N
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Core.Types.$fHasOriginQDiagram_$cmoveOriginTo
                   @ Diagrams.Backend.SVG.SVG
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                   Lib.$s$fAlignableQDiagram2
                   Data.Semigroup.$fSemigroupAny) -}
2a319f5795940e021bf16fd39a9c3e57
  $svsep5 ::
    Diagrams.Core.V.Vn
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 3,
     Unfolding: (Diagrams.Core.Juxtapose.juxtaposeDefault
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.SVG
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$s$fEnvelopedQDiagram
                   Lib.$svsep6
                     `cast`
                   (Sym (Diagrams.Core.HasOrigin.NTCo:HasOrigin[0]
                             <Diagrams.Core.Types.QDiagram
                                Diagrams.Backend.SVG.SVG
                                Linear.V2.V2
                                GHC.Types.Double
                                Data.Monoid.Any>_N))) -}
b2352f5122683326821500527fe02bef
  $svsep6 ::
    Linear.Affine.Point
      (Diagrams.Core.V.V
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
      (Diagrams.Core.V.N
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Core.Types.$fHasOriginQDiagram_$cmoveOriginTo
                   @ Diagrams.Backend.SVG.SVG
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                   Lib.$s$fAlignableQDiagram2
                   Lib.$svsep7) -}
5fd90e93b92877e8524fd827c6bf86ff
  $svsep7 :: Data.Semigroup.Semigroup Data.Monoid.Any
  {- Unfolding: (Data.Monoid.WithSemigroup.$p1Monoid'
                   @ Data.Monoid.Any
                   Lib.$s$fAlignableQDiagram1) -}
50ab565f84207fd94e72442590607c0b
  $wa1 ::
    [(Data.Colour.Internal.Colour GHC.Types.Double,
      Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ w :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                          Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 Lib.chord11
                   (case GHC.List.$wlenAcc
                           @ (Data.Colour.Internal.Colour GHC.Types.Double,
                              Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                           w
                           0 of ww2 { DEFAULT ->
                    GHC.Types.D# (GHC.Prim.int2Double# ww2) })
                   (Lib.chord10
                      (Lib.chord9
                         GHC.Types.False
                         (case Lib.$wgo w of ww { (#,#) ww1 ww2 ->
                          let {
                            par :: [GHC.Types.Double]
                            = case Lib.chord8
                                     (case ww2 of wild {
                                        [] -> case GHC.List.badHead ret_ty GHC.Types.Int of {}
                                        : x1 ds1
                                        -> case GHC.List.$wlenAcc
                                                  @ (Diagrams.Segment.Segment
                                                       Diagrams.Segment.Closed
                                                       Linear.V2.V2
                                                       GHC.Types.Double)
                                                  (Diagrams.Trail.trailSegments
                                                     @ Linear.V2.V2
                                                     @ GHC.Types.Double
                                                     Linear.V2.$fMetricV2
                                                     Lib.$s$fAlignableQDiagram2
                                                     x1)
                                                  0 of ww3 { DEFAULT ->
                                           GHC.Types.I# (GHC.Prim.*# 4 ww3) } })
                                     Lib.chord7 of ww3 { Data.Vector.Storable.Vector ww4 ww5 ww6 ->
                              Internal.Vector.$wtoList
                                @ GHC.Types.Double
                                Foreign.Storable.$fStorableDouble
                                ww4
                                ww5
                                ww6 }
                          } in
                          letrec {
                            go1 :: [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
                                   -> [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
                              {- Arity: 1, Strictness: <S,1*U> -}
                            = \ ds :: [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double] ->
                              case ds of wild {
                                []
                                -> GHC.Types.[]
                                     @ [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
                                : y ys
                                -> GHC.Types.:
                                     @ [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
                                     (letrec {
                                        go2 :: [GHC.Types.Double]
                                               -> [Linear.Affine.Point
                                                     Linear.V2.V2 GHC.Types.Double]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds1 :: [GHC.Types.Double] ->
                                          case ds1 of wild1 {
                                            []
                                            -> GHC.Types.[]
                                                 @ (Linear.Affine.Point
                                                      Linear.V2.V2 GHC.Types.Double)
                                            : y1 ys1
                                            -> GHC.Types.:
                                                 @ (Linear.Affine.Point
                                                      Linear.V2.V2 GHC.Types.Double)
                                                 (case Lib.$satParam10 of cobox2 { GHC.Types.Eq# cobox3 ->
                                                  (Linear.Vector.^+^
                                                     @ Linear.V2.V2
                                                     Lib.$satParam9
                                                     @ GHC.Types.Double
                                                     Lib.$satParam8
                                                     Lib.chord6
                                                     (Lib.$satParam3
                                                        y
                                                        y1
                                                          `cast`
                                                        (Sub (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                                                       <Linear.V2.V2>_N
                                                                       <GHC.Types.Double>_N))))
                                                       `cast`
                                                     (Trans
                                                          (Sub (Sym (Linear.Affine.TFCo:R:DiffPoint[0]
                                                                         (Sym (Diagrams.Trail.TFCo:R:CodomainTrail[0]
                                                                                   <Linear.V2.V2>_N
                                                                                   <GHC.Types.Double>_N)))))
                                                          (Sub (Linear.Affine.TFCo:R:DiffPoint[0]
                                                                    <Linear.V2.V2>_N)) cobox3))
                                                    `cast`
                                                  (Sym (Linear.Affine.NTCo:Point[0]
                                                            <Linear.V2.V2>_R) <GHC.Types.Double>_N) })
                                                 (go2 ys1) }
                                      } in
                                      go2 par)
                                     (go1 ys) }
                          } in
                          GHC.Base.map
                            @ [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
                            @ (Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
                            Lib.chord2
                            (Data.OldList.transpose
                               @ (Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
                               (go1 ww2)) })))
                     `cast`
                   (Diagrams.Core.Types.QDiagram
                      <Diagrams.Backend.SVG.B>_N
                      (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                      (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                      <Data.Monoid.Any>_R)_R) -}
0d35b023a10fe503db7d7f9f25ad0fe9
  $wa2 ::
    [(Data.Colour.Internal.Colour GHC.Types.Double,
      Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ w :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                          Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 Lib.chord11
                   (case GHC.List.$wlenAcc
                           @ (Data.Colour.Internal.Colour GHC.Types.Double,
                              Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                           w
                           0 of ww2 { DEFAULT ->
                    GHC.Types.D# (GHC.Prim.int2Double# ww2) })
                   (case Lib.$wgo1 w of ww { (#,#) ww1 ww2 ->
                    (Diagrams.Core.Types.$fMonoidQDiagram_$cmconcat
                       @ Diagrams.Backend.SVG.SVG
                       @ Linear.V2.V2
                       @ GHC.Types.Double
                       @ Data.Monoid.Any
                       Linear.V2.$fMetricV2
                       Lib.$s$fAlignableQDiagram2
                       Data.Semigroup.$fSemigroupAny
                       (GHC.Base.map
                          @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                          @ (Diagrams.Core.Types.QDiagram
                               Diagrams.Backend.SVG.B
                               (Diagrams.Core.V.V Diagrams.Backend.SVG.B)
                               (Diagrams.Core.V.N Diagrams.Backend.SVG.B)
                               Data.Monoid.Any)
                          Lib.polyRhythm2
                            `cast`
                          (<Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_R
                           ->_R (Diagrams.Core.Types.QDiagram
                                   <Diagrams.Backend.SVG.B>_N
                                   (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                                   (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                                   <Data.Monoid.Any>_R)_R)
                          ww2)
                         `cast`
                       ([(Diagrams.Core.Types.QDiagram
                            <Diagrams.Backend.SVG.B>_N
                            (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                            (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                            <Data.Monoid.Any>_R)_R])_R)
                      `cast`
                    (Diagrams.Core.Types.QDiagram
                       <Diagrams.Backend.SVG.B>_N
                       (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                       (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                       <Data.Monoid.Any>_R)_R })) -}
8a9601af7764b57f3779c8b906ae0f00
  $wgo ::
    [(Data.Colour.Internal.Colour GHC.Types.Double,
      Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> (# [Data.Colour.Internal.Colour GHC.Types.Double],
          [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
5e4eda6b96ca3c5717e4ce885294759a
  $wgo1 ::
    [(Data.Colour.Internal.Colour GHC.Types.Double,
      Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> (# [Data.Colour.Internal.Colour GHC.Types.Double],
          [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
0a83e50d0e50568b3b7632effe13b754
  $wgo2 ::
    [(Data.Colour.Internal.Colour GHC.Types.Double,
      Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> (# [Data.Colour.Internal.Colour GHC.Types.Double],
          [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
61cc0e6e51c8ccc2f8ed462772be3745
  $wosc ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 4, Strictness: <L,U><L,1*U(U)><L,1*U(U)><L,U>,
     Inline: [0],
     Unfolding: (\ w :: Diagrams.Trail.Trail
                          Linear.V2.V2 GHC.Types.Double
                   ww :: GHC.Types.Double
                   ww1 :: GHC.Types.Double
                   ww2 :: GHC.Prim.Double# ->
                 let {
                   n :: GHC.Prim.Int# = GHC.Prim.double2Int# ww2
                 } in
                 let {
                   $j1 :: GHC.Prim.Int#
                          -> GHC.Types.Int
                          -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
                     {- Arity: 2, Strictness: <L,U><L,1*U(1*U)> -}
                   = \ y :: GHC.Prim.Int#[OneShot] wild1 :: GHC.Types.Int[OneShot] ->
                     let {
                       a16 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
                       = Diagrams.Trail.$w$csection1
                           @ Linear.V2.V2
                           @ GHC.Types.Double
                           Linear.V2.$fMetricV2
                           Lib.$s$fAlignableQDiagram2
                           GHC.Float.$fRealDouble
                           w
                           Lib.chord4
                             `cast`
                           (Sub (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                          <Linear.V2.V2>_N <GHC.Types.Double>_N)))
                           (case ww of wild { GHC.Types.D# x1 ->
                            case ww1 of wild2 { GHC.Types.D# x2 ->
                            (GHC.Types.D#
                               (GHC.Prim.+##
                                  x1
                                  (GHC.Prim.*##
                                     (GHC.Prim.-## ww2 (GHC.Prim.int2Double# y))
                                     (GHC.Prim.-## x2 x1))))
                              `cast`
                            (Sub (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                           <Linear.V2.V2>_N <GHC.Types.Double>_N))) } })
                     } in
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<# 0 y) of wild {
                       GHC.Types.False
                       -> Lib.chord_go
                            (GHC.Types.[]
                               @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                            a16
                       GHC.Types.True
                       -> let {
                            n1 :: [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
                            = GHC.Types.:
                                @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                                a16
                                (GHC.Types.[]
                                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                          } in
                          let {
                            lvl39 :: [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
                            = GHC.Types.:
                                @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                                w
                                n1
                          } in
                          letrec {
                            $wxs1 :: GHC.Prim.Int#
                                     -> [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
                              {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
                            = \ ww3 :: GHC.Prim.Int# ->
                              case ww3 of ds1 {
                                DEFAULT
                                -> GHC.Types.:
                                     @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                                     w
                                     ($wxs1 (GHC.Prim.-# ds1 1))
                                1 -> lvl39 }
                          } in
                          case $wxs1 y of wild2 {
                            []
                            -> GHC.List.foldl2
                                 @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                            : x1 xs -> Lib.chord_go xs x1 } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww2 (GHC.Prim.int2Double# n)) of wild1 {
                   GHC.Types.False -> $j1 n (GHC.Types.I# n)
                   GHC.Types.True
                   -> let {
                        y :: GHC.Prim.Int# = GHC.Prim.-# n 1
                      } in
                      $j1 y (GHC.Types.I# y) }) -}
220d279098b7f6e961a5d70c6b45c8cb
  beside' ::
    (GHC.Base.Functor (Diagrams.Core.V.V c),
     GHC.Num.Num (Diagrams.Core.V.N c),
     Diagrams.Core.Juxtapose.Juxtaposable c,
     Data.Semigroup.Semigroup c) =>
    Diagrams.Core.V.V c (Diagrams.Core.V.N c) -> c -> c -> c
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,1*U(1*C1(U),A)><L,1*U(A,A,A,1*U,A,A,A)><L,C(C1(C1(U)))><L,U(C(C1(U)),A,A)>,
     Unfolding: (\ @ c
                   $dFunctor :: GHC.Base.Functor (Diagrams.Core.V.V c)
                   $dNum :: GHC.Num.Num (Diagrams.Core.V.N c)
                   $dJuxtaposable :: Diagrams.Core.Juxtapose.Juxtaposable c
                   $dSemigroup :: Data.Semigroup.Semigroup c ->
                 let {
                   g2 :: Diagrams.Core.V.V c (Diagrams.Core.V.N c)
                         -> Diagrams.Core.V.Vn c
                   = GHC.Base.fmap
                       @ (Diagrams.Core.V.V c)
                       $dFunctor
                       @ (Diagrams.Core.V.N c)
                       @ (Diagrams.Core.V.N c)
                       (GHC.Num.negate @ (Diagrams.Core.V.N c) $dNum)
                 } in
                 \ x1 :: Diagrams.Core.V.V c (Diagrams.Core.V.N c) ->
                 let {
                   v :: Diagrams.Core.V.Vn c = g2 x1
                 } in
                 \ x2 :: c y :: c ->
                 Data.Semigroup.<>
                   @ c
                   $dSemigroup
                   y
                   ($dJuxtaposable
                      `cast`
                    (Diagrams.Core.Juxtapose.NTCo:Juxtaposable[0] <c>_N)
                      v
                      y
                      x2)) -}
95ed9150e2f8f376b4f8c19318f7d942
  chord ::
    GHC.Types.Double
    -> GHC.Types.Int
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Vector.Storable.Vector GHC.Types.Double
    -> GHC.Types.Int
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 5,
     Unfolding: (Lib.polyOsc
                   Lib.tone
                   Lib.chord1
                     `cast`
                   (<GHC.Types.Double>_R
                    ->_R <[(Data.Colour.Internal.Colour GHC.Types.Double,
                            Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]>_R
                    ->_R (Diagrams.Core.Types.QDiagram
                            <Diagrams.Backend.SVG.B>_N
                            (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                            (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                            <Data.Monoid.Any>_R)_R)) -}
a73e2392d854f71b318677dda5a6b2eb
  chord1 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: GHC.Types.Double
                   w1 :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 Lib.$wa1 w1) -}
fc1d99d43b0a7b99449f4c4be5d658f4
  chord10 ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.TwoD.Path.stroke
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   @ Diagrams.Backend.SVG.B
                   @ GHC.Types.Double
                   Lib.$satParam5
                   (Diagrams.Path.pathFromTrail @ Linear.V2.V2 @ GHC.Types.Double)
                     `cast`
                   (Trans
                        ((Linear.Metric.Metric
                            (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                                      <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                         ->_R (Diagrams.Core.Envelope.OrderedField
                                 (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                           <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                         ->_R <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_R
                         ->_R (Diagrams.Path.Path
                                 (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                                           <Linear.V2.V2>_N <GHC.Types.Double>_N))
                                 (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                           <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R)
                        (Sym (Diagrams.Path.NTCo:ToPath[0]
                                  <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)))
                   Lib.$s$fRenderablePathSVG2
                   Lib.$s$fRenderablePathSVG) -}
8c8636ece5c2408dc55ab6fec1270da9
  chord11 ::
    GHC.Types.Double
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ h :: GHC.Types.Double
                   d :: Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B ->
                 Lib.chord27
                   (Lib.chord_f
                      (Lib.chord_g
                         d `cast`
                         (Diagrams.Core.Types.QDiagram
                            <Diagrams.Backend.SVG.SVG>_N
                            (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                            (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                            <Data.Monoid.Any>_R)_R))
                   (Lib.chord14 (Lib.chord13 (Lib.chord12 d) h))) -}
227bfb47cea5ef0e04b29328117dc66a
  chord12 ::
    Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
    -> GHC.Types.Double
  {- Unfolding: (Diagrams.TwoD.Size.width
                   @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                   @ GHC.Types.Double
                   Lib.$sfc4
                     `cast`
                   (Diagrams.Core.V.InSpace
                      <Linear.V2.V2>_N
                      <GHC.Types.Double>_N
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R
                   Lib.$s$fEnvelopedQDiagram
                     `cast`
                   (Diagrams.Core.Envelope.Enveloped
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R) -}
de25cd799ebe8bfc7b2ef5f8dcceec93
  chord13 ::
    GHC.Types.Double
    -> GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.TwoD.Shapes.rect
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$sfc4
                   Lib.$s$fTrailLikeQDiagram) -}
a8d9111ca090af17dedcb6174f810cc1
  chord14 ::
    Diagrams.Core.Types.QDiagram
      Diagrams.Backend.SVG.B
      Linear.V2.V2
      GHC.Types.Double
      Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Lib.chord19
                   Lib.chord15
                     `cast`
                   (Sym (Diagrams.Core.Measure.NTCo:Measured[0]
                             <GHC.Types.Double>_R) <GHC.Types.Double>_N)) -}
58697311335fab7eedb71ed8d1daa07e
  chord15 ::
    (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
    -> GHC.Types.Double
  {- Arity: 1,
     Unfolding: (\ eta1 :: (GHC.Types.Double,
                            GHC.Types.Double,
                            GHC.Types.Double) ->
                 Lib.chord_eta) -}
8a026c4007c19ab3e67bb5077a733879
  chord16 :: GHC.Num.Num GHC.Types.Double
  {- Unfolding: (GHC.Real.$p1Fractional
                   @ GHC.Types.Double
                   Lib.chord17) -}
b90cb12681a48e2f701fc83edc1d2e43
  chord17 :: GHC.Real.Fractional GHC.Types.Double
  {- Unfolding: (GHC.Float.$p1Floating
                   @ GHC.Types.Double
                   Lib.chord18) -}
358d55653f6b6dac316027a8ccc3eccd
  chord18 :: GHC.Float.Floating GHC.Types.Double
  {- Unfolding: (Diagrams.Core.Envelope.$p1OrderedField
                   @ GHC.Types.Double
                   Lib.$s$fAlignableQDiagram2) -}
59473cef6d22fbef2b60da9d6477e444
  chord19 ::
    Diagrams.Core.Measure.Measure GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Attributes.lineWidth
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$sfc5
                   Lib.$sfc2
                     `cast`
                   (Sym (Diagrams.Core.Style.NTCo:HasStyle[0]
                             <Diagrams.Core.Types.QDiagram
                                Diagrams.Backend.SVG.SVG
                                Linear.V2.V2
                                GHC.Types.Double
                                Data.Monoid.Any>_N))
                   Lib.$s$fRenderablePathSVG3
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <GHC.Types.Double>_N))) -}
d13736ec4bafb059232de268d11b97f5
  chord2 ::
    [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
    -> Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (GHC.List.foldl
                   @ (Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
                   @ (Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
                   Lib.chord5
                   Lib.chord3
                     `cast`
                   (Sym (Linear.Affine.NTCo:Point[0]
                             <Linear.V2.V2>_R) <GHC.Types.Double>_N)) -}
c9d9fe04c622b61540aee8f03be9de91
  chord20 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (case Linear.Vector.zero
                        @ Linear.V2.V2
                        Lib.chord21
                        @ GHC.Types.Double
                        GHC.Float.$fNumDouble of wild { Linear.V2.V2 a23 b ->
                 Linear.V2.V2 @ GHC.Types.Double a23 Lib.chord_x }) -}
092d0b6c64fffe7a11eab8f4e2d26be3
  chord21 :: Linear.Vector.Additive Linear.V2.V2
  {- Unfolding: (Diagrams.Core.V.$p3InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$sfc4) -}
a4b7f586172039627cfb1c9f1247ed3d
  chord22 ::
    Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Align.$fAlignableQDiagram_$cdefaultBoundary
                   @ Diagrams.Backend.SVG.SVG
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                   Lib.$s$fAlignableQDiagram2
                   Lib.$s$fAlignableQDiagram1
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord24
                   Lib.chord23) -}
15ae5601b8ac635a5fc17504f41be3a3
  chord23 ::
    Diagrams.Core.V.N
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
    ~ GHC.Types.Double
  {- Unfolding: (Diagrams.Core.V.$p2InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.SVG
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$sfc4) -}
5bae5a0fffed7424f4e40d9c09ae80f5
  chord24 ::
    Diagrams.Core.V.V
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
    ~ Linear.V2.V2
  {- Unfolding: (Diagrams.Core.V.$p1InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.SVG
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$sfc4) -}
f909af0924a523c1102321b5fd730a15
  chord25 ::
    (Linear.V2.V2 GHC.Types.Double
     -> Diagrams.Core.Types.QDiagram
          Diagrams.Backend.SVG.SVG
          Linear.V2.V2
          GHC.Types.Double
          Data.Monoid.Any
     -> Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
    -> Linear.V2.V2 GHC.Types.Double
    -> GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Align.alignBy'Default
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.SVG
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$sfc4
                   GHC.Float.$fFractionalDouble
                   Lib.$svsep3
                     `cast`
                   (Sym (Diagrams.Core.HasOrigin.NTCo:HasOrigin[0]
                             <Diagrams.Core.Types.QDiagram
                                Diagrams.Backend.SVG.SVG
                                Linear.V2.V2
                                GHC.Types.Double
                                Data.Monoid.Any>_N))) -}
735e713435e0fb55f3580a24ddb198a6
  chord26 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (case Linear.Vector.zero
                        @ Linear.V2.V2
                        Lib.chord21
                        @ GHC.Types.Double
                        GHC.Float.$fNumDouble of wild { Linear.V2.V2 a23 b ->
                 Linear.V2.V2 @ GHC.Types.Double Lib.chord_x b }) -}
34ae4636dc6a30bd360ec518d17a5112
  chord27 ::
    Diagrams.Core.Types.QDiagram
      Diagrams.Backend.SVG.B
      Linear.V2.V2
      GHC.Types.Double
      Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                   @ Diagrams.Backend.SVG.B
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                   Lib.$s$fAlignableQDiagram2
                   Data.Semigroup.$fSemigroupAny) -}
4c0febb4d495f8afa99649f1797a11cf
  chord28 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Lib.oscCycle Lib.chord29) -}
9faf19093a7110a8f1c0f3591a5e48ab
  chord29 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Trail.Trail
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Diagrams.Trail.Line
                   Lib.chord30) -}
3ecb5b7bc40a497ee8e65fabf30e9ea0
  chord3 :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord4
                   Lib.chord4) -}
7a3dbc49ff742a54fc003c7e6b5d0f18
  chord30 ::
    Diagrams.Trail.Trail'
      Diagrams.Trail.Line Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Lib.chord_g1 Lib.chord31) -}
3e075cf9924e5abb4ef438ceb1eec32e
  chord31 ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Diagrams.Segment.Segment
                        Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double)
                   Lib.chord32
                   (GHC.Types.[]
                      @ (Diagrams.Segment.Segment
                           Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double))) -}
d666261d4430b8731aed1a53cfba38ec
  chord32 ::
    Diagrams.Segment.Segment
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Segment.Cubic
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord37
                   Lib.chord35
                   Lib.chord33) -}
7729ad73a31f01a351edbc4e36b9fe9f
  chord33 ::
    Diagrams.Segment.Offset
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Segment.OffsetClosed
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @~ <Diagrams.Segment.Closed>_N
                   Lib.chord34) -}
5e7c6b96944dcce4b2183494ea7671c0
  chord34 :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord_x
                   Lib.chord_dt1) -}
2dce4a3177a9bc5491502e4d2de3c7bc
  chord35 :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord36
                   Lib.chord_dt1) -}
7585911909660a502e2a368d6fff51f3
  chord36 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.5) -}
d92b0541df5746e6d596bb23ea747641
  chord37 :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord36
                   Lib.chord4) -}
b7c671091e8eb9e4ca240c796561c9e9
  chord38 ::
    Diagrams.Core.Transform.Transformation
      (Diagrams.Core.V.V
         (Diagrams.Trail.SegTree Linear.V2.V2 GHC.Types.Double))
      (Diagrams.Core.V.N
         (Diagrams.Trail.SegTree Linear.V2.V2 GHC.Types.Double))
    -> Diagrams.Trail.SegTree Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Trail.SegTree Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Trail.$fTransformableSegTree_$ctransform
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord18
                   Lib.chord39
                   Linear.V2.$fMetricV2) -}
a386bcc4a4e067e8fa81129aa5e7537a
  chord39 :: GHC.Classes.Ord GHC.Types.Double
  {- Unfolding: (Diagrams.Core.Envelope.$p2OrderedField
                   @ GHC.Types.Double
                   Lib.$s$fAlignableQDiagram2) -}
fdefe03f9cb69d7e7f3632fc8e1844e0
  chord4 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0) -}
2feabea1e7b5fcfb962d4950947345c1
  chord5 ::
    Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
    -> Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
    -> Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*H,U(U))><S(SS),1*U(U,U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ pt :: Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
                   pt' :: Linear.Affine.Point Linear.V2.V2 GHC.Types.Double ->
                 case pt'
                        `cast`
                      (Linear.Affine.NTCo:Point[0]
                           <Linear.V2.V2>_R <GHC.Types.Double>_N) of wild { Linear.V2.V2 a23 b ->
                 case pt
                        `cast`
                      (Linear.Affine.NTCo:Point[0]
                           <Linear.V2.V2>_R <GHC.Types.Double>_N) of wild1 { Linear.V2.V2 a16 b1 ->
                 case b1 of wild2 { GHC.Types.D# x1 ->
                 case b of wild3 { GHC.Types.D# y ->
                 (Linear.V2.V2
                    @ GHC.Types.Double
                    a23
                    (GHC.Types.D# (GHC.Prim.+## x1 y)))
                   `cast`
                 (Sym (Linear.Affine.NTCo:Point[0]
                           <Linear.V2.V2>_R) <GHC.Types.Double>_N) } } } }) -}
1def03a548cfc0cb2b376c85131e5dc7
  chord6 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (case Lib.$satParam4 of cobox4 { GHC.Types.Eq# cobox5 ->
                 Lib.chord3 }) -}
a8d54847a4c6b9550a5a65a6accd06fc
  chord7 :: (GHC.Types.Double, GHC.Types.Double)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Lib.chord4, Lib.chord_x)) -}
7e27d0d12ecd920500b85e30301e2ed0
  chord8 ::
    GHC.Types.Int
    -> (GHC.Types.Double, GHC.Types.Double)
    -> Data.Vector.Storable.Vector GHC.Types.Double
  {- Unfolding: (Internal.Container.linspace
                   @ GHC.Types.Double
                   GHC.Float.$fFractionalDouble
                   Internal.Numeric.$fContainerVectorDouble) -}
bcdf0f445fabd71cd7af4dfc0d38deb6
  chord9 ::
    GHC.Types.Bool
    -> [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.CubicSpline.cubicSpline
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam7
                   Lib.$satParam6
                   Lib.$s$fTrailLikeTrail
                   Lib.$s$fFractionalV2) -}
09c8c09f9aa6a4103019528d6e132c2f
  chord_dt1 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# -1.0) -}
57eba3828bc0382dbe92d30dd475e89b
  chord_eta :: GHC.Types.Double
  {- Unfolding: (GHC.Num.fromInteger
                   @ GHC.Types.Double
                   Lib.chord16
                   Diagrams.Attributes.none1) -}
cde4693a2524d244690e866cc1ec3d63
  chord_f ::
    Diagrams.Core.Types.QDiagram
      Diagrams.Backend.SVG.B
      Linear.V2.V2
      GHC.Types.Double
      Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Lib.chord25 Lib.chord22 Lib.chord26 Lib.chord4) -}
d164259dd62c84eac20917120362f888
  chord_g ::
    Diagrams.Core.Types.QDiagram
      Diagrams.Backend.SVG.B
      Linear.V2.V2
      GHC.Types.Double
      Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Lib.chord25 Lib.chord22 Lib.chord20 Lib.chord4) -}
58202ceff414f499ad791868902447df
  chord_g1 ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
    -> Diagrams.Trail.Trail'
         Diagrams.Trail.Line Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Trail.lineFromSegments
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Linear.V2.$fMetricV2
                   Lib.$s$fAlignableQDiagram2) -}
0bf32c32e13bfdfa368369a817153341
  chord_go ::
    [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
74813664ea065fd28faf8814a01ec37e
  chord_w2 ::
    Diagrams.Core.Transform.Transformation
      (Diagrams.Core.V.V
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
      (Diagrams.Core.V.N
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
  {- Unfolding: (case Lib.$satParam4 of cobox { GHC.Types.Eq# cobox1 ->
                 case Lib.$satParam10 of cobox2 { GHC.Types.Eq# cobox3 ->
                 case Diagrams.TwoD.Transform.$wreflectionY
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        Lib.$satParam9
                        Linear.V2.$fR2V2
                        Lib.$satParam8 of ww { (#,,#) ww1 ww2 ww3 ->
                 (Diagrams.Core.Transform.Transformation
                    @ Linear.V2.V2
                    @ GHC.Types.Double
                    ww1
                    ww2
                    ww3)
                   `cast`
                 (Diagrams.Core.Transform.Transformation
                    (Sub (Sym cobox1)) (Sym cobox3))_R } } }) -}
961d8be7a081ff24933a28557bb42964
  chord_x :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.0) -}
21385cfc7f98982de1e5b43cb6824903
  eqt :: Data.Vector.Storable.Vector GHC.Types.Double
  {- Unfolding: (GHC.ST.runSTRep
                   @ (Data.Vector.Storable.Vector GHC.Types.Double)
                   Lib.eqt1) -}
58a721a0d87af802f23065f3ad380712
  eqt1 ::
    GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          Data.Vector.Storable.Vector GHC.Types.Double #)
  {- Arity: 1,
     Unfolding: (\ @ s s1 :: GHC.Prim.State# s[OneShot] ->
                 case GHC.Prim.newPinnedByteArray#
                        @ GHC.Prim.RealWorld
                        0
                        s1
                          `cast`
                        (GHC.Prim.State#
                           (Trans
                                (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0] <s>_N))
                                (Trans
                                     (Control.Monad.Primitive.PrimState
                                        (UnivCo mkUnsafeCo nominal (GHC.ST.ST s) GHC.Types.IO))_N
                                     (Control.Monad.Primitive.TFCo:R:PrimStateIO[0]))))_R of ds { (#,#) ipv ipv1 ->
                 case Lib.eqt6
                        @ s
                        GHC.Types.SPEC
                        ((Data.Vector.Storable.Mutable.MVector
                            @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                            @ GHC.Types.Double
                            0
                            (GHC.Prim.byteArrayContents#
                               ipv1
                                 `cast`
                               (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                      GHC.Prim.RealWorld) GHC.Prim.ByteArray#))
                            (GHC.ForeignPtr.PlainPtr ipv1))
                           `cast`
                         (Sub (Sym (Data.Vector.Storable.TFCo:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                      (GHC.ST.ST
                                                                                         s)>_N <GHC.Types.Double>_N),
                         Lib.eqt5)
                        Lib.eqt2
                        ipv
                          `cast`
                        (GHC.Prim.State#
                           (Trans
                                (Sym (Control.Monad.Primitive.TFCo:R:PrimStateIO[0]))
                                (Trans
                                     (Control.Monad.Primitive.PrimState
                                        (UnivCo mkUnsafeCo nominal GHC.Types.IO (GHC.ST.ST s)))_N
                                     (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                          <s>_N))))_R of ds2 { (#,#) ipv6 ipv7 ->
                 case ipv7 of wild5 { (,) v' n ->
                 case v'
                        `cast`
                      (Sub (Data.Vector.Storable.TFCo:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                             (GHC.ST.ST
                                                                                s)>_N <GHC.Types.Double>_N) of wild { Data.Vector.Storable.Mutable.MVector dt dt1 dt2 ->
                 case n of dt3 { GHC.Types.I# dt4 ->
                 (# ipv6,
                    Data.Vector.Storable.Vector
                      @ GHC.Types.Double
                      dt4
                      dt1
                      dt2 #) } } } } }) -}
d33cb140775d7e022deee8345f7fccb4
  eqt2 :: [GHC.Types.Double]
  {- Unfolding: (Lib.eqt_go Lib.eqt3) -}
dcf99626a23c75806aba11244c7c8088
  eqt3 :: [GHC.Types.Double]
  {- Unfolding: (GHC.Real.numericEnumFromTo
                   @ GHC.Types.Double
                   GHC.Classes.$fOrdDouble
                   GHC.Float.$fFractionalDouble
                   Lib.chord4
                   Lib.eqt4) -}
c438795784a7f9363099bf00f807accb
  eqt4 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 11.0) -}
eca643bdaabc4246fa4690645cc23069
  eqt5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0) -}
2c603485225be7993f0f7153b8e899e3
  eqt6 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Storable.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
          GHC.Types.Double,
        GHC.Types.Int)
    -> [GHC.Types.Double]
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Storable.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
             GHC.Types.Double,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><L,U> -}
8f16660035c49fe4e94c12c9084dcadb
  eqt_go :: [GHC.Types.Double] -> [GHC.Types.Double]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
ab122728f0eddd402760073ed03f4076
  farey :: Data.Vector.Storable.Vector GHC.Types.Double
  {- Unfolding: (GHC.ST.runSTRep
                   @ (Data.Vector.Storable.Vector GHC.Types.Double)
                   Lib.farey1) -}
b7520f2830dc39a22d5c6b1a77a6a1a9
  farey1 ::
    GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          Data.Vector.Storable.Vector GHC.Types.Double #)
  {- Arity: 1,
     Unfolding: (\ @ s s1 :: GHC.Prim.State# s[OneShot] ->
                 case GHC.Prim.newPinnedByteArray#
                        @ GHC.Prim.RealWorld
                        0
                        s1
                          `cast`
                        (GHC.Prim.State#
                           (Trans
                                (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0] <s>_N))
                                (Trans
                                     (Control.Monad.Primitive.PrimState
                                        (UnivCo mkUnsafeCo nominal (GHC.ST.ST s) GHC.Types.IO))_N
                                     (Control.Monad.Primitive.TFCo:R:PrimStateIO[0]))))_R of ds { (#,#) ipv ipv1 ->
                 case Lib.farey25
                        @ s
                        GHC.Types.SPEC
                        ((Data.Vector.Storable.Mutable.MVector
                            @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                            @ GHC.Types.Double
                            0
                            (GHC.Prim.byteArrayContents#
                               ipv1
                                 `cast`
                               (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                      GHC.Prim.RealWorld) GHC.Prim.ByteArray#))
                            (GHC.ForeignPtr.PlainPtr ipv1))
                           `cast`
                         (Sub (Sym (Data.Vector.Storable.TFCo:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                      (GHC.ST.ST
                                                                                         s)>_N <GHC.Types.Double>_N),
                         Lib.eqt5)
                        Lib.farey2
                        ipv
                          `cast`
                        (GHC.Prim.State#
                           (Trans
                                (Sym (Control.Monad.Primitive.TFCo:R:PrimStateIO[0]))
                                (Trans
                                     (Control.Monad.Primitive.PrimState
                                        (UnivCo mkUnsafeCo nominal GHC.Types.IO (GHC.ST.ST s)))_N
                                     (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                          <s>_N))))_R of ds2 { (#,#) ipv6 ipv7 ->
                 case ipv7 of wild5 { (,) v' n ->
                 case v'
                        `cast`
                      (Sub (Data.Vector.Storable.TFCo:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                             (GHC.ST.ST
                                                                                s)>_N <GHC.Types.Double>_N) of wild { Data.Vector.Storable.Mutable.MVector dt dt1 dt2 ->
                 case n of dt3 { GHC.Types.I# dt4 ->
                 (# ipv6,
                    Data.Vector.Storable.Vector
                      @ GHC.Types.Double
                      dt4
                      dt1
                      dt2 #) } } } } }) -}
e5cbc7059b5fc25ab8d66e0815185bd5
  farey10 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey17
                   Lib.farey11) -}
20be73ba4d582249951f1e62964c2aa6
  farey11 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey16
                   Lib.farey12) -}
be65f35917962a3a1467248250723c50
  farey12 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey15
                   Lib.farey13) -}
cfc0d55cfd77ebfc1f4e1a8ea863d5da
  farey13 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey14
                   (GHC.Types.[] @ GHC.Types.Double)) -}
7bf85fd0404e086beda17144ab6d211a
  farey14 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.875) -}
33a493ec205e0d60dc4ae3521e6666a7
  farey15 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.7777777777777777) -}
e8ef4d70dd0e3844d6716d33851574b5
  farey16 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.6666666666666667) -}
af9b2cec73c0e7516635ea1c694d47eb
  farey17 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.6) -}
e681aa02c57a83dfb9e590f0b5a6af65
  farey18 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.5) -}
3595cecd7070ed59e4a3048bf98110d0
  farey19 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.4166666666666667) -}
ba32d40a8991b5f809a32e14856a499f
  farey2 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.chord_x
                   Lib.farey3) -}
c6e3aedbfd37ec8a60194778da8637ec
  farey20 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.3333333333333333) -}
bdf5e89c4cbe03dfa0760ba0f3bf7b96
  farey21 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.25) -}
793517605b314d3cf26ff266c8598555
  farey22 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.2) -}
55b3aeecbf960e93fc5e7db21940015e
  farey23 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.125) -}
d031569ab902f636e8dfcf601d8e6b42
  farey24 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.0666666666666667) -}
2988a8c7c0a6dac18ea58796fc05d171
  farey25 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Storable.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
          GHC.Types.Double,
        GHC.Types.Int)
    -> [GHC.Types.Double]
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Storable.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
             GHC.Types.Double,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><L,U> -}
ecf6da329f4d09f9d3ced67aa49f1c0e
  farey3 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey24
                   Lib.farey4) -}
5d3f09c8bfbec3b3a0debe287614fe17
  farey4 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey23
                   Lib.farey5) -}
9f372aa4394e6db056a219aa30646317
  farey5 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey22
                   Lib.farey6) -}
39253201b2627ba626257d312667f885
  farey6 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey21
                   Lib.farey7) -}
3f39157eb8144cfb257bea3cb3646877
  farey7 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey20
                   Lib.farey8) -}
69e04aacb2b202035180c60f01bdafaa
  farey8 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey19
                   Lib.farey9) -}
ebee4d8609527caf8222eafc080a91a3
  farey9 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey18
                   Lib.farey10) -}
4c5956fe7139989f61a746c9ac388b6f
  hdist ::
    GHC.Types.Double
    -> [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ sepa :: GHC.Types.Double ->
                 Lib.hdist1
                   (Diagrams.Combinators.CatOpts
                      @ GHC.Types.Double
                      Diagrams.Combinators.Distrib
                      sepa
                      (Data.Proxy.Proxy @ * @ GHC.Types.Double))) -}
22ec99b44385a96d7a3693532662e683
  hdist1 ::
    Diagrams.Combinators.CatOpts GHC.Types.Double
    -> [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Unfolding: (Diagrams.TwoD.Combinators.hcat'
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                   Lib.$sfc4
                     `cast`
                   (Diagrams.Core.V.InSpace
                      <Linear.V2.V2>_N
                      <GHC.Types.Double>_N
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R
                   GHC.Float.$fFloatingDouble
                   Lib.$svsep5
                     `cast`
                   (Sym (Diagrams.Core.Juxtapose.NTCo:Juxtaposable[0]
                             (Diagrams.Core.Types.QDiagram
                                <Diagrams.Backend.SVG.B>_N
                                (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                <Data.Monoid.Any>_N)_N))
                   Lib.$svsep3
                     `cast`
                   (Sym (Diagrams.Core.HasOrigin.NTCo:HasOrigin[0]
                             (Diagrams.Core.Types.QDiagram
                                <Diagrams.Backend.SVG.B>_N
                                (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                <Data.Monoid.Any>_N)_N))
                   Lib.$svsep1
                     `cast`
                   (Data.Monoid.WithSemigroup.Monoid'
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R) -}
0b0624feedd82bed0d8b342826c9aff0
  label ::
    (GHC.Types.Double
     -> [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
     -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
    -> GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 3, Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,1*U>,
     Unfolding: (\ lblFn :: GHC.Types.Double
                            -> [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
                            -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                   sepa :: GHC.Types.Double
                   pcs :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                            GHC.Types.Int)] ->
                 lblFn
                   sepa
                   (GHC.Base.map
                      @ (GHC.Types.Int,
                         (Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int))
                      @ (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.B
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any)
                      Lib.labelOscs3
                      (Data.OldList.sortBy
                         @ (GHC.Types.Int,
                            (Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int))
                         Lib.labelOscs2
                         (GHC.Base.map
                            @ (Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)
                            @ (GHC.Types.Int,
                               (Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int))
                            Lib.labelOscs1
                            pcs)))
                     `cast`
                   ([(Diagrams.Core.Types.QDiagram
                        <Diagrams.Backend.SVG.B>_N
                        (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                        (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                        <Data.Monoid.Any>_R)_R])_R) -}
c3957d0e364bb532fcac33bfda396d04
  labelOscs ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 2,
     Unfolding: (\ sepa :: GHC.Types.Double
                   pcs :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                            GHC.Types.Int)] ->
                 Lib.labelOscs29
                   (Diagrams.Combinators.CatOpts
                      @ GHC.Types.Double
                      Diagrams.Combinators.Distrib
                      sepa
                      (Data.Proxy.Proxy @ * @ GHC.Types.Double))
                   (GHC.Base.map
                      @ (GHC.Types.Int,
                         (Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int))
                      @ (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.B
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any)
                      Lib.labelOscs3
                      (Data.OldList.sortBy
                         @ (GHC.Types.Int,
                            (Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int))
                         Lib.labelOscs2
                         (GHC.Base.map
                            @ (Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)
                            @ (GHC.Types.Int,
                               (Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int))
                            Lib.labelOscs1
                            pcs)))
                     `cast`
                   ([(Diagrams.Core.Types.QDiagram
                        <Diagrams.Backend.SVG.B>_N
                        (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                        (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                        <Data.Monoid.Any>_R)_R])_R) -}
77a8fc23dc78ecec38f8f0360b790346
  labelOscs1 ::
    (Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)
    -> (GHC.Types.Int,
        (Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int))
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ x1 :: (Data.Colour.Internal.Colour GHC.Types.Double,
                          GHC.Types.Int) ->
                 case x1 of wild { (,) ds1 y ->
                 case y of wild1 { GHC.Types.I# x2 ->
                 (GHC.Types.I# (GHC.Prim.negateInt# x2), wild) } }) -}
b16367c491b741dc2c2cccbe348bc9b2
  labelOscs10 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Lib.labelOscs19
                   Lib.labelOscs11) -}
b96b91136bca6b709cd8dc3fcf09d50e
  labelOscs11 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Lib.labelOscs18
                   Lib.labelOscs12) -}
6efa33450a27d2ccfb0bd3461f166a40
  labelOscs12 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Lib.labelOscs17
                   Lib.labelOscs13) -}
e4945cb7fae56974e88b2bb7fd6ac883
  labelOscs13 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Lib.labelOscs16
                   Lib.labelOscs14) -}
c853ce746a977a641737d948dd51a8f8
  labelOscs14 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Lib.labelOscs15
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
21af84698cc2c2580bad874d6f77ca0e
  labelOscs15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "B"#) -}
8ad285d75ecc089df1b8dcf032b9bb98
  labelOscs16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "A#"#) -}
3b2df6419bc2dfd274a207b280015a3d
  labelOscs17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "A"#) -}
9c36efc1323858e4cc721a1bb9f2147e
  labelOscs18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "G#"#) -}
57ffe233a264b63293dcbdaecd5916ca
  labelOscs19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "G"#) -}
8d55347eb4ceaa560bc7c7cb9f2b428f
  labelOscs2 ::
    (GHC.Types.Int,
     (Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int))
    -> (GHC.Types.Int,
        (Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int))
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ x1 :: (GHC.Types.Int,
                          (Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int))
                   y :: (GHC.Types.Int,
                         (Data.Colour.Internal.Colour GHC.Types.Double,
                          GHC.Types.Int))[OneShot] ->
                 case x1 of wild { (,) x2 ds1 ->
                 case x2 of wild1 { GHC.Types.I# x# ->
                 case y of wild2 { (,) x3 ds2 ->
                 case x3 of wild3 { GHC.Types.I# y# ->
                 GHC.Classes.compareInt# x# y# } } } }) -}
93fc5a9d12defc41257ba96f01b368bf
  labelOscs20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "F#"#) -}
e2f90195ae397f5fa16b06f90f1f5a23
  labelOscs21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "F"#) -}
b2fcd446f3536a6e1e8e3a791cce30ab
  labelOscs22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "E"#) -}
9b9a7c3332e2e2ebc97711b50dd6d358
  labelOscs23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "D#"#) -}
57a96415a5037669f73259e08590df16
  labelOscs24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "D"#) -}
537e9273e82746d974c4476fbed83a9c
  labelOscs25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "C#"#) -}
8c7aad93d67bbc21a7c0d5736f3ad075
  labelOscs26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "C"#) -}
5cec3e0b6d81220b5672dc37c15ea4ac
  labelOscs27 :: Diagrams.TwoD.Text.TextAlignment GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.TwoD.Text.BoxAlignedText
                   @ GHC.Types.Double
                   Lib.chord4
                   Lib.chord36) -}
b50f4043b765ad9becc5db5bd9936ba6
  labelOscs28 ::
    Diagrams.TwoD.Text.TextAlignment GHC.Types.Double
    -> GHC.Base.String
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.TwoD.Text.mkText
                   @ GHC.Types.Double
                   @ Diagrams.Backend.SVG.B
                   Lib.$s$fRenderablePathSVG2
                   Lib.$s$fRenderableTextSVG) -}
e805660d3aaaee041790628ebbccb182
  labelOscs29 ::
    Diagrams.Combinators.CatOpts GHC.Types.Double
    -> [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Unfolding: (Diagrams.TwoD.Combinators.vcat'
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                   Lib.$sfc4
                     `cast`
                   (Diagrams.Core.V.InSpace
                      <Linear.V2.V2>_N
                      <GHC.Types.Double>_N
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R
                   GHC.Float.$fFloatingDouble
                   Lib.$svsep5
                     `cast`
                   (Sym (Diagrams.Core.Juxtapose.NTCo:Juxtaposable[0]
                             (Diagrams.Core.Types.QDiagram
                                <Diagrams.Backend.SVG.B>_N
                                (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                <Data.Monoid.Any>_N)_N))
                   Lib.$svsep3
                     `cast`
                   (Sym (Diagrams.Core.HasOrigin.NTCo:HasOrigin[0]
                             (Diagrams.Core.Types.QDiagram
                                <Diagrams.Backend.SVG.B>_N
                                (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                <Data.Monoid.Any>_N)_N))
                   Lib.$svsep1
                     `cast`
                   (Data.Monoid.WithSemigroup.Monoid'
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R) -}
3d9cd3f34fbf1722822d9e5179938e90
  labelOscs3 ::
    (GHC.Types.Int,
     (Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int))
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 1,
     Unfolding: (\ x1 :: (GHC.Types.Int,
                          (Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)) ->
                 case x1 of wild { (,) ds1 y ->
                 case y of wild1 { (,) col pc ->
                 Lib.labelOscs_f
                   (Diagrams.TwoD.Attributes.SC
                      @ GHC.Types.Double
                      (Diagrams.Attributes.SomeColor
                         @ (Data.Colour.Internal.Colour GHC.Types.Double)
                         Diagrams.TwoD.Attributes.$fDefaultLineTexture_$s$fColorColour
                         col))
                   (Lib.chord14
                      (Lib.labelOscs28
                         Lib.labelOscs27
                         (case pc of ww { GHC.Types.I# ww1 ->
                          GHC.List.$w!! @ GHC.Base.String Lib.labelOscs_nt ww1 }))) } }) -}
6c9d6c9e05a399586d83d8c252edb21e
  labelOscs4 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Lib.labelOscs25
                   Lib.labelOscs5) -}
484cc8a4fc104296d9c8720621045ca7
  labelOscs5 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Lib.labelOscs24
                   Lib.labelOscs6) -}
6bfa81ee718fdfdf62fc687154eceef6
  labelOscs6 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Lib.labelOscs23
                   Lib.labelOscs7) -}
3b9f1bc509e73113dc699f133ccb1841
  labelOscs7 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Lib.labelOscs22
                   Lib.labelOscs8) -}
80a7849629dfa596a1b2f437a442bcfd
  labelOscs8 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Lib.labelOscs21
                   Lib.labelOscs9) -}
7bea504a1455288d91ed37ccc3fa9167
  labelOscs9 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Lib.labelOscs20
                   Lib.labelOscs10) -}
fb6291d66eeb835d5e0f3ba82962442d
  labelOscs_f ::
    Diagrams.TwoD.Attributes.Texture GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.TwoD.Attributes.fillTexture
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$sfc4
                   Lib.$s$fRenderablePathSVG3
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <GHC.Types.Double>_N))
                   GHC.Float.$fFloatingDouble
                   Lib.$sfc2
                     `cast`
                   (Sym (Diagrams.Core.Style.NTCo:HasStyle[0]
                             <Diagrams.Core.Types.QDiagram
                                Diagrams.Backend.SVG.SVG
                                Linear.V2.V2
                                GHC.Types.Double
                                Data.Monoid.Any>_N))) -}
57227b41ae7df4a305301f7ed338da7e
  labelOscs_nt :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Lib.labelOscs26
                   Lib.labelOscs4) -}
ed12ba89da2c8144b1b1fa6594ec18b5
  labelPolyOsc ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 2, Strictness: <L,A><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: GHC.Types.Double
                   eta :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                            GHC.Types.Int)] ->
                 Lib.label Lib.vdist Lib.chord_x eta) -}
36dce10bee673af05b700562f90ac5e8
  oscCycle ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ halfCycle :: Diagrams.Trail.Trail
                                  Linear.V2.V2 GHC.Types.Double ->
                 case halfCycle of wild { Diagrams.Trail.Trail l0 t ->
                 case t of wild1 {
                   Diagrams.Trail.Line dt ds
                   -> Diagrams.Trail.$fMonoidTrail_$c<>
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        Lib.$s$fAlignableQDiagram2
                        Linear.V2.$fMetricV2
                        wild
                        (Diagrams.Trail.Trail
                           @ Linear.V2.V2
                           @ GHC.Types.Double
                           @ Diagrams.Trail.Line
                           (Diagrams.Trail.Line
                              @ Diagrams.Trail.Line
                              @ Linear.V2.V2
                              @ GHC.Types.Double
                              @~ <Diagrams.Trail.Line>_N
                              (Lib.chord38
                                 Lib.chord_w2
                                   `cast`
                                 (Diagrams.Core.Transform.Transformation
                                    (Trans
                                         (Sub (Diagrams.Trail.TFCo:R:VTrail[0]
                                                   <Linear.V2.V2>_N <GHC.Types.Double>_N))
                                         (Sub (Sym (Diagrams.Trail.TFCo:R:VSegTree[0]
                                                        <Linear.V2.V2>_N <GHC.Types.Double>_N))))
                                    (Trans
                                         (Diagrams.Trail.TFCo:R:NTrail[0]
                                              <Linear.V2.V2>_N <GHC.Types.Double>_N)
                                         (Sym (Diagrams.Trail.TFCo:R:NSegTree[0]
                                                   <Linear.V2.V2>_N <GHC.Types.Double>_N))))_R
                                 ds)))
                   Diagrams.Trail.Loop dt ds ds1
                   -> Diagrams.Trail.$fMonoidTrail_$c<>
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        Lib.$s$fAlignableQDiagram2
                        Linear.V2.$fMetricV2
                        wild
                        (Diagrams.Trail.Trail
                           @ Linear.V2.V2
                           @ GHC.Types.Double
                           @ Diagrams.Trail.Loop
                           (Diagrams.Trail.Loop
                              @ Diagrams.Trail.Loop
                              @ Linear.V2.V2
                              @ GHC.Types.Double
                              @~ <Diagrams.Trail.Loop>_N
                              (Lib.chord38
                                 Lib.chord_w2
                                   `cast`
                                 (Diagrams.Core.Transform.Transformation
                                    (Trans
                                         (Sub (Diagrams.Trail.TFCo:R:VTrail[0]
                                                   <Linear.V2.V2>_N <GHC.Types.Double>_N))
                                         (Sub (Sym (Diagrams.Trail.TFCo:R:VSegTree[0]
                                                        <Linear.V2.V2>_N <GHC.Types.Double>_N))))
                                    (Trans
                                         (Diagrams.Trail.TFCo:R:NTrail[0]
                                              <Linear.V2.V2>_N <GHC.Types.Double>_N)
                                         (Sym (Diagrams.Trail.TFCo:R:NSegTree[0]
                                                   <Linear.V2.V2>_N <GHC.Types.Double>_N))))_R
                                 ds)
                              (Diagrams.Segment.$fTransformableSegment1
                                 @ Diagrams.Segment.Open
                                 @ Linear.V2.V2
                                 @ GHC.Types.Double
                                 Lib.chord_w2
                                   `cast`
                                 (Diagrams.Core.Transform.Transformation
                                    (Sub (Diagrams.Trail.TFCo:R:VTrail[0]
                                              <Linear.V2.V2>_N <GHC.Types.Double>_N))
                                    (Diagrams.Trail.TFCo:R:NTrail[0]
                                         <Linear.V2.V2>_N <GHC.Types.Double>_N))_R
                                 ds1))) } }) -}
a6927780a993c541ea2f9705b57d87d5
  oscScale ::
    GHC.Types.Int
    -> GHC.Base.String
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: (\ f0 :: GHC.Types.Int txt :: GHC.Base.String ->
                 Lib.labelOscs29
                   Lib.oscScale21
                   (GHC.Types.:
                      @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                      (Lib.chord_f
                         (Lib.chord_g
                            (case Lib.chord24 of cobox { GHC.Types.Eq# cobox1 ->
                             case Lib.chord23 of cobox2 { GHC.Types.Eq# cobox3 ->
                             Lib.oscScale20
                               (let {
                                  w3 :: GHC.Types.Double
                                  = case f0 of wild { GHC.Types.I# i ->
                                    case GHC.Prim./##
                                           2.0
                                           (GHC.Prim.int2Double# i) of wild2 { DEFAULT ->
                                    GHC.Types.D# wild2 } }
                                } in
                                let {
                                  a16 :: Linear.V2.V2 GHC.Types.Double
                                         -> Data.Functor.Identity.Identity
                                              (Linear.V2.V2 GHC.Types.Double)
                                    {- Arity: 1, Strictness: <S(SS),1*U(U(U),U)>m,
                                       Unfolding: InlineRule (1, True, False)
                                                  (\ ds :: Linear.V2.V2 GHC.Types.Double ->
                                                   case ds of wild { Linear.V2.V2 a23 b ->
                                                   case a23 of wild1 { GHC.Types.D# x1 ->
                                                   case w3 of wild2 { GHC.Types.D# y ->
                                                   (Linear.V2.V2
                                                      @ GHC.Types.Double
                                                      (GHC.Types.D# (GHC.Prim.*## x1 y))
                                                      b)
                                                     `cast`
                                                   (Sym (Data.Functor.Identity.NTCo:Identity[0]
                                                             <Linear.V2.V2
                                                                GHC.Types.Double>_R)) } } }) -}
                                  = \ ds :: Linear.V2.V2 GHC.Types.Double ->
                                    case ds of wild { Linear.V2.V2 a23 b ->
                                    case a23 of wild1 { GHC.Types.D# x1 ->
                                    case w3 of wild2 { GHC.Types.D# y ->
                                    (Linear.V2.V2
                                       @ GHC.Types.Double
                                       (GHC.Types.D# (GHC.Prim.*## x1 y))
                                       b)
                                      `cast`
                                    (Sym (Data.Functor.Identity.NTCo:Identity[0]
                                              <Linear.V2.V2 GHC.Types.Double>_R)) } } }
                                } in
                                let {
                                  a17 :: Linear.V2.V2 GHC.Types.Double
                                         -> Data.Functor.Identity.Identity
                                              (Linear.V2.V2 GHC.Types.Double)
                                    {- Arity: 1, Strictness: <S(SS),1*U(U(U),U)>m,
                                       Unfolding: InlineRule (1, True, False)
                                                  (\ ds :: Linear.V2.V2 GHC.Types.Double ->
                                                   case ds of wild { Linear.V2.V2 a23 b ->
                                                   case a23 of wild1 { GHC.Types.D# x1 ->
                                                   case w3 of wild2 { GHC.Types.D# y ->
                                                   case GHC.Prim./## x1 y of wild3 { DEFAULT ->
                                                   (Linear.V2.V2
                                                      @ GHC.Types.Double
                                                      (GHC.Types.D# wild3)
                                                      b)
                                                     `cast`
                                                   (Sym (Data.Functor.Identity.NTCo:Identity[0]
                                                             <Linear.V2.V2
                                                                GHC.Types.Double>_R)) } } } }) -}
                                  = \ ds :: Linear.V2.V2 GHC.Types.Double ->
                                    case ds of wild { Linear.V2.V2 a23 b ->
                                    case a23 of wild1 { GHC.Types.D# x1 ->
                                    case w3 of wild2 { GHC.Types.D# y ->
                                    case GHC.Prim./## x1 y of wild3 { DEFAULT ->
                                    (Linear.V2.V2 @ GHC.Types.Double (GHC.Types.D# wild3) b)
                                      `cast`
                                    (Sym (Data.Functor.Identity.NTCo:Identity[0]
                                              <Linear.V2.V2 GHC.Types.Double>_R)) } } } }
                                } in
                                let {
                                  t :: Linear.V2.V2 GHC.Types.Double
                                       Diagrams.Core.Transform.:-: Linear.V2.V2 GHC.Types.Double
                                    {- Strictness: m -}
                                  = Diagrams.Core.Transform.:-:
                                      @ (Linear.V2.V2 GHC.Types.Double)
                                      @ (Linear.V2.V2 GHC.Types.Double)
                                      a16
                                        `cast`
                                      (<Linear.V2.V2 GHC.Types.Double>_R
                                       ->_R Data.Functor.Identity.NTCo:Identity[0]
                                                <Linear.V2.V2 GHC.Types.Double>_R)
                                      a17
                                        `cast`
                                      (<Linear.V2.V2 GHC.Types.Double>_R
                                       ->_R Data.Functor.Identity.NTCo:Identity[0]
                                                <Linear.V2.V2 GHC.Types.Double>_R)
                                } in
                                (Diagrams.Core.Transform.Transformation
                                   @ Linear.V2.V2
                                   @ GHC.Types.Double
                                   t
                                   t
                                   Lib.oscScale19)
                                  `cast`
                                (Diagrams.Core.Transform.Transformation
                                   (Sub (Sym cobox1)) (Sym cobox3))_R)
                               Lib.oscScale2 } })))
                        `cast`
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_R)_R
                      (GHC.Types.:
                         @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                         (Lib.chord_f (Lib.chord_g (Lib.oscScale1 txt)))
                           `cast`
                         (Diagrams.Core.Types.QDiagram
                            <Diagrams.Backend.SVG.B>_N
                            (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                            (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                            <Data.Monoid.Any>_R)_R
                         (GHC.Types.[]
                            @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B))))) -}
c0fe56908b2b310210123436f4b1996d
  oscScale1 ::
    GHC.Base.String
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.TwoD.Text.text
                   @ Diagrams.Backend.SVG.B
                   @ GHC.Types.Double
                   Lib.$s$fRenderablePathSVG2
                   Lib.$s$fRenderableTextSVG) -}
e7169251a6335b7147fa454b22ffb002
  oscScale10 ::
    Diagrams.Segment.Segment
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Segment.Linear
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.oscScale11) -}
42e6ef4b313860f46855a96384ccf081
  oscScale11 ::
    Diagrams.Segment.Offset
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Segment.OffsetClosed
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @~ <Diagrams.Segment.Closed>_N
                   Lib.$sunitX) -}
7f341e8f11b25bdaa7ccec85f13d6264
  oscScale12 ::
    Diagrams.Segment.Segment
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Segment.Linear
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.oscScale13) -}
36f0d4a5837741db223544677bc5a772
  oscScale13 ::
    Diagrams.Segment.Offset
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Segment.OffsetClosed
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @~ <Diagrams.Segment.Closed>_N
                   Lib.oscScale14) -}
e5802936efdeffb738181f50ddaeab2b
  oscScale14 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.oscScale16
                   Lib.oscScale15) -}
0b6d2d368a261e97021186bdea7fd1ea
  oscScale15 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# -0.5) -}
dcc89fd1b38f415c3bd239f3a1534f2b
  oscScale16 :: GHC.Types.Double
  {- Unfolding: (GHC.Types.D# (GHC.Prim.negateDouble# 0.0)) -}
95ad929f163a1c17d9c68ba4cbe8ac84
  oscScale17 ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed
       (Diagrams.Core.V.V
          (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
       (Diagrams.Core.V.N
          (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))]
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.TrailLike.fromSegments
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$s$fTrailLikeTrail) -}
ad3ba23420bf079e8d9a661cb8d50098
  oscScale18 ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.TwoD.Path.strokeTrail
                   @ GHC.Types.Double
                   @ Diagrams.Backend.SVG.B
                   Lib.$s$fRenderablePathSVG2
                   Lib.$s$fRenderablePathSVG) -}
b73c3f54d0fe6b2cb489fd453492da6b
  oscScale19 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Linear.Vector.zero
                   @ Linear.V2.V2
                   Lib.chord21
                   @ GHC.Types.Double
                   GHC.Float.$fNumDouble) -}
c5796e16e84451c57ecbab50b447c404
  oscScale2 ::
    Diagrams.Core.Types.QDiagram
      Diagrams.Backend.SVG.B
      Linear.V2.V2
      GHC.Types.Double
      Data.Monoid.Any
  {- Unfolding: (Lib.oscScale18 Lib.oscScale3) -}
83e322a531bf83de9c749ab26e087952
  oscScale20 ::
    Diagrams.Core.Transform.Transformation
      (Diagrams.Core.V.V
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
      (Diagrams.Core.V.N
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Core.Types.$fHasOriginQDiagram_$ctransform
                   @ Diagrams.Backend.SVG.SVG
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Lib.$s$fAlignableQDiagram2
                   Linear.V2.$fMetricV2
                   Data.Semigroup.$fSemigroupAny) -}
644646f4c16f502ba3ecef289e066ea3
  oscScale21 :: Diagrams.Combinators.CatOpts GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Combinators.CatOpts
                   @ GHC.Types.Double
                   Diagrams.Combinators.Cat
                   Lib.chord_x
                   (Data.Proxy.Proxy @ * @ GHC.Types.Double)) -}
5788811c5e293238ddb0cca8d6917fc7
  oscScale3 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Lib.oscScale17
                   Lib.oscScale4
                     `cast`
                   ([(Diagrams.Segment.Segment
                        <Diagrams.Segment.Closed>_N
                        (Sub (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                                       <Linear.V2.V2>_N <GHC.Types.Double>_N)))
                        (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                  <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R])_R) -}
9113a132508ebc5c99419a8de2647c80
  oscScale4 ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
  {- Unfolding: (GHC.Types.:
                   @ (Diagrams.Segment.Segment
                        Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double)
                   Lib.oscScale12
                   Lib.oscScale5) -}
50cf66868777588fc8bbdacd3e8ace36
  oscScale5 ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Diagrams.Segment.Segment
                        Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double)
                   Lib.oscScale10
                   Lib.oscScale6) -}
191dd218b0128a73a3dfd5af1cbd428e
  oscScale6 ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Diagrams.Segment.Segment
                        Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double)
                   Lib.oscScale7
                   (GHC.Types.[]
                      @ (Diagrams.Segment.Segment
                           Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double))) -}
46f0e4cbc31612091f991ee346a178f6
  oscScale7 ::
    Diagrams.Segment.Segment
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Segment.Linear
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.oscScale8) -}
2294b942b9555d2bbfc97d89838c838c
  oscScale8 ::
    Diagrams.Segment.Offset
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Segment.OffsetClosed
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @~ <Diagrams.Segment.Closed>_N
                   Lib.oscScale9) -}
fda9767a092a2a94b3c3ee7da67818ad
  oscScale9 :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord4
                   Lib.chord36) -}
9864163e9d1f236242cf3152d2b0e9c3
  oscs ::
    (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
     -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
    -> GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ strokeFn :: Diagrams.Trail.Trail
                                 Linear.V2.V2 GHC.Types.Double
                               -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                   sepa :: GHC.Types.Double ->
                 let {
                   f3 :: [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
                         -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                   = Lib.labelOscs29
                       (Diagrams.Combinators.CatOpts
                          @ GHC.Types.Double
                          Diagrams.Combinators.Distrib
                          sepa
                          (Data.Proxy.Proxy @ * @ GHC.Types.Double))
                 } in
                 let {
                   a16 :: (Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                          -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                     {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, False)
                                   (\ w :: (Data.Colour.Internal.Colour GHC.Types.Double,
                                            Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double) ->
                                    case w of ww { (,) ww1 ww2 ->
                                    Lib.rhythms_f
                                      (Diagrams.TwoD.Attributes.SC
                                         @ GHC.Types.Double
                                         (Diagrams.Attributes.SomeColor
                                            @ (Data.Colour.Internal.Colour GHC.Types.Double)
                                            Diagrams.TwoD.Attributes.$fDefaultLineTexture_$s$fColorColour
                                            ww1))
                                      (strokeFn ww2) }) -}
                   = \ w :: (Data.Colour.Internal.Colour GHC.Types.Double,
                             Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double) ->
                     case w of ww { (,) ww1 ww2 ->
                     Lib.rhythms_f
                       (Diagrams.TwoD.Attributes.SC
                          @ GHC.Types.Double
                          (Diagrams.Attributes.SomeColor
                             @ (Data.Colour.Internal.Colour GHC.Types.Double)
                             Diagrams.TwoD.Attributes.$fDefaultLineTexture_$s$fColorColour
                             ww1))
                       (strokeFn ww2) }
                 } in
                 \ x1 :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 f3
                   (GHC.Base.map
                      @ (Data.Colour.Internal.Colour GHC.Types.Double,
                         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                      @ (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.B
                           (Diagrams.Core.V.V Diagrams.Backend.SVG.B)
                           (Diagrams.Core.V.N Diagrams.Backend.SVG.B)
                           Data.Monoid.Any)
                      a16
                      x1)) -}
2418b5ff662ec67e9574b8be93e5ac77
  polyOsc ::
    (GHC.Types.Double
     -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    -> (GHC.Types.Double
        -> [(Data.Colour.Internal.Colour GHC.Types.Double,
             Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
        -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
    -> GHC.Types.Double
    -> GHC.Types.Int
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Vector.Storable.Vector GHC.Types.Double
    -> GHC.Types.Int
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><L,U><L,1*U(U)><L,1*U><L,U(U,U,U)><L,1*U(U)> -}
8be7b789c8588bbe4c47e89a5bf5240a
  polyRhythm ::
    GHC.Types.Double
    -> GHC.Types.Int
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Vector.Storable.Vector GHC.Types.Double
    -> GHC.Types.Int
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 5,
     Unfolding: (Lib.polyOsc
                   Lib.rhythm
                   Lib.polyRhythm1
                     `cast`
                   (<GHC.Types.Double>_R
                    ->_R <[(Data.Colour.Internal.Colour GHC.Types.Double,
                            Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]>_R
                    ->_R (Diagrams.Core.Types.QDiagram
                            <Diagrams.Backend.SVG.B>_N
                            (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                            (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                            <Data.Monoid.Any>_R)_R)) -}
a2b66b516655da5bc69ad948431c518a
  polyRhythm1 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: GHC.Types.Double
                   w1 :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 Lib.$wa2 w1) -}
165fc96c02540946e2a6f1ae1f85ce46
  polyRhythm10 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.75) -}
34d84f3682b39d5441c922bf1b3293d4
  polyRhythm11 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.25) -}
eb0f2da52c7fe60a4e63f4eb5a2df750
  polyRhythm12 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Lib.oscCycle Lib.polyRhythm13) -}
05393136069098dd393a69716bc8853e
  polyRhythm13 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Trail.Trail
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Diagrams.Trail.Line
                   Lib.polyRhythm14) -}
7fb842607fe5b948ac1650f484273a64
  polyRhythm14 ::
    Diagrams.Trail.Trail'
      Diagrams.Trail.Line Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Lib.chord_g1 Lib.polyRhythm15) -}
9d4ae1f1032086978ce7ca868bbb7387
  polyRhythm15 ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
  {- Unfolding: (GHC.Types.:
                   @ (Diagrams.Segment.Segment
                        Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double)
                   Lib.polyRhythm17
                   Lib.polyRhythm16) -}
3050903cb1159fb90f572a7232f7944c
  polyRhythm16 ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Diagrams.Segment.Segment
                        Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double)
                   Lib.oscScale10
                   (GHC.Types.[]
                      @ (Diagrams.Segment.Segment
                           Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double))) -}
48a61d0d7e39b5d086aa49892f068592
  polyRhythm17 ::
    Diagrams.Segment.Segment
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Segment.Linear
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.polyRhythm18) -}
78149e3db6d578050a6ea6ff0ca2b162
  polyRhythm18 ::
    Diagrams.Segment.Offset
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Segment.OffsetClosed
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @~ <Diagrams.Segment.Closed>_N
                   Lib.polyRhythm19) -}
5be519f7a104a404e2067952f6e63640
  polyRhythm19 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.oscScale16
                   Lib.chord_dt1) -}
fa9fc106043089183faeca7e4277fd9e
  polyRhythm2 ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ cyc :: Diagrams.Trail.Trail
                            Linear.V2.V2 GHC.Types.Double ->
                 Lib.polyRhythm9
                   (GHC.List.zipWith
                      @ (Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                         -> Diagrams.Core.Types.QDiagram
                              Diagrams.Backend.SVG.B
                              Linear.V2.V2
                              GHC.Types.Double
                              Data.Monoid.Any)
                      @ (Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                      @ (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.B
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any)
                      (GHC.Base.$
                         @ (Diagrams.Located.Located
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                         @ (Diagrams.Core.Types.QDiagram
                              Diagrams.Backend.SVG.B
                              Linear.V2.V2
                              GHC.Types.Double
                              Data.Monoid.Any))
                      Lib.polyRhythm_xs'
                      (Lib.polyRhythm3
                         (Diagrams.Located.Loc
                            @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                            Lib.chord3
                              `cast`
                            (Sym (Linear.Affine.NTCo:Point[0]
                                      (Sub (Diagrams.Trail.TFCo:R:VTrail[0]
                                                <Linear.V2.V2>_N
                                                <GHC.Types.Double>_N))) (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                                                                  <Linear.V2.V2>_N
                                                                                  <GHC.Types.Double>_N)))
                            cyc)))) -}
2729c9548243eec973374fd4cd3013d0
  polyRhythm3 ::
    Diagrams.Located.Located
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    -> [Diagrams.Located.Located
          (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
  {- Unfolding: (Diagrams.TrailLike.explodeTrail
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Located.Located
                        (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                   Lib.polyRhythm5
                   Lib.polyRhythm4
                   Lib.$s$fTrailLikeLocated) -}
27128103a1970f47ff647ac9648f4330
  polyRhythm4 ::
    Diagrams.Core.V.N
      (Diagrams.Located.Located
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
    ~ GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Diagrams.Core.V.N
                        (Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))
                   @ GHC.Types.Double
                   @~ (Trans
                           (Diagrams.Located.TFCo:R:NLocated[0]
                                <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)
                           (Diagrams.Trail.TFCo:R:NTrail[0]
                                <Linear.V2.V2>_N <GHC.Types.Double>_N))) -}
264de2d9b0aadc7d0da49b1d1b9dcc0b
  polyRhythm5 ::
    Diagrams.Core.V.V
      (Diagrams.Located.Located
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
    ~ Linear.V2.V2
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ (* -> *)
                   @ (Diagrams.Core.V.V
                        (Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))
                   @ Linear.V2.V2
                   @~ (Trans
                           (Diagrams.Located.TFCo:R:VLocated[0]
                                <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)
                           (Diagrams.Trail.TFCo:R:VTrail[0]
                                <Linear.V2.V2>_N <GHC.Types.Double>_N))) -}
c16b917baf4a714e10d20bb5cc5624a3
  polyRhythm6 ::
    [Diagrams.Located.Located
       (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
     -> Diagrams.Core.Types.QDiagram
          Diagrams.Backend.SVG.B
          Linear.V2.V2
          GHC.Types.Double
          Data.Monoid.Any]
ee7e570e1defb8e4f950bf96fa00812f
  polyRhythm7 ::
    Diagrams.Located.Located
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ x1 :: Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double) ->
                 Lib.polyRhythm_f
                   (GHC.Types.:
                      @ (Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                      x1
                      (GHC.Types.[]
                         @ (Diagrams.Located.Located
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))))
                     `cast`
                   (Sym (Diagrams.Path.NTCo:Path[0]
                             <Linear.V2.V2>_N <GHC.Types.Double>_N))) -}
54fb95ffeb9384b96aab59da4a65f6fe
  polyRhythm8 ::
    Diagrams.TwoD.Path.StrokeOpts ()
    -> Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.TwoD.Path.strokeP'
                   @ ()
                   @ GHC.Types.Double
                   @ Diagrams.Backend.SVG.B
                   Lib.$s$fRenderablePathSVG2
                   Lib.$s$fRenderablePathSVG
                   Diagrams.Core.Names.$fIsName()) -}
fedbe441444a9bd6978034dc18139803
  polyRhythm9 ::
    [Diagrams.Core.Types.QDiagram
       Diagrams.Backend.SVG.B
       Linear.V2.V2
       GHC.Types.Double
       Data.Monoid.Any]
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Combinators.$wcat'
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$sfc4
                   Linear.V2.$fMetricV2
                   GHC.Float.$fFloatingDouble
                   Lib.$svsep5
                     `cast`
                   (Sym (Diagrams.Core.Juxtapose.NTCo:Juxtaposable[0]
                             <Diagrams.Core.Types.QDiagram
                                Diagrams.Backend.SVG.SVG
                                Linear.V2.V2
                                GHC.Types.Double
                                Data.Monoid.Any>_N))
                   Lib.$svsep1
                   Lib.$svsep3
                     `cast`
                   (Sym (Diagrams.Core.HasOrigin.NTCo:HasOrigin[0]
                             <Diagrams.Core.Types.QDiagram
                                Diagrams.Backend.SVG.SVG
                                Linear.V2.V2
                                GHC.Types.Double
                                Data.Monoid.Any>_N))
                   Lib.chord26
                   Diagrams.Combinators.Cat
                   Lib.chord4) -}
ba3e3ec96470291842de066a5bfa01b1
  polyRhythm_f ::
    Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Lib.polyRhythm8
                   (Diagrams.TwoD.Path.$fDefaultStrokeOpts_$cdef @ ())) -}
3e600e6fb082b3d72a3dc42fa9c1f942
  polyRhythm_xs' ::
    [Diagrams.Located.Located
       (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
     -> Diagrams.Core.Types.QDiagram
          Diagrams.Backend.SVG.B
          Linear.V2.V2
          GHC.Types.Double
          Data.Monoid.Any]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Diagrams.Located.Located
                        (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                      -> Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.B
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any)
                   Lib.polyRhythm7
                   Lib.polyRhythm6) -}
f7da8212d877cf4cb72367d0b70aa177
  rhythm ::
    GHC.Types.Double
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 1,
     Unfolding: (\ w :: GHC.Types.Double ->
                 case w of ww { GHC.Types.D# ww1 ->
                 Lib.$wosc
                   Lib.polyRhythm12
                   Lib.polyRhythm11
                   Lib.polyRhythm10
                   ww1 }) -}
d5d013c494def9f08dad2013158b047d
  rhythms ::
    GHC.Types.Double
    -> GHC.Types.Int
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Vector.Storable.Vector GHC.Types.Double
    -> GHC.Types.Int
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 5, Unfolding: (Lib.polyOsc Lib.rhythm Lib.rhythms1) -}
8644f922b112d2b0eba35d70fed87129
  rhythms1 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 1,
     Unfolding: (\ sepa :: GHC.Types.Double ->
                 let {
                   f3 :: [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
                         -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                   = Lib.labelOscs29
                       (Diagrams.Combinators.CatOpts
                          @ GHC.Types.Double
                          Diagrams.Combinators.Distrib
                          sepa
                          (Data.Proxy.Proxy @ * @ GHC.Types.Double))
                 } in
                 let {
                   a16 :: (Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                          -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                     {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, False)
                                   (\ w :: (Data.Colour.Internal.Colour GHC.Types.Double,
                                            Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double) ->
                                    case w of ww { (,) ww1 ww2 ->
                                    Lib.rhythms_f
                                      (Diagrams.TwoD.Attributes.SC
                                         @ GHC.Types.Double
                                         (Diagrams.Attributes.SomeColor
                                            @ (Data.Colour.Internal.Colour GHC.Types.Double)
                                            Diagrams.TwoD.Attributes.$fDefaultLineTexture_$s$fColorColour
                                            ww1))
                                      (Lib.polyRhythm2 ww2)
                                        `cast`
                                      (Diagrams.Core.Types.QDiagram
                                         <Diagrams.Backend.SVG.B>_N
                                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                                         <Data.Monoid.Any>_R)_R }) -}
                   = \ w :: (Data.Colour.Internal.Colour GHC.Types.Double,
                             Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double) ->
                     case w of ww { (,) ww1 ww2 ->
                     Lib.rhythms_f
                       (Diagrams.TwoD.Attributes.SC
                          @ GHC.Types.Double
                          (Diagrams.Attributes.SomeColor
                             @ (Data.Colour.Internal.Colour GHC.Types.Double)
                             Diagrams.TwoD.Attributes.$fDefaultLineTexture_$s$fColorColour
                             ww1))
                       (Lib.polyRhythm2 ww2)
                         `cast`
                       (Diagrams.Core.Types.QDiagram
                          <Diagrams.Backend.SVG.B>_N
                          (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                          (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                          <Data.Monoid.Any>_R)_R }
                 } in
                 \ x1 :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 f3
                   (GHC.Base.map
                      @ (Data.Colour.Internal.Colour GHC.Types.Double,
                         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                      @ (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.B
                           (Diagrams.Core.V.V Diagrams.Backend.SVG.B)
                           (Diagrams.Core.V.N Diagrams.Backend.SVG.B)
                           Data.Monoid.Any)
                      a16
                      x1)) -}
809f72e03cd649b0a00068c437d18474
  rhythmsWithSync ::
    GHC.Types.Double
    -> GHC.Types.Int
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Vector.Storable.Vector GHC.Types.Double
    -> GHC.Types.Int
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 5, Strictness: <L,U><L,U(U)><L,U><L,U(U,U,U)><L,U(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.rhythmsWithSync1
                  `cast`
                (<GHC.Types.Double>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <[(Data.Colour.Internal.Colour GHC.Types.Double,
                         GHC.Types.Int)]>_R
                 ->_R <Data.Vector.Storable.Vector GHC.Types.Double>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_R)_R) -}
387ea5343308b1a7f26915a80c5a2e71
  rhythmsWithSync1 ::
    GHC.Types.Double
    -> GHC.Types.Int
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Vector.Storable.Vector GHC.Types.Double
    -> GHC.Types.Int
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 5, Strictness: <L,U><L,U(U)><L,U><L,U(U,U,U)><L,U(U)>,
     Unfolding: (\ sepa :: GHC.Types.Double
                   w0 :: GHC.Types.Int
                   pcs :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                            GHC.Types.Int)]
                   tn :: Data.Vector.Storable.Vector GHC.Types.Double
                   f0 :: GHC.Types.Int ->
                 Lib.chord27
                   (Lib.polyOsc Lib.rhythm Lib.rhythms1 sepa w0 pcs tn f0)
                     `cast`
                   (Diagrams.Core.Types.QDiagram
                      <Diagrams.Backend.SVG.SVG>_N
                      (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                      (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                      <Data.Monoid.Any>_R)_R
                   (Lib.polyOsc Lib.rhythm Lib.rhythmsWithSync2 sepa w0 pcs tn f0)
                     `cast`
                   (Diagrams.Core.Types.QDiagram
                      <Diagrams.Backend.SVG.SVG>_N
                      (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                      (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                      <Data.Monoid.Any>_R)_R) -}
02871709c945f7fc7bb67f3742a97a38
  rhythmsWithSync10 ::
    Diagrams.Core.Transform.Transformation
      Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Core.Transform.Transformation
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   (Diagrams.Core.Transform.$fMonoid:-:_$cmempty
                      @ (Linear.V2.V2 GHC.Types.Double))
                   (Diagrams.Core.Transform.$fMonoid:-:_$cmempty
                      @ (Linear.V2.V2 GHC.Types.Double))
                   Lib.rhythmsWithSync11) -}
bf4b457ad41e7b87a3b227e51b3d73b7
  rhythmsWithSync11 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (case Linear.Vector.zero
                        @ Linear.V2.V2
                        Lib.rhythmsWithSync13
                        @ GHC.Types.Double
                        Lib.rhythmsWithSync12 of wild { Linear.V2.V2 a23 b ->
                 Linear.V2.V2 @ GHC.Types.Double a23 Lib.chord_dt1 }) -}
9de5a0d0b532856a5e053daee2a5c007
  rhythmsWithSync12 :: GHC.Num.Num GHC.Types.Double
  {- Unfolding: (Diagrams.Core.V.$p4InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                   Lib.$sfc4
                     `cast`
                   (Diagrams.Core.V.InSpace
                      <Linear.V2.V2>_N
                      <GHC.Types.Double>_N
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R) -}
1dca06db4b5ded414d6370af1c12d4cf
  rhythmsWithSync13 :: Linear.Vector.Additive Linear.V2.V2
  {- Unfolding: (Diagrams.Core.V.$p3InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                   Lib.$sfc4
                     `cast`
                   (Diagrams.Core.V.InSpace
                      <Linear.V2.V2>_N
                      <GHC.Types.Double>_N
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R) -}
c620f150b364e69d16a2781f92df8fbd
  rhythmsWithSync2 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U>,
     Unfolding: (\ sepa :: GHC.Types.Double
                   oscs1 :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                              Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 Lib.rhythmsWithSync9
                   (case Lib.$wgo2 oscs1 of ww { (#,#) ww1 ww2 ->
                    let {
                      grid' :: [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
                      = Lib.rhythmsWithSync_go2
                          ww2
                          (case GHC.Real.$wnumericEnumFromThen
                                  @ GHC.Types.Double
                                  GHC.Float.$fFractionalDouble
                                  Lib.chord4
                                  (GHC.Float.negateDouble sepa) of ww3 { (#,#) ww4 ww5 ->
                           GHC.Base.map
                             @ GHC.Types.Double
                             @ (Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
                             Lib.rhythmsWithSync8
                             (GHC.Types.: @ GHC.Types.Double ww4 ww5) })
                    } in
                    let {
                      nrst :: [[Linear.V2.V2 GHC.Types.Double]]
                      = Lib.rhythmsWithSync_go1
                          grid'
                          (case grid' of wild {
                             []
                             -> GHC.List.scanl2
                                  @ [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
                             : ds1 xs -> xs })
                    } in
                    (Diagrams.Core.Types.$fMonoidQDiagram_$cmconcat
                       @ Diagrams.Backend.SVG.SVG
                       @ Linear.V2.V2
                       @ GHC.Types.Double
                       @ Data.Monoid.Any
                       Linear.V2.$fMetricV2
                       Lib.$s$fAlignableQDiagram2
                       Data.Semigroup.$fSemigroupAny
                       (Lib.rhythmsWithSync_go
                          (GHC.List.zipWith3
                             @ [Linear.V2.V2 GHC.Types.Double]
                             @ [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
                             @ [GHC.Types.Double]
                             @ [Diagrams.Core.Types.QDiagram
                                  Diagrams.Backend.SVG.B
                                  Linear.V2.V2
                                  GHC.Types.Double
                                  Data.Monoid.Any]
                             Lib.rhythmsWithSync6
                             nrst
                             grid'
                             (GHC.Base.map
                                @ [Linear.V2.V2 GHC.Types.Double]
                                @ [GHC.Types.Double]
                                Lib.rhythmsWithSync3
                                nrst))))
                      `cast`
                    (Diagrams.Core.Types.QDiagram
                       <Diagrams.Backend.SVG.B>_N
                       (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                       (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                       <Data.Monoid.Any>_R)_R })) -}
027297d493b99085aee920779d59d12b
  rhythmsWithSync3 ::
    [Linear.V2.V2 GHC.Types.Double] -> [GHC.Types.Double]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ (Linear.V2.V2 GHC.Types.Double)
                   @ GHC.Types.Double
                   Lib.rhythmsWithSync4) -}
5bfafe8d8fc30fc973a989e1e0566197
  rhythmsWithSync4 ::
    Linear.V2.V2 GHC.Types.Double -> GHC.Types.Double
  {- Arity: 1, Strictness: <S(SS),1*U(U(U),U(U))>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Linear.V2.V2 GHC.Types.Double ->
                 case w of ww { Linear.V2.V2 ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.D# ww4 ->
                 case ww2 of ww5 { GHC.Types.D# ww6 ->
                 let {
                   y :: GHC.Prim.Double#
                   = GHC.Prim.sqrtDouble#
                       (GHC.Prim.+## (GHC.Prim.*## ww4 ww4) (GHC.Prim.*## ww6 ww6))
                 } in
                 case Lib.rhythmsWithSync5 of ww7 { Linear.V2.V2 ww8 ww9 ->
                 case ww8 of wild { GHC.Types.D# x1 ->
                 case ww9 of wild1 { GHC.Types.D# x2 ->
                 let {
                   y1 :: GHC.Prim.Double#
                   = GHC.Prim.sqrtDouble#
                       (GHC.Prim.+## (GHC.Prim.*## x1 x1) (GHC.Prim.*## x2 x2))
                 } in
                 case GHC.Prim./## ww4 y of wild2 { DEFAULT ->
                 case GHC.Prim./## ww6 y of wild3 { DEFAULT ->
                 case GHC.Prim./## x1 y1 of wild4 { DEFAULT ->
                 case GHC.Prim./## x2 y1 of wild5 { DEFAULT ->
                 case GHC.Prim.acosDouble#
                        (GHC.Prim.+##
                           (GHC.Prim.*## wild2 wild4)
                           (GHC.Prim.*## wild3 wild5)) of wild6 { DEFAULT ->
                 GHC.Types.D#
                   (GHC.Prim.**##
                      (GHC.Prim.cosDouble# wild6)
                      64.0) } } } } } } } } } } }) -}
69761e6cf3e5aed5ed9c75e6d3b0a164
  rhythmsWithSync5 :: Linear.V2.V2 GHC.Types.Double
  {- Strictness: m,
     Unfolding: (let {
                   a16 :: GHC.Prim.Double# = GHC.Prim.negateDouble# 0.0
                 } in
                 let {
                   dt :: GHC.Types.Double {- Strictness: m -} = GHC.Types.D# a16
                 } in
                 Linear.V2.V2 @ GHC.Types.Double dt Lib.chord_dt1) -}
2498ae4d5400e917f9f8b6297fa4f524
  rhythmsWithSync6 ::
    [Linear.V2.V2 GHC.Types.Double]
    -> [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
    -> [GHC.Types.Double]
    -> [Diagrams.Core.Types.QDiagram
          Diagrams.Backend.SVG.B
          Linear.V2.V2
          GHC.Types.Double
          Data.Monoid.Any]
  {- Arity: 3,
     Unfolding: (GHC.List.zipWith3
                   @ (Linear.V2.V2 GHC.Types.Double)
                   @ (Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.rhythmsWithSync7) -}
b610f9f12bc5dfd8f0263c51ef694a84
  rhythmsWithSync7 ::
    Linear.V2.V2 GHC.Types.Double
    -> Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
    -> GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 3, Strictness: <L,1*U(U(U),U(U))><L,U><L,U>,
     Unfolding: (\ v :: Linear.V2.V2 GHC.Types.Double
                   p :: Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
                   o :: GHC.Types.Double ->
                 Lib.$sfc2
                   (Data.HashMap.Base.Leaf
                      @ Data.Typeable.Internal.TypeRep
                      @ (Diagrams.Core.Style.Attribute
                           (Diagrams.Core.V.V
                              (Diagrams.Core.Types.QDiagram
                                 Diagrams.Backend.SVG.B
                                 Linear.V2.V2
                                 GHC.Types.Double
                                 Data.Monoid.Any))
                           (Diagrams.Core.V.N
                              (Diagrams.Core.Types.QDiagram
                                 Diagrams.Backend.SVG.B
                                 Linear.V2.V2
                                 GHC.Types.Double
                                 Data.Monoid.Any)))
                      __word 8940204702237973666
                      Diagrams.Attributes.$fAttributeClassOpacity3
                      (Diagrams.Core.Style.Attribute
                         @ (Diagrams.Core.V.V
                              (Diagrams.Core.Types.QDiagram
                                 Diagrams.Backend.SVG.B
                                 Linear.V2.V2
                                 GHC.Types.Double
                                 Data.Monoid.Any))
                         @ (Diagrams.Core.V.N
                              (Diagrams.Core.Types.QDiagram
                                 Diagrams.Backend.SVG.B
                                 Linear.V2.V2
                                 GHC.Types.Double
                                 Data.Monoid.Any))
                         @ Diagrams.Attributes.Opacity
                         Diagrams.Attributes.$fAttributeClassOpacity
                         o `cast`
                         (Trans
                              (Sym (Data.Monoid.NTCo:Product[0] <GHC.Types.Double>_R))
                              (Sym (Diagrams.Attributes.NTCo:Opacity[0])))))
                     `cast`
                   (Sym (Diagrams.Core.Style.NTCo:Style[0]
                             <Diagrams.Core.V.V
                                (Diagrams.Core.Types.QDiagram
                                   Diagrams.Backend.SVG.B
                                   Linear.V2.V2
                                   GHC.Types.Double
                                   Data.Monoid.Any)>_N
                             <Diagrams.Core.V.N
                                (Diagrams.Core.Types.QDiagram
                                   Diagrams.Backend.SVG.B
                                   Linear.V2.V2
                                   GHC.Types.Double
                                   Data.Monoid.Any)>_N))
                   (Lib.polyRhythm_f
                      (GHC.Types.:
                         @ (Diagrams.Located.Located
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                         (Diagrams.Located.Loc
                            @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                            p `cast`
                            (Linear.Affine.Point
                               (Sub (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                                              <Linear.V2.V2>_N <GHC.Types.Double>_N)))
                               (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                         <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                            (Diagrams.Trail.Trail
                               @ Linear.V2.V2
                               @ GHC.Types.Double
                               @ Diagrams.Trail.Line
                               (Lib.chord_g1
                                  (GHC.Types.:
                                     @ (Diagrams.Segment.Segment
                                          Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double)
                                     (case v of ww { Linear.V2.V2 ww1 ww2 ->
                                      case ww2 of wild { GHC.Types.D# x1 ->
                                      let {
                                        a16 :: GHC.Prim.Double# = GHC.Prim.+## x1 1.0
                                      } in
                                      let {
                                        x2 :: GHC.Prim.Double# = GHC.Prim.*## 0.5 a16
                                      } in
                                      Diagrams.Segment.Cubic
                                        @ Diagrams.Segment.Closed
                                        @ Linear.V2.V2
                                        @ GHC.Types.Double
                                        (Linear.V2.V2
                                           @ GHC.Types.Double
                                           (GHC.Types.D# (GHC.Prim.*## x2 0.0))
                                           (GHC.Types.D# x2))
                                        (Linear.V2.V2 @ GHC.Types.Double ww1 (GHC.Types.D# x2))
                                        (Diagrams.Segment.OffsetClosed
                                           @ Diagrams.Segment.Closed
                                           @ Linear.V2.V2
                                           @ GHC.Types.Double
                                           @~ <Diagrams.Segment.Closed>_N
                                           (Linear.V2.V2
                                              @ GHC.Types.Double
                                              ww1
                                              (GHC.Types.D# a16))) } })
                                     (GHC.Types.[]
                                        @ (Diagrams.Segment.Segment
                                             Diagrams.Segment.Closed
                                             Linear.V2.V2
                                             GHC.Types.Double))))))
                         (GHC.Types.[]
                            @ (Diagrams.Located.Located
                                 (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))))
                        `cast`
                      (Sym (Diagrams.Path.NTCo:Path[0]
                                <Linear.V2.V2>_N <GHC.Types.Double>_N)))) -}
ba0e6d95bead06528f67b61c29839b6b
  rhythmsWithSync8 ::
    GHC.Types.Double
    -> Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: GHC.Types.Double ->
                 case ds of wild { GHC.Types.D# x1 ->
                 (Linear.V2.V2
                    @ GHC.Types.Double
                    (GHC.Types.D# (GHC.Prim.*## x1 0.0))
                    (GHC.Types.D# x1))
                   `cast`
                 (Sym (Linear.Affine.NTCo:Point[0]
                           <Linear.V2.V2>_R) <GHC.Types.Double>_N) }) -}
9e55a43111dc5b66c2614259d67ab648
  rhythmsWithSync9 ::
    Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Unfolding: (case Diagrams.Core.V.$p1InSpace
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                        Lib.$sfc4
                          `cast`
                        (Diagrams.Core.V.InSpace
                           <Linear.V2.V2>_N
                           <GHC.Types.Double>_N
                           (Diagrams.Core.Types.QDiagram
                              <Diagrams.Backend.SVG.B>_N
                              (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                              (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                              <Data.Monoid.Any>_N)_N)_R of cobox { GHC.Types.Eq# cobox1 ->
                 case Diagrams.Core.V.$p2InSpace
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                        Lib.$sfc4
                          `cast`
                        (Diagrams.Core.V.InSpace
                           <Linear.V2.V2>_N
                           <GHC.Types.Double>_N
                           (Diagrams.Core.Types.QDiagram
                              <Diagrams.Backend.SVG.B>_N
                              (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                              (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                              <Data.Monoid.Any>_N)_N)_R of cobox2 { GHC.Types.Eq# cobox3 ->
                 (Lib.oscScale20
                    Lib.rhythmsWithSync10
                      `cast`
                    (Diagrams.Core.Transform.Transformation
                       (Trans
                            (Sub (Sym cobox1))
                            (Diagrams.Core.V.V
                               (Diagrams.Core.Types.QDiagram
                                  <Diagrams.Backend.SVG.B>_N
                                  (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                  (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                  <Data.Monoid.Any>_N)_N)_R)
                       (Trans
                            (Sym cobox3)
                            (Diagrams.Core.V.N
                               (Diagrams.Core.Types.QDiagram
                                  <Diagrams.Backend.SVG.B>_N
                                  (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                  (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                  <Data.Monoid.Any>_N)_N)_N))_R)
                   `cast`
                 ((Diagrams.Core.Types.QDiagram
                     <Diagrams.Backend.SVG.B>_N
                     (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                     (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                     <Data.Monoid.Any>_R)_R
                  ->_R (Diagrams.Core.Types.QDiagram
                          <Diagrams.Backend.SVG.B>_N
                          (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                          (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                          <Data.Monoid.Any>_R)_R) } }) -}
8c0bf8a38291805432c46945dd45b68d
  rhythmsWithSync_go ::
    [[Diagrams.Core.Types.QDiagram
        Diagrams.Backend.SVG.B
        Linear.V2.V2
        GHC.Types.Double
        Data.Monoid.Any]]
    -> [Diagrams.Core.Types.QDiagram
          Diagrams.Backend.SVG.B
          Linear.V2.V2
          GHC.Types.Double
          Data.Monoid.Any]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
7917ddb940742d9546a2de5418d10c60
  rhythmsWithSync_go1 ::
    [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
    -> [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
    -> [[Linear.V2.V2 GHC.Types.Double]]
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
6b5eeea4125b8e19800e3777a5546ed8
  rhythmsWithSync_go2 ::
    [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
    -> [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
    -> [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
0eb0cd83c5a23d97a576ebf384edf11c
  rhythms_f ::
    Diagrams.TwoD.Attributes.Texture GHC.Types.Double
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Unfolding: (Diagrams.TwoD.Attributes.lineTexture
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                   Lib.$sfc4
                     `cast`
                   (Diagrams.Core.V.InSpace
                      <Linear.V2.V2>_N
                      <GHC.Types.Double>_N
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R
                   Lib.$s$fRenderablePathSVG3
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <GHC.Types.Double>_N))
                   GHC.Float.$fFloatingDouble
                   Lib.$sfc2
                     `cast`
                   (Sym (Diagrams.Core.Style.NTCo:HasStyle[0]
                             (Diagrams.Core.Types.QDiagram
                                <Diagrams.Backend.SVG.B>_N
                                (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                <Data.Monoid.Any>_N)_N))) -}
fcec38bc3ee55b98d9f630ef6876961c
  tone ::
    GHC.Types.Double
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 1,
     Unfolding: (\ w :: GHC.Types.Double ->
                 case w of ww { GHC.Types.D# ww1 ->
                 Lib.$wosc Lib.chord28 Lib.chord4 Lib.chord_x ww1 }) -}
1111b39f05b68e55383afed77e69ab64
  tones ::
    GHC.Types.Double
    -> GHC.Types.Int
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Vector.Storable.Vector GHC.Types.Double
    -> GHC.Types.Int
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 5, Unfolding: (Lib.polyOsc Lib.tone Lib.tones1) -}
f15e9b3ff69a77632799b82fd00df17c
  tones1 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 1,
     Unfolding: (Lib.oscs
                   Lib.chord10
                     `cast`
                   (<Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_R
                    ->_R (Diagrams.Core.Types.QDiagram
                            <Diagrams.Backend.SVG.B>_N
                            (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                            (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                            <Data.Monoid.Any>_R)_R)) -}
e1a464a204f6618ef745391db7e1ac5e
  vdist ::
    GHC.Types.Double
    -> [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ sepa :: GHC.Types.Double ->
                 Lib.labelOscs29
                   (Diagrams.Combinators.CatOpts
                      @ GHC.Types.Double
                      Diagrams.Combinators.Distrib
                      sepa
                      (Data.Proxy.Proxy @ * @ GHC.Types.Double))) -}
"SPEC/Lib $fEnvelopedQDiagram @ SVG @ V2 @ Double @ Any" [ALWAYS] forall $dMetric :: Linear.Metric.Metric
                                                                                       (Diagrams.Core.V.V
                                                                                          (Diagrams.Core.Types.QDiagram
                                                                                             Diagrams.Backend.SVG.SVG
                                                                                             Linear.V2.V2
                                                                                             GHC.Types.Double
                                                                                             Data.Monoid.Any))
                                                                         $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                                             (Diagrams.Core.V.N
                                                                                                (Diagrams.Core.Types.QDiagram
                                                                                                   Diagrams.Backend.SVG.SVG
                                                                                                   Linear.V2.V2
                                                                                                   GHC.Types.Double
                                                                                                   Data.Monoid.Any))
                                                                         $dMetric1 :: Linear.Metric.Metric
                                                                                        Linear.V2.V2
                                                                         $dOrderedField1 :: Diagrams.Core.Envelope.OrderedField
                                                                                              GHC.Types.Double
                                                                         $dMonoid' :: Data.Monoid.WithSemigroup.Monoid'
                                                                                        Data.Monoid.Any
  Diagrams.Core.Types.$fEnvelopedQDiagram @ Diagrams.Backend.SVG.SVG
                                          @ Linear.V2.V2
                                          @ GHC.Types.Double
                                          @ Data.Monoid.Any
                                          $dMetric
                                          $dOrderedField
                                          $dMetric1
                                          $dOrderedField1
                                          $dMonoid'
  = Lib.$s$fEnvelopedQDiagram
"SPEC/Lib $fFractionalV2 @ Double" [ALWAYS] forall $dNum :: GHC.Num.Num
                                                              (Linear.V2.V2 GHC.Types.Double)
                                                   $dFractional :: GHC.Real.Fractional
                                                                     GHC.Types.Double
  Linear.V2.$fFractionalV2 @ GHC.Types.Double $dNum $dFractional
  = Lib.$s$fFractionalV2
"SPEC/Lib $fMonoidQDiagram _ @ V2 @ Double @ Any" [ALWAYS] forall @ b
                                                                  $dMetric :: Linear.Metric.Metric
                                                                                Linear.V2.V2
                                                                  $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                                      GHC.Types.Double
                                                                  $dSemigroup :: Data.Semigroup.Semigroup
                                                                                   Data.Monoid.Any
  Diagrams.Core.Types.$fMonoidQDiagram @ b
                                       @ Linear.V2.V2
                                       @ GHC.Types.Double
                                       @ Data.Monoid.Any
                                       $dMetric
                                       $dOrderedField
                                       $dSemigroup
  = Lib.$s$fMonoidQDiagram @ b
"SPEC/Lib $fNumV2 @ Double" [ALWAYS] forall $dNum :: GHC.Num.Num
                                                       GHC.Types.Double
  Linear.V2.$fNumV2 @ GHC.Types.Double $dNum
  = Lib.$s$fFractionalV2_$s$fNumV2
"SPEC/Lib $fRenderablePathSVG @ Double" [ALWAYS] forall $dTransformable :: Diagrams.Core.Transform.Transformable
                                                                             (Diagrams.Path.Path
                                                                                Linear.V2.V2
                                                                                GHC.Types.Double)
                                                        tup :: Graphics.Rendering.SVG.SVGFloat
                                                                 GHC.Types.Double
  Diagrams.Backend.SVG.$fRenderablePathSVG @ GHC.Types.Double
                                           $dTransformable
                                           tup
  = Lib.$s$fRenderablePathSVG
"SPEC/Lib $fRenderableTextSVG @ Double" [ALWAYS] forall $dTransformable :: Diagrams.Core.Transform.Transformable
                                                                             (Diagrams.TwoD.Text.Text
                                                                                GHC.Types.Double)
                                                        tup :: Graphics.Rendering.SVG.SVGFloat
                                                                 GHC.Types.Double
  Diagrams.Backend.SVG.$fRenderableTextSVG @ GHC.Types.Double
                                           $dTransformable
                                           tup
  = Lib.$s$fRenderableTextSVG
"SPEC/Lib $fSemigroupQDiagram _ @ V2 @ Double @ Any" [ALWAYS] forall @ b
                                                                     $dMetric :: Linear.Metric.Metric
                                                                                   Linear.V2.V2
                                                                     $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                                         GHC.Types.Double
                                                                     $dSemigroup :: Data.Semigroup.Semigroup
                                                                                      Data.Monoid.Any
  Diagrams.Core.Types.$fSemigroupQDiagram @ b
                                          @ Linear.V2.V2
                                          @ GHC.Types.Double
                                          @ Data.Monoid.Any
                                          $dMetric
                                          $dOrderedField
                                          $dSemigroup
  = Lib.$s$fSemigroupQDiagram @ b
"SPEC/Lib $fSemigroupQDiagram_$cstimes _ @ V2 @ Double @ Any" [ALWAYS] forall @ b
                                                                              $dMetric :: Linear.Metric.Metric
                                                                                            Linear.V2.V2
                                                                              $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                                                  GHC.Types.Double
                                                                              $dSemigroup :: Data.Semigroup.Semigroup
                                                                                               Data.Monoid.Any
  Diagrams.Core.Types.$fSemigroupQDiagram_$cstimes @ b
                                                   @ Linear.V2.V2
                                                   @ GHC.Types.Double
                                                   @ Data.Monoid.Any
                                                   $dMetric
                                                   $dOrderedField
                                                   $dSemigroup
  = Lib.$s$fSemigroupQDiagram_$s$fSemigroupQDiagram_$cstimes @ b
"SPEC/Lib $fTrailLikeLocated @ (Trail V2 Double)" [ALWAYS] forall $dMetric :: Linear.Metric.Metric
                                                                                (Diagrams.Core.V.V
                                                                                   (Diagrams.Located.Located
                                                                                      (Diagrams.Trail.Trail
                                                                                         Linear.V2.V2
                                                                                         GHC.Types.Double)))
                                                                  $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                                      (Diagrams.Core.V.N
                                                                                         (Diagrams.Located.Located
                                                                                            (Diagrams.Trail.Trail
                                                                                               Linear.V2.V2
                                                                                               GHC.Types.Double)))
                                                                  $dTrailLike :: Diagrams.TrailLike.TrailLike
                                                                                   (Diagrams.Trail.Trail
                                                                                      Linear.V2.V2
                                                                                      GHC.Types.Double)
  Diagrams.TrailLike.$fTrailLikeLocated @ (Diagrams.Trail.Trail
                                             Linear.V2.V2 GHC.Types.Double)
                                        $dMetric
                                        $dOrderedField
                                        $dTrailLike
  = Lib.$s$fTrailLikeLocated
"SPEC/Lib $fTrailLikeQDiagram @ SVG @ Double" [ALWAYS] forall $dMetric :: Linear.Metric.Metric
                                                                            (Diagrams.Core.V.V
                                                                               (Diagrams.Core.Types.QDiagram
                                                                                  Diagrams.Backend.SVG.SVG
                                                                                  Linear.V2.V2
                                                                                  GHC.Types.Double
                                                                                  Data.Monoid.Any))
                                                              $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                                  (Diagrams.Core.V.N
                                                                                     (Diagrams.Core.Types.QDiagram
                                                                                        Diagrams.Backend.SVG.SVG
                                                                                        Linear.V2.V2
                                                                                        GHC.Types.Double
                                                                                        Data.Monoid.Any))
                                                              $dTypeableFloat :: Diagrams.Core.Types.TypeableFloat
                                                                                   GHC.Types.Double
                                                              $dRenderable :: Diagrams.Core.Types.Renderable
                                                                                (Diagrams.Path.Path
                                                                                   Linear.V2.V2
                                                                                   GHC.Types.Double)
                                                                                Diagrams.Backend.SVG.SVG
  Diagrams.TwoD.Path.$fTrailLikeQDiagram @ Diagrams.Backend.SVG.SVG
                                         @ GHC.Types.Double
                                         $dMetric
                                         $dOrderedField
                                         $dTypeableFloat
                                         $dRenderable
  = Lib.$s$fTrailLikeQDiagram
"SPEC/Lib $fTrailLikeTrail @ V2 @ Double" [ALWAYS] forall $dMetric :: Linear.Metric.Metric
                                                                        (Diagrams.Core.V.V
                                                                           (Diagrams.Trail.Trail
                                                                              Linear.V2.V2
                                                                              GHC.Types.Double))
                                                          $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                              (Diagrams.Core.V.N
                                                                                 (Diagrams.Trail.Trail
                                                                                    Linear.V2.V2
                                                                                    GHC.Types.Double))
                                                          $dMetric1 :: Linear.Metric.Metric
                                                                         Linear.V2.V2
                                                          $dOrderedField1 :: Diagrams.Core.Envelope.OrderedField
                                                                               GHC.Types.Double
  Diagrams.TrailLike.$fTrailLikeTrail @ Linear.V2.V2
                                      @ GHC.Types.Double
                                      $dMetric
                                      $dOrderedField
                                      $dMetric1
                                      $dOrderedField1
  = Lib.$s$fTrailLikeTrail
"SPEC/Lib unitX @ V2 @ Double" [ALWAYS] forall $dR1 :: Linear.V1.R1
                                                         Linear.V2.V2
                                               $dAdditive :: Linear.Vector.Additive Linear.V2.V2
                                               $dNum :: GHC.Num.Num GHC.Types.Double
  Diagrams.TwoD.Vector.unitX @ Linear.V2.V2
                             @ GHC.Types.Double
                             $dR1
                             $dAdditive
                             $dNum
  = Lib.$sunitX
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

