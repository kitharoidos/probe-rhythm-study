
==================== FINAL INTERFACE ====================
2016-09-18 11:38:27.287849 UTC

interface probe_G2rIiywLUzz2z377ALaJVY:Lib 7103
  interface hash: 8d8ede1521f20c4f35bc65db0cc3090e
  ABI hash: 3a75edd8dd0e5ad5306d6c9151d1ca84
  export-list hash: ee1c89849e54270c9ecdf40840f1ab25
  orphan hash: 67673b3126de780be7d04176fc8de0ac
  flag hash: 0d0e8bf775f5cba7cce7221067c4042c
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.chord
  Lib.eqt
  Lib.farey
  Lib.hdist
  Lib.polyRhythm
  Lib.rhythms
  Lib.rhythmsWithSync
  Lib.tones
  Lib.vdist
module dependencies:
package dependencies: JuicyPixels-3.2.7.2@Juicy_FsUyw0EJkIqKIuj8ORojoT
                      StateVar-1.1.0.4@State_IOvB80WkYNkEizdt0JVpzy
                      active-0.2.0.10@activ_EndpnTck6Qn4ZBG7VTfRFy
                      adjunctions-4.3@adjun_HUA1si0oygHIohE6wWvtj8
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      ansi-wl-pprint-0.6.7.3@ansiw_KTAhiPa3RNI09mbeoAwSSX
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      async-2.1.0@async_KuqnF1GrhHK5nNp6Zzm3jy base-4.8.2.0
                      base64-bytestring-1.0.0.1@base6_AkCk8zInckjJsyQ4AIFHPN
                      base-orphans-0.5.4@baseo_0gFtKFBT26OGSKHmmdqdfx
                      bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      blaze-builder-0.4.0.2@blaze_5LQurmvTy7l9rPlWgPlNE4
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      bytes-0.15.2@bytes_LGwqVSlCJrR4BGoUsj8EWt
                      cereal-0.5.2.0@cerea_GKnWyxn5hRWK9xfCMeMEL8
                      colour-2.3.3@colou_4tkGkumXZDK9tS5HCSa7Y0
                      comonad-4.2.7.2@comon_5wEqfQVXg9MGfIPxSKfS4M
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      contravariant-1.4@contr_7gFjdZ6ciei9744gjZQMHp
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx
                      diagrams-solve-0.1.0.1@diagr_4QN76f31u5VGJm9TMFt1id
                      diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos
                      diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      distributive-0.5.0.2@distr_55SIdsoyihS4jXBaaVvPQX
                      dual-tree-0.2.0.9@dualt_5jNsABX0YwSIha1EAMeU6i
                      exceptions-0.8.3@excep_BEih2K3eMGTE4cg5iulra8
                      fail-4.9.0.0@fail_2xB1AvdW34sDm9N3JOe33G
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m
                      fingertree-0.1.1.0@finge_1lOqL113GSbGT54Xr1ttX9
                      free-4.12.4@free_D8pop1Lncn7BkE4zjJTjla
                      fsnotify-0.2.1@fsnot_6GshfYbGW9a0XQQFUIcEx3 ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I
                      hfsevents-0.1.6@hfsev_GV1CDMEJaKE6yriQq8fXZ2
                      hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz integer-gmp-1.0.0.0
                      intervals-0.7.2@inter_CVqja9i5ZjWEnJ4aryb7v4
                      kan-extensions-4.2.3@kanex_8yLFa561sPQJZ5XPOmzMGi
                      lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if
                      linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv
                      lucid-2.9.6@lucid_HB98YTuafJo82fcOQnijha
                      lucid-svg-0.6.0.1@lucid_IfaODiCffQ9JIcJQYUi8er
                      mmorph-1.0.6@mmorp_42KUkOfzC6q3qCtAMiSHam
                      monoid-extras-0.4.2@monoi_H1bs9gF4pIcGpoc15tQgor
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      newtype-0.2@newty_Bn42BOEtLjZ0LahRn80jTb
                      optparse-applicative-0.12.1.0@optpa_FpNJ7fLofFNEy3rK4ZnBoD
                      prelude-extras-0.4.0.3@prelu_1gQpKVfMHul71LsAFgGRhv
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      profunctors-5.2@profu_LHFqrYSAR0z1HJQ4sjj1Mu
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      reflection-2.1.2@refle_Is9SiIf9zRHG2wDNDxPaS9
                      scientific-0.3.4.9@scien_1WVNjGUftkQ9QzH4DOM2n1
                      semigroupoids-5.0.1@semig_GRN7TOS9fx09tFw63gc4EK
                      semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1
                      split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6 template-haskell-2.10.0.0
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unix-compat-0.4.1.4@unixc_Km8uiabmElX5mrb8D4Fywe
                      unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu
orphans: active-0.2.0.10@activ_EndpnTck6Qn4ZBG7VTfRFy:Data.Active
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         base-orphans-0.5.4@baseo_0gFtKFBT26OGSKHmmdqdfx:Data.Orphans
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         colour-2.3.3@colou_4tkGkumXZDK9tS5HCSa7Y0:Data.Colour
         diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx:Diagrams.Backend.SVG.CmdLine
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Animation.Active
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.ThreeD.Types
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Trail
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Path
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Segment
         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Types
         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Points
         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Types
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Element
         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Util
         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Vector
         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Numeric.Matrix
         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Numeric.Vector
         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Instances
         monoid-extras-0.4.2@monoi_H1bs9gF4pIcGpoc15tQgor:Data.Monoid.MList
         reflection-2.1.2@refle_Is9SiIf9zRHG2wDNDxPaS9:Data.Reflection
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: JuicyPixels-3.2.7.2@Juicy_FsUyw0EJkIqKIuj8ORojoT:Codec.Picture.Tga
                         JuicyPixels-3.2.7.2@Juicy_FsUyw0EJkIqKIuj8ORojoT:Codec.Picture.Tiff
                         JuicyPixels-3.2.7.2@Juicy_FsUyw0EJkIqKIuj8ORojoT:Codec.Picture.Types
                         active-0.2.0.10@activ_EndpnTck6Qn4ZBG7VTfRFy:Data.Active
                         adjunctions-4.3@adjun_HUA1si0oygHIohE6wWvtj8:Data.Functor.Rep
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         base-4.8.2.0:GHC.TypeLits
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Biff
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Clown
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Flip
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Join
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Joker
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Product
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Sum
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Tannen
                         bifunctors-5.2@bifun_FaZUwfD8a9f4Qa0UcHfTzx:Data.Bifunctor.Wrapped
                         bytes-0.15.2@bytes_LGwqVSlCJrR4BGoUsj8EWt:Data.Bytes.Get
                         bytes-0.15.2@bytes_LGwqVSlCJrR4BGoUsj8EWt:Data.Bytes.Signed
                         bytes-0.15.2@bytes_LGwqVSlCJrR4BGoUsj8EWt:Data.Bytes.VarInt
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx:Diagrams.Backend.SVG
                         diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx:Diagrams.Backend.SVG.CmdLine
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Angle
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Animation.Active
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Backend.CmdLine
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.BoundingBox
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Coordinates
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Direction
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Located
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Path
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Segment
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Size
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Tangent
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.ThreeD.Camera
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.ThreeD.Light
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.ThreeD.Shapes
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.ThreeD.Types
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Trail
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Attributes
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Image
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Path
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Segment.Bernstein
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Text
                         diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Types
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Envelope
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Measure
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Names
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Points
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Query
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Style
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Trace
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Transform
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Types
                         diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.V
                         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Devel
                         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Matrix
                         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Modular
                         hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Numeric
                         intervals-0.7.2@inter_CVqja9i5ZjWEnJ4aryb7v4:Numeric.Interval.Kaucher
                         kan-extensions-4.2.3@kanex_8yLFa561sPQJZ5XPOmzMGi:Data.Functor.Yoneda
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.At
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Internal.Indexed
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Internal.Zoom
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Reified
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Tuple
                         lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Wrapped
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Affine
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Plucker
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Quaternion
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V0
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V1
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V2
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V3
                         linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V4
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         profunctors-5.2@profu_LHFqrYSAR0z1HJQ4sjj1Mu:Data.Profunctor.Rep
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.List.NonEmpty
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.Semigroup
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashSet
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
                         zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu:Codec.Compression.Zlib.Stream
import  -/  base-4.8.2.0:Control.Arrow ab7f126fed349de468f94ac777dc8f4e
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Function 6b13a8d3a5e3bd757a91434dce3fc7f3
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:Data.Tuple 012ad951a59a9d85fe1de36a2f012986
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Float e532d434ec2447d809887c0fca1d78a5
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  colour-2.3.3@colou_4tkGkumXZDK9tS5HCSa7Y0:Data.Colour.Internal c20506210de7efa28736509943f23e6a
import  -/  diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx:Diagrams.Backend.SVG c562a010d4595b18d96d53f74cf07048
import  -/  diagrams-svg-1.3.1.10@diagr_2EhV3p2HTUo7gHaGfNwFxx:Diagrams.Backend.SVG.CmdLine dbe49f9e9d2cb2d4320daa55800596bc
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Attributes e945f2a5f87fb235562bae36a3c6bb4a
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Combinators 7b77613aefaf8597e8ee70feb2ce44b6
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Coordinates 7f387e4b397793d7c5397c5ee97f282a
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.CubicSpline 2f6846320e30ffa671b1d0d42e59c0a7
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Located f3c9207b3d0bc09ee24792b0842d6336
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Parametric 7634c31d349bf40bec0b69474240d46c
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Prelude 0f0b2fe832b1921709da84f6a857570f
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Segment 2b04359ef9a61229df01d2bb7ff95936
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Trail 4d5ca131a4b41262b2cda77b553bdef5
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TrailLike fb3426a9fbba5e2a34617c60350ba21c
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Attributes b3e78a4dd9a8d93e24a7556a777bd61a
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Combinators 03231dedce72c19a9bc778ea7b256eed
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Path bfcb360c51da34d703d00c4826347048
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Text 189af8ca2b3159b4323696fdc02a9ff0
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Transform fb786e473269a475ce61f25b3d039d31
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Types 5b80bccbd13380ff61de84fba9aa6866
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.TwoD.Vector 1c596ab9358c7ea1c5e7f0a44ab251dc
import  -/  diagrams-lib-1.3.1.4@diagr_DWb95zeeC5n2NQHOdh1Xos:Diagrams.Util c1d249654ca2108c93e5f23664b382b3
import  -/  diagrams-core-1.3.0.8@diagr_LetrQCUwbI31YTqCYd7I3U:Diagrams.Core.Types b26bfe70fb5690d8bf4d222cdc975e30
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Container 15e064ebb72d02d745e2d41c58d36b71
import  -/  hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Util a1800fa260fb2c6a63231b949f2e9a56
import  -/  hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Internal.Vector b0399c52da44b2d43a18d6540863edd5
import  -/  hmatrix-0.17.0.2@hmatr_48ekk5lFtSc42AbtSb4jyz:Numeric.LinearAlgebra.Data 2eb4564f65b2fcb1a7ad5c48cbb49507
import  -/  lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Getter 105503d237cde0a4a0283df0df261cdd
import  -/  lens-4.13@lens_GUhLZmPn08l1pkGqj7n9if:Control.Lens.Setter 7cb2279cdbd18e7424cc7b945ac52ae2
import  -/  linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Affine c4bd38b10598575abfa995e92f3479d0
import  -/  linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Metric b043a26170dabe6d32ee4f608e059c3a
import  -/  linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V1 f2f299a56736b3bd3ae1444710aa1996
import  -/  linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.V2 08d35c0cfda723bf552ac2d085f0e2eb
import  -/  linear-1.20.5@linea_FAr6Jc872as1DHBSxOu5Yv:Linear.Vector c60d3353f143a6f7dc07e60f46ac356e
import  -/  semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.Semigroup 7e43d8b45f777a53523f0158b401b8aa
import  -/  split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE:Data.List.Split 487cc1966f0f25916f1ba58bdff4b0ee
import  -/  split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE:Data.List.Split.Internals ec8cf5264ec78ab060cadb7ee5b994f0
import  -/  vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable 7cbc4e18155a779cbf01d5724261dd19
ca243e8355d9c2b99e20af3b3abf391a
  $s$fFractionalV1 :: GHC.Num.Num (Linear.V2.V2 GHC.Types.Double)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fFractionalV2_$s$fNumV2 -}
84b0effa69b9a35c9de2d94659618056
  $s$fFractionalV2 ::
    GHC.Real.Fractional (Linear.V2.V2 GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V2.V2 GHC.Types.Double)
                  Lib.$s$fFractionalV1
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double
                     eta2 :: Linear.V2.V2 GHC.Types.Double ->
                   Linear.V2.$fAdditiveV2_$sliftA2
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     GHC.Float.$fFractionalDouble_$c/
                     eta1
                     eta2)
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double ->
                   case eta1 of wild { Linear.V2.V2 a40 b ->
                   case GHC.Float.$fFractionalDouble_$crecip
                          a40 of dt { GHC.Types.D# ipv ->
                   case GHC.Float.$fFractionalDouble_$crecip
                          b of dt1 { GHC.Types.D# ipv1 ->
                   Linear.V2.V2 @ GHC.Types.Double dt dt1 } } })
                  (\ eta1 :: GHC.Real.Rational ->
                   let {
                     a40 :: GHC.Types.Double
                     = case eta1 of wild { GHC.Real.:% n d ->
                       GHC.Float.rationalToDouble n d }
                   } in
                   Linear.V2.$WV2 @ GHC.Types.Double a40 a40) -}
0366001c141c46a61f06c225cb8a7978
  $s$fFractionalV2_$s$fNumV2 ::
    GHC.Num.Num (Linear.V2.V2 GHC.Types.Double)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V2.V2 GHC.Types.Double)
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double
                     eta2 :: Linear.V2.V2 GHC.Types.Double ->
                   Linear.V2.$fAdditiveV2_$sliftA2
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     GHC.Float.$fNumDouble_$c+
                     eta1
                     eta2)
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double
                     eta2 :: Linear.V2.V2 GHC.Types.Double ->
                   Linear.V2.$fAdditiveV2_$sliftA2
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     GHC.Float.$fNumDouble_$c-
                     eta1
                     eta2)
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double
                     eta2 :: Linear.V2.V2 GHC.Types.Double ->
                   Linear.V2.$fAdditiveV2_$sliftA2
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     @ GHC.Types.Double
                     GHC.Float.$fNumDouble_$c*
                     eta1
                     eta2)
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double ->
                   case eta1 of wild { Linear.V2.V2 a40 b ->
                   case GHC.Float.$fNumDouble_$cnegate a40 of dt { GHC.Types.D# ipv ->
                   case GHC.Float.$fNumDouble_$cnegate b of dt1 { GHC.Types.D# ipv1 ->
                   Linear.V2.V2 @ GHC.Types.Double dt dt1 } } })
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double ->
                   case eta1 of wild { Linear.V2.V2 a40 b ->
                   case GHC.Float.$fNumDouble_$cabs a40 of dt { GHC.Types.D# ipv ->
                   case GHC.Float.$fNumDouble_$cabs b of dt1 { GHC.Types.D# ipv1 ->
                   Linear.V2.V2 @ GHC.Types.Double dt dt1 } } })
                  (\ eta1 :: Linear.V2.V2 GHC.Types.Double ->
                   case eta1 of wild { Linear.V2.V2 a40 b ->
                   case GHC.Float.$fNumDouble_$csignum a40 of dt { GHC.Types.D# ipv ->
                   case GHC.Float.$fNumDouble_$csignum b of dt1 { GHC.Types.D# ipv1 ->
                   Linear.V2.V2 @ GHC.Types.Double dt dt1 } } })
                  (\ eta1 :: GHC.Integer.Type.Integer ->
                   let {
                     a40 :: GHC.Types.Double
                     = case GHC.Integer.Type.doubleFromInteger eta1 of wild { DEFAULT ->
                       GHC.Types.D# wild }
                   } in
                   Linear.V2.$WV2 @ GHC.Types.Double a40 a40) -}
9e259e867b3ee5686e65f4024385f1ad
  $s$fMonoidQDiagram ::
    GHC.Base.Monoid
      (Diagrams.Core.Types.QDiagram
         b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ b.
                  @ (Diagrams.Core.Types.QDiagram
                       b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any)
                  (Diagrams.Core.Types.$fMonoidQDiagram_$cmempty
                     @ b
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                     Lib.$s$fMonoidQDiagram1
                     Data.Semigroup.$fSemigroupAny)
                  (Diagrams.Core.Types.$fMonoidQDiagram_$cmappend
                     @ b
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                     Lib.$s$fMonoidQDiagram1
                     Data.Semigroup.$fSemigroupAny)
                  (Diagrams.Core.Types.$fMonoidQDiagram_$cmconcat
                     @ b
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                     Lib.$s$fMonoidQDiagram1
                     Data.Semigroup.$fSemigroupAny) -}
fe2dac1eeefafdccc91cdd39a6727a7e
  $s$fMonoidQDiagram1 ::
    Diagrams.Core.Envelope.OrderedField GHC.Types.Double
  {- Unfolding: (Diagrams.Core.Envelope.$fOrderedFields
                   @ GHC.Types.Double
                   GHC.Float.$fFloatingDouble
                   GHC.Classes.$fOrdDouble) -}
1bc65ac652250f712a4c4dcb2fb556c2
  $s$fRenderablePathSVG ::
    Diagrams.Core.Types.Renderable
      (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double)
      Diagrams.Backend.SVG.SVG
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double)
                  @ Diagrams.Backend.SVG.SVG
                  Lib.$s$fRenderablePathSVG5
                  (Diagrams.Backend.SVG.$fRenderablePathSVG_$crender
                     @ GHC.Types.Double
                     Lib.$s$fRenderablePathSVG5
                     Lib.$s$fRenderablePathSVG1) -}
ebb19568cb097ded920dbb0bbf3bc9b0
  $s$fRenderablePathSVG1 ::
    Graphics.Rendering.SVG.SVGFloat GHC.Types.Double
  {- Strictness: m,
     Unfolding: ((GHC.Float.$fShowDouble,
                  Lib.$s$fRenderablePathSVG2)) -}
1cbf481317229bdf6e5ebdaa165095d5
  $s$fRenderablePathSVG2 ::
    Diagrams.Core.Types.TypeableFloat GHC.Types.Double
  {- Unfolding: (Diagrams.Core.Types.$fTypeableFloatn
                   @ GHC.Types.Double
                   Lib.$s$fRenderablePathSVG3
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <GHC.Types.Double>_N))
                   GHC.Float.$fRealFloatDouble) -}
ac73d5e2503c206985eab497dca74a46
  $s$fRenderablePathSVG3 ::
    GHC.Prim.Proxy# GHC.Types.Double -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# GHC.Types.Double ->
                 Lib.$s$fRenderablePathSVG4) -}
6b1743d98e7fb4192dc286aea48e29fd
  $s$fRenderablePathSVG4 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 8705313363352784917
                   __word 10768904120299974647
                   Lib.$s$fRenderablePathSVG_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
c8d89e4e59c95da2a0841d45e9f062f9
  $s$fRenderablePathSVG5 ::
    Diagrams.Core.Transform.Transformable
      (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double)
  {- Arity: 1, Strictness: <L,U(U(U,U),U,U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fRenderablePathSVG6
                  `cast`
                (Sym (Diagrams.Core.Transform.NTCo:Transformable[0]
                          <Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double>_N)) -}
8975ed9ed2ad8db6e2aa26c3afe6cfef
  $s$fRenderablePathSVG6 ::
    Diagrams.Core.Transform.Transformation
      (Diagrams.Core.V.V
         (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double))
      (Diagrams.Core.V.N
         (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double))
    -> Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double
  {- Arity: 1, Strictness: <L,U(U(U,U),U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ w3 :: Diagrams.Core.Transform.Transformation
                           (Diagrams.Core.V.V
                              (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double))
                           (Diagrams.Core.V.N
                              (Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double)) ->
                 Diagrams.Path.$w$ctransform
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1
                   w3) -}
8a75ad8022a5ea05dfacc379c421db7b
  $s$fRenderablePathSVG_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 8705313363352784917
                   __word 10768904120299974647
                   Lib.$s$fRenderablePathSVG_ww2
                   Lib.$s$fRenderablePathSVG_ww3
                   Lib.$s$fRenderablePathSVG_ww4) -}
45ca38f7607ee2a7eeff0e67c6591c4c
  $s$fRenderablePathSVG_ww2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "ghc-prim"#) -}
52e4925d0502f951ffa495393f7d13fe
  $s$fRenderablePathSVG_ww3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "GHC.Types"#) -}
fcef597e1d976ce6a047e9dc09a2c931
  $s$fRenderablePathSVG_ww4 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "Double"#) -}
4a2813ecee653acd7c56e6083a03d8fc
  $s$fRenderableTextSVG ::
    Diagrams.Core.Types.Renderable
      (Diagrams.TwoD.Text.Text GHC.Types.Double) Diagrams.Backend.SVG.SVG
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Diagrams.TwoD.Text.Text GHC.Types.Double)
                  @ Diagrams.Backend.SVG.SVG
                  Lib.$s$fRenderableTextSVG1
                  (Diagrams.Backend.SVG.$fRenderableTextSVG_$crender
                     @ GHC.Types.Double
                     Lib.$s$fRenderableTextSVG1
                     Lib.$s$fRenderablePathSVG1) -}
8761a7c0b3549eae15f281bb1b41da3d
  $s$fRenderableTextSVG1 ::
    Diagrams.Core.Transform.Transformable
      (Diagrams.TwoD.Text.Text GHC.Types.Double)
  {- Arity: 2,
     Strictness: <L,1*U(U(C(U(U,U)),C(U)),1*U(C(U),C(U)),1*U(U,U))><S,1*U(1*U(U(C(U(U,U)),C(U(U,U))),1*U(C(U(U,U)),C(U)),1*U(U,U)),U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fRenderableTextSVG2
                  `cast`
                (Sym (Diagrams.Core.Transform.NTCo:Transformable[0]
                          <Diagrams.TwoD.Text.Text GHC.Types.Double>_N)) -}
2a7fe357998ffe3b26c001dec3bef769
  $s$fRenderableTextSVG2 ::
    Diagrams.Core.Transform.Transformation
      (Diagrams.Core.V.V (Diagrams.TwoD.Text.Text GHC.Types.Double))
      (Diagrams.Core.V.N (Diagrams.TwoD.Text.Text GHC.Types.Double))
    -> Diagrams.TwoD.Text.Text GHC.Types.Double
    -> Diagrams.TwoD.Text.Text GHC.Types.Double
  {- Arity: 2,
     Strictness: <L,1*U(U(C(U(U,U)),C(U)),1*U(C(U),C(U)),1*U(U,U))><S,1*U(1*U(U(C(U(U,U)),C(U(U,U))),1*U(C(U(U,U)),C(U)),1*U(U,U)),U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ w1 :: Diagrams.Core.Transform.Transformation
                           (Diagrams.Core.V.V (Diagrams.TwoD.Text.Text GHC.Types.Double))
                           (Diagrams.Core.V.N (Diagrams.TwoD.Text.Text GHC.Types.Double))
                   w2 :: Diagrams.TwoD.Text.Text GHC.Types.Double ->
                 case w2 of ww { Diagrams.TwoD.Text.Text ww2 ww6 ww7 ->
                 case Diagrams.TwoD.Text.$w$ctransform
                        @ GHC.Types.Double
                        GHC.Float.$fFloatingDouble
                        w1
                        ww2
                        ww6
                        ww7 of ww8 { (#,,#) ww9 ww10 ww11 ->
                 Diagrams.TwoD.Text.Text @ GHC.Types.Double ww9 ww10 ww11 } }) -}
b531eade06fc0a0b03330b04a3a621b3
  $s$fSemigroupQDiagram ::
    Data.Semigroup.Semigroup
      (Diagrams.Core.Types.QDiagram
         b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ b.
                  @ (Diagrams.Core.Types.QDiagram
                       b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any)
                  (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                     @ b
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                     Lib.$s$fMonoidQDiagram1
                     Data.Semigroup.$fSemigroupAny)
                  (Diagrams.Core.Types.$fSemigroupQDiagram_$csconcat
                     @ b
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     @ Data.Monoid.Any
                     Linear.V2.$fMetricV2
                     Lib.$s$fMonoidQDiagram1
                     Data.Semigroup.$fSemigroupAny)
                  (Lib.$s$fSemigroupQDiagram_$s$fSemigroupQDiagram_$cstimes @ b) -}
b1743d132d8bbd175b6bcdb1ce77aa6e
  $s$fSemigroupQDiagram_$s$fSemigroupQDiagram_$cstimes ::
    GHC.Real.Integral b1 =>
    b1
    -> Diagrams.Core.Types.QDiagram
         b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
  {- Arity: 3,
     Strictness: <S(SLLLLLLLL),U(U,U,C(C1(U)),C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ b
                   @ b1
                   $dIntegral :: GHC.Real.Integral b1
                   eta1 :: b1
                   eta2 :: Diagrams.Core.Types.QDiagram
                             b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any ->
                 let {
                   $dReal :: GHC.Real.Real b1 = GHC.Real.$p1Integral @ b1 $dIntegral
                 } in
                 case GHC.Classes.<=
                        @ b1
                        (GHC.Real.$p2Real @ b1 $dReal)
                        eta1
                        (GHC.Num.fromInteger
                           @ b1
                           (GHC.Real.$p1Real @ b1 $dReal)
                           __integer 0) of wild {
                   GHC.Types.False
                   -> let {
                        $dReal1 :: GHC.Real.Real b1 = GHC.Real.$p1Integral @ b1 $dIntegral
                      } in
                      let {
                        $dEnum :: GHC.Enum.Enum b1 = GHC.Real.$p2Integral @ b1 $dIntegral
                      } in
                      let {
                        a40 :: GHC.Classes.Ord b1 = GHC.Real.$p2Real @ b1 $dReal1
                      } in
                      let {
                        $dEq :: GHC.Classes.Eq b1 = GHC.Classes.$p1Ord @ b1 a40
                      } in
                      let {
                        $dNum :: GHC.Num.Num b1 = GHC.Real.$p1Real @ b1 $dReal1
                      } in
                      letrec {
                        f4 :: Diagrams.Core.Types.QDiagram
                                b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                              -> b1
                              -> Diagrams.Core.Types.QDiagram
                                   b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                          {- Arity: 2 -}
                        = \ x1 :: Diagrams.Core.Types.QDiagram
                                    b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                            y :: b1 ->
                          case GHC.Real.even @ b1 $dIntegral y of wild1 {
                            GHC.Types.False
                            -> case GHC.Classes.==
                                      @ b1
                                      $dEq
                                      y
                                      (GHC.Num.fromInteger @ b1 $dNum __integer 1) of wild2 {
                                 GHC.Types.False
                                 -> let {
                                      $dReal2 :: GHC.Real.Real b1
                                      = GHC.Real.$p1Integral @ b1 $dIntegral
                                    } in
                                    let {
                                      $dEnum1 :: GHC.Enum.Enum b1
                                      = GHC.Real.$p2Integral @ b1 $dIntegral
                                    } in
                                    let {
                                      a41 :: GHC.Classes.Ord b1 = GHC.Real.$p2Real @ b1 $dReal2
                                    } in
                                    let {
                                      $dEq1 :: GHC.Classes.Eq b1 = GHC.Classes.$p1Ord @ b1 a41
                                    } in
                                    let {
                                      $dNum1 :: GHC.Num.Num b1 = GHC.Real.$p1Real @ b1 $dReal2
                                    } in
                                    letrec {
                                      g2 :: Diagrams.Core.Types.QDiagram
                                              b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                                            -> b1
                                            -> Diagrams.Core.Types.QDiagram
                                                 b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                                            -> Diagrams.Core.Types.QDiagram
                                                 b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                                        {- Arity: 3 -}
                                      = \ x2 :: Diagrams.Core.Types.QDiagram
                                                  b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any
                                          y1 :: b1
                                          z1 :: Diagrams.Core.Types.QDiagram
                                                  b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any ->
                                        case GHC.Real.even @ b1 $dIntegral y1 of wild3 {
                                          GHC.Types.False
                                          -> case GHC.Classes.==
                                                    @ b1
                                                    $dEq1
                                                    y1
                                                    (GHC.Num.fromInteger
                                                       @ b1
                                                       $dNum1
                                                       __integer 1) of wild4 {
                                               GHC.Types.False
                                               -> g2
                                                    (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                                       @ b
                                                       @ Linear.V2.V2
                                                       @ GHC.Types.Double
                                                       @ Data.Monoid.Any
                                                       Linear.V2.$fMetricV2
                                                       Lib.$s$fMonoidQDiagram1
                                                       Data.Semigroup.$fSemigroupAny
                                                       x2
                                                       x2)
                                                    (GHC.Real.quot
                                                       @ b1
                                                       $dIntegral
                                                       (GHC.Enum.pred @ b1 $dEnum1 y1)
                                                       (GHC.Num.fromInteger
                                                          @ b1
                                                          $dNum1
                                                          __integer 2))
                                                    (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                                       @ b
                                                       @ Linear.V2.V2
                                                       @ GHC.Types.Double
                                                       @ Data.Monoid.Any
                                                       Linear.V2.$fMetricV2
                                                       Lib.$s$fMonoidQDiagram1
                                                       Data.Semigroup.$fSemigroupAny
                                                       x2
                                                       z1)
                                               GHC.Types.True
                                               -> Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                                    @ b
                                                    @ Linear.V2.V2
                                                    @ GHC.Types.Double
                                                    @ Data.Monoid.Any
                                                    Linear.V2.$fMetricV2
                                                    Lib.$s$fMonoidQDiagram1
                                                    Data.Semigroup.$fSemigroupAny
                                                    x2
                                                    z1 }
                                          GHC.Types.True
                                          -> g2
                                               (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                                  @ b
                                                  @ Linear.V2.V2
                                                  @ GHC.Types.Double
                                                  @ Data.Monoid.Any
                                                  Linear.V2.$fMetricV2
                                                  Lib.$s$fMonoidQDiagram1
                                                  Data.Semigroup.$fSemigroupAny
                                                  x2
                                                  x2)
                                               (GHC.Real.quot
                                                  @ b1
                                                  $dIntegral
                                                  y1
                                                  (GHC.Num.fromInteger @ b1 $dNum1 __integer 2))
                                               z1 }
                                    } in
                                    g2
                                      (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                         @ b
                                         @ Linear.V2.V2
                                         @ GHC.Types.Double
                                         @ Data.Monoid.Any
                                         Linear.V2.$fMetricV2
                                         Lib.$s$fMonoidQDiagram1
                                         Data.Semigroup.$fSemigroupAny
                                         x1
                                         x1)
                                      (GHC.Real.quot
                                         @ b1
                                         $dIntegral
                                         (GHC.Enum.pred @ b1 $dEnum y)
                                         (GHC.Num.fromInteger @ b1 $dNum __integer 2))
                                      x1
                                 GHC.Types.True -> x1 }
                            GHC.Types.True
                            -> f4
                                 (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                                    @ b
                                    @ Linear.V2.V2
                                    @ GHC.Types.Double
                                    @ Data.Monoid.Any
                                    Linear.V2.$fMetricV2
                                    Lib.$s$fMonoidQDiagram1
                                    Data.Semigroup.$fSemigroupAny
                                    x1
                                    x1)
                                 (GHC.Real.quot
                                    @ b1
                                    $dIntegral
                                    y
                                    (GHC.Num.fromInteger @ b1 $dNum __integer 2)) }
                      } in
                      f4 eta2 eta1
                   GHC.Types.True
                   -> GHC.Err.error
                        @ (Diagrams.Core.Types.QDiagram
                             b Linear.V2.V2 GHC.Types.Double Data.Monoid.Any)
                        (GHC.Base.build
                           @ GHC.Types.Char
                           (\ @ b2 ->
                            GHC.CString.unpackFoldrCString#
                              @ b2
                              "stimes: positive multiplier expected"#)) }) -}
66c31748550c3d2e1d12174dd73a2552
  $s$fTrailLikeLocated ::
    Diagrams.TrailLike.TrailLike
      (Diagrams.Located.Located
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Diagrams.Located.Located
                       (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                  Linear.V2.$fMetricV2
                    `cast`
                  (Linear.Metric.Metric
                     (Trans
                          (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                                    <Linear.V2.V2>_N <GHC.Types.Double>_N))
                          (Sym (Diagrams.Located.TFCo:R:VLocated[0]
                                    <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N))))_R
                  Lib.$s$fMonoidQDiagram1
                    `cast`
                  (Diagrams.Core.Envelope.OrderedField
                     (Trans
                          (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                    <Linear.V2.V2>_N <GHC.Types.Double>_N))
                          (Sym (Diagrams.Located.TFCo:R:NLocated[0]
                                    <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N))))_R
                  Lib.$s$fTrailLikeLocated1 -}
c3d30d7a17e27310f3a0ad51819df4ca
  $s$fTrailLikeLocated1 ::
    Diagrams.Located.Located
      (Diagrams.Trail.Trail
         (Diagrams.Core.V.V
            (Diagrams.Located.Located
               (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))
         (Diagrams.Core.V.N
            (Diagrams.Located.Located
               (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))))
    -> Diagrams.Located.Located
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(1*U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ t1 :: Diagrams.Located.Located
                           (Diagrams.Trail.Trail
                              (Diagrams.Core.V.V
                                 (Diagrams.Located.Located
                                    (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))
                              (Diagrams.Core.V.N
                                 (Diagrams.Located.Located
                                    (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))) ->
                 Diagrams.Located.Loc
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   (Diagrams.Located.loc
                      @ (Diagrams.Trail.Trail
                           (Diagrams.Core.V.V
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                           (Diagrams.Core.V.N
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))
                      t1
                        `cast`
                      (Diagrams.Located.Located
                         (Diagrams.Trail.Trail
                            (Diagrams.Located.TFCo:R:VLocated[0]
                                 <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)
                            (Diagrams.Located.TFCo:R:NLocated[0]
                                 <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N))_N)_R)
                     `cast`
                   (Linear.Affine.Point
                      (Sub (Diagrams.Trail.TFCo:R:VTrail[0]
                                <Diagrams.Core.V.V
                                   (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)>_N
                                <Diagrams.Core.V.N
                                   (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)>_N))
                      (Diagrams.Trail.TFCo:R:NTrail[0]
                           <Diagrams.Core.V.V
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)>_N
                           <Diagrams.Core.V.N
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)>_N))_R
                   (Diagrams.Located.unLoc
                      @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                      t1
                        `cast`
                      (Diagrams.Located.Located
                         (Diagrams.Trail.Trail
                            (Trans
                                 (Diagrams.Located.TFCo:R:VLocated[0]
                                      <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)
                                 (Diagrams.Trail.TFCo:R:VTrail[0]
                                      <Linear.V2.V2>_N <GHC.Types.Double>_N))
                            (Trans
                                 (Diagrams.Located.TFCo:R:NLocated[0]
                                      <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)
                                 (Diagrams.Trail.TFCo:R:NTrail[0]
                                      <Linear.V2.V2>_N <GHC.Types.Double>_N)))_N)_R)) -}
d2268d38231b674930e39e2dc2405312
  $s$fTrailLikeTrail ::
    Diagrams.TrailLike.TrailLike
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                  Linear.V2.$fMetricV2
                    `cast`
                  (Linear.Metric.Metric
                     (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                               <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                  Lib.$s$fMonoidQDiagram1
                    `cast`
                  (Diagrams.Core.Envelope.OrderedField
                     (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                               <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                  (Diagrams.TrailLike.$fTrailLikeTrail_$ctrailLike
                     @ Linear.V2.V2
                     @ GHC.Types.Double
                     Linear.V2.$fMetricV2
                       `cast`
                     (Linear.Metric.Metric
                        (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                                  <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                     Lib.$s$fMonoidQDiagram1
                       `cast`
                     (Diagrams.Core.Envelope.OrderedField
                        (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                  <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                     Linear.V2.$fMetricV2
                     Lib.$s$fMonoidQDiagram1) -}
e8d936e5aeddf267e5739bf30cfa5d67
  $satParam10 ::
    Diagrams.Core.V.N
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    ~ GHC.Types.Double
  {- Unfolding: (Diagrams.Core.V.$p2InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam5) -}
3e012db2a2c930003e05f6469f2faff5
  $satParam3 ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.V.N
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    -> Diagrams.Parametric.Codomain
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
         (Diagrams.Core.V.N
            (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
  {- Unfolding: (Diagrams.Trail.$fParametricTrail_$catParam
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1
                   GHC.Float.$fRealDouble) -}
dca3fb7e5d2da41c2aaf956b72cf3b51
  $satParam4 ::
    Diagrams.Core.V.V
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    ~ Linear.V2.V2
  {- Unfolding: (Diagrams.Core.V.$p1InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam5) -}
2938fe73be42170b58d3b1ce02b75023
  $satParam5 ::
    Diagrams.Core.V.InSpace
      Linear.V2.V2
      GHC.Types.Double
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
  {- Unfolding: (Diagrams.Core.V.$fInSpacevna
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam7
                   Lib.$satParam6
                   Linear.V2.$fAdditiveV2
                   GHC.Float.$fNumDouble) -}
63953b35bcfb6698122d9a91dd607287
  $satParam6 ::
    Diagrams.Core.V.N
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    ~ GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Diagrams.Core.V.N
                        (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                   @ GHC.Types.Double
                   @~ (Diagrams.Trail.TFCo:R:NTrail[0]
                           <Linear.V2.V2>_N <GHC.Types.Double>_N)) -}
0438c79c6052ebbbcc2cd3294c3cd1e5
  $satParam7 ::
    Diagrams.Core.V.V
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    ~ Linear.V2.V2
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ (* -> *)
                   @ (Diagrams.Core.V.V
                        (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                   @ Linear.V2.V2
                   @~ (Diagrams.Trail.TFCo:R:VTrail[0]
                           <Linear.V2.V2>_N <GHC.Types.Double>_N)) -}
d576f3ed5a040ed6b81e46a3e8d87242
  $satParam8 :: GHC.Num.Num GHC.Types.Double
  {- Unfolding: (Diagrams.Core.V.$p4InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam5) -}
69eb2f42c43e72773ade0095ce79b2fa
  $satParam9 :: Linear.Vector.Additive Linear.V2.V2
  {- Unfolding: (Diagrams.Core.V.$p3InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam5) -}
49a0621d38078357be490a236c21938d
  $sfc2 ::
    Diagrams.Core.Style.Style
      (Diagrams.Core.V.V
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.B
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
      (Diagrams.Core.V.N
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.B
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Core.Types.$fHasStyleQDiagram_$capplyStyle
                   @ Diagrams.Backend.SVG.B
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1
                   Data.Semigroup.$fSemigroupAny) -}
19669c7ef5a1c105deeb0af1f0551b6f
  $sfc4 ::
    Diagrams.Core.V.InSpace
      Linear.V2.V2
      GHC.Types.Double
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
  {- Unfolding: (Diagrams.Core.V.$fInSpacevna
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$sfc6
                   Lib.$sfc5
                   Linear.V2.$fAdditiveV2
                   GHC.Float.$fNumDouble) -}
8702847ee5f224aa918342c90312dcde
  $sfc5 ::
    Diagrams.Core.V.N
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
    ~ GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Diagrams.Core.V.N
                        (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.SVG
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any))
                   @ GHC.Types.Double
                   @~ (Diagrams.Core.Types.TFCo:R:NQDiagram[0]
                           <Diagrams.Backend.SVG.SVG>_N
                           <Linear.V2.V2>_N
                           <GHC.Types.Double>_N
                           <Data.Monoid.Any>_N)) -}
f20c1d263b8eb0fbdb6b1b6f20ab273e
  $sfc6 ::
    Diagrams.Core.V.V
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
    ~ Linear.V2.V2
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ (* -> *)
                   @ (Diagrams.Core.V.V
                        (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.SVG
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any))
                   @ Linear.V2.V2
                   @~ (Diagrams.Core.Types.TFCo:R:VQDiagram[0]
                           <Diagrams.Backend.SVG.SVG>_N
                           <Linear.V2.V2>_N
                           <GHC.Types.Double>_N
                           <Data.Monoid.Any>_N)) -}
e61cdcad69ca5a7178a8a5373948925b
  $sunitX :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (let {
                   a40 :: GHC.Types.Double = GHC.Types.D# 0.0
                 } in
                 (Data.Functor.<$>
                    @ GHC.Types.Double
                    @ (Linear.V2.V2 GHC.Types.Double)
                    @ Data.Functor.Identity.Identity
                    Data.Functor.Identity.$fFunctorIdentity
                    (\ ds1 :: GHC.Types.Double ->
                     case ds1 of dt { GHC.Types.D# ipv ->
                     Linear.V2.V2 @ GHC.Types.Double dt a40 })
                    (GHC.Types.D# 1.0)
                      `cast`
                    (Sym (Data.Functor.Identity.NTCo:Identity[0]
                              <GHC.Types.Double>_R)))
                   `cast`
                 (Data.Functor.Identity.NTCo:Identity[0]
                      <Linear.V2.V2 GHC.Types.Double>_R)) -}
2b974ffd0dbd1f28ac2846a910e3afcc
  $wa1 ::
    [(Data.Colour.Internal.Colour GHC.Types.Double,
      Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ w :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                          Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 Lib.chord20
                   (Lib.chord19
                      GHC.Types.False
                      (case Lib.$wgo w of ww { (#,#) ww1 ww2 ->
                       let {
                         par :: [GHC.Types.Double]
                         = case Lib.chord18
                                  (case ww2 of wild {
                                     [] -> case GHC.List.badHead ret_ty GHC.Types.Int of {}
                                     : x1 ds1
                                     -> case GHC.List.$wlenAcc
                                               @ (Diagrams.Segment.Segment
                                                    Diagrams.Segment.Closed
                                                    Linear.V2.V2
                                                    GHC.Types.Double)
                                               (Diagrams.Trail.trailSegments
                                                  @ Linear.V2.V2
                                                  @ GHC.Types.Double
                                                  Linear.V2.$fMetricV2
                                                  Lib.$s$fMonoidQDiagram1
                                                  x1)
                                               0 of ww3 { DEFAULT ->
                                        GHC.Types.I# (GHC.Prim.*# 4 ww3) } })
                                  Lib.chord17 of ww3 { Data.Vector.Storable.Vector ww4 ww5 ww6 ->
                           Internal.Vector.$wtoList
                             @ GHC.Types.Double
                             Foreign.Storable.$fStorableDouble
                             ww4
                             ww5
                             ww6 }
                       } in
                       letrec {
                         go1 :: [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
                                -> [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
                           {- Arity: 1, Strictness: <S,1*U> -}
                         = \ ds :: [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double] ->
                           case ds of wild {
                             []
                             -> GHC.Types.[]
                                  @ [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
                             : y ys
                             -> GHC.Types.:
                                  @ [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
                                  (letrec {
                                     go2 :: [GHC.Types.Double]
                                            -> [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
                                       {- Arity: 1, Strictness: <S,1*U> -}
                                     = \ ds1 :: [GHC.Types.Double] ->
                                       case ds1 of wild1 {
                                         []
                                         -> GHC.Types.[]
                                              @ (Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
                                         : y1 ys1
                                         -> GHC.Types.:
                                              @ (Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
                                              (case Lib.$satParam10 of cobox2 { GHC.Types.Eq# cobox3 ->
                                               (Linear.Vector.^+^
                                                  @ Linear.V2.V2
                                                  Lib.$satParam9
                                                  @ GHC.Types.Double
                                                  Lib.$satParam8
                                                  Lib.chord16
                                                  (Lib.$satParam3
                                                     y
                                                     y1
                                                       `cast`
                                                     (Sub (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                                                    <Linear.V2.V2>_N
                                                                    <GHC.Types.Double>_N))))
                                                    `cast`
                                                  (Trans
                                                       (Sub (Sym (Linear.Affine.TFCo:R:DiffPoint[0]
                                                                      (Sym (Diagrams.Trail.TFCo:R:CodomainTrail[0]
                                                                                <Linear.V2.V2>_N
                                                                                <GHC.Types.Double>_N)))))
                                                       (Sub (Linear.Affine.TFCo:R:DiffPoint[0]
                                                                 <Linear.V2.V2>_N)) cobox3))
                                                 `cast`
                                               (Sym (Linear.Affine.NTCo:Point[0]
                                                         <Linear.V2.V2>_R) <GHC.Types.Double>_N) })
                                              (go2 ys1) }
                                   } in
                                   go2 par)
                                  (go1 ys) }
                       } in
                       GHC.Base.map
                         @ [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
                         @ (Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
                         Lib.chord12
                         (Data.OldList.transpose
                            @ (Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
                            (go1 ww2)) }))) -}
daaa270cb9ae7555d91e7bfbb7dbba8c
  $wa2 ::
    [(Data.Colour.Internal.Colour GHC.Types.Double,
      Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ w :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                          Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 case Lib.polyRhythm16 of cobox { GHC.Types.Eq# cobox1 ->
                 case Lib.polyRhythm15 of cobox2 { GHC.Types.Eq# cobox3 ->
                 (Lib.polyRhythm14
                    (let {
                       w3 :: GHC.Types.Double
                       = case GHC.List.$wlenAcc
                                @ (Data.Colour.Internal.Colour GHC.Types.Double,
                                   Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                                w
                                0 of ww2 { DEFAULT ->
                         GHC.Types.D# (GHC.Prim.int2Double# ww2) }
                     } in
                     let {
                       a40 :: Linear.V2.V2 GHC.Types.Double
                              -> Data.Functor.Identity.Identity (Linear.V2.V2 GHC.Types.Double)
                         {- Arity: 1, Strictness: <S(SS),1*U(U,U(U))>m,
                            Unfolding: InlineRule (1, True, False)
                                       (\ ds :: Linear.V2.V2 GHC.Types.Double ->
                                        case ds of wild { Linear.V2.V2 a40 b ->
                                        case b of wild1 { GHC.Types.D# x1 ->
                                        case w3 of wild2 { GHC.Types.D# y ->
                                        (Linear.V2.V2
                                           @ GHC.Types.Double
                                           a40
                                           (GHC.Types.D# (GHC.Prim.*## x1 y)))
                                          `cast`
                                        (Sym (Data.Functor.Identity.NTCo:Identity[0]
                                                  <Linear.V2.V2 GHC.Types.Double>_R)) } } }) -}
                       = \ ds :: Linear.V2.V2 GHC.Types.Double ->
                         case ds of wild { Linear.V2.V2 a41 b ->
                         case b of wild1 { GHC.Types.D# x1 ->
                         case w3 of wild2 { GHC.Types.D# y ->
                         (Linear.V2.V2
                            @ GHC.Types.Double
                            a41
                            (GHC.Types.D# (GHC.Prim.*## x1 y)))
                           `cast`
                         (Sym (Data.Functor.Identity.NTCo:Identity[0]
                                   <Linear.V2.V2 GHC.Types.Double>_R)) } } }
                     } in
                     let {
                       a41 :: Linear.V2.V2 GHC.Types.Double
                              -> Data.Functor.Identity.Identity (Linear.V2.V2 GHC.Types.Double)
                         {- Arity: 1, Strictness: <S(SS),1*U(U,U(U))>m,
                            Unfolding: InlineRule (1, True, False)
                                       (\ ds :: Linear.V2.V2 GHC.Types.Double ->
                                        case ds of wild { Linear.V2.V2 a41 b ->
                                        case b of wild1 { GHC.Types.D# x1 ->
                                        case w3 of wild2 { GHC.Types.D# y ->
                                        case GHC.Prim./## x1 y of wild3 { DEFAULT ->
                                        (Linear.V2.V2 @ GHC.Types.Double a41 (GHC.Types.D# wild3))
                                          `cast`
                                        (Sym (Data.Functor.Identity.NTCo:Identity[0]
                                                  <Linear.V2.V2 GHC.Types.Double>_R)) } } } }) -}
                       = \ ds :: Linear.V2.V2 GHC.Types.Double ->
                         case ds of wild { Linear.V2.V2 a42 b ->
                         case b of wild1 { GHC.Types.D# x1 ->
                         case w3 of wild2 { GHC.Types.D# y ->
                         case GHC.Prim./## x1 y of wild3 { DEFAULT ->
                         (Linear.V2.V2 @ GHC.Types.Double a42 (GHC.Types.D# wild3))
                           `cast`
                         (Sym (Data.Functor.Identity.NTCo:Identity[0]
                                   <Linear.V2.V2 GHC.Types.Double>_R)) } } } }
                     } in
                     let {
                       t :: Linear.V2.V2 GHC.Types.Double
                            Diagrams.Core.Transform.:-: Linear.V2.V2 GHC.Types.Double
                         {- Strictness: m -}
                       = Diagrams.Core.Transform.:-:
                           @ (Linear.V2.V2 GHC.Types.Double)
                           @ (Linear.V2.V2 GHC.Types.Double)
                           a40
                             `cast`
                           (<Linear.V2.V2 GHC.Types.Double>_R
                            ->_R Data.Functor.Identity.NTCo:Identity[0]
                                     <Linear.V2.V2 GHC.Types.Double>_R)
                           a41
                             `cast`
                           (<Linear.V2.V2 GHC.Types.Double>_R
                            ->_R Data.Functor.Identity.NTCo:Identity[0]
                                     <Linear.V2.V2 GHC.Types.Double>_R)
                     } in
                     (Diagrams.Core.Transform.Transformation
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        t
                        t
                        Lib.polyRhythm12)
                       `cast`
                     (Diagrams.Core.Transform.Transformation
                        (Trans
                             (Sub (Sym cobox1))
                             (Diagrams.Core.V.V
                                (Diagrams.Core.Types.QDiagram
                                   <Diagrams.Backend.SVG.B>_N
                                   (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                   (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                   <Data.Monoid.Any>_N)_N)_R)
                        (Trans
                             (Sym cobox3)
                             (Diagrams.Core.V.N
                                (Diagrams.Core.Types.QDiagram
                                   <Diagrams.Backend.SVG.B>_N
                                   (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                   (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                   <Data.Monoid.Any>_N)_N)_N))_R)
                    (case Lib.$wgo1 w of ww { (#,#) ww1 ww2 ->
                     Diagrams.Core.Types.$fMonoidQDiagram_$cmconcat
                       @ Diagrams.Backend.SVG.SVG
                       @ Linear.V2.V2
                       @ GHC.Types.Double
                       @ Data.Monoid.Any
                       Linear.V2.$fMetricV2
                       Lib.$s$fMonoidQDiagram1
                       Data.Semigroup.$fSemigroupAny
                       (GHC.Base.map
                          @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                          @ (Diagrams.Core.Types.QDiagram
                               Diagrams.Backend.SVG.B
                               (Diagrams.Core.V.V Diagrams.Backend.SVG.B)
                               (Diagrams.Core.V.N Diagrams.Backend.SVG.B)
                               Data.Monoid.Any)
                          Lib.polyRhythm2
                            `cast`
                          (<Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_R
                           ->_R (Diagrams.Core.Types.QDiagram
                                   <Diagrams.Backend.SVG.B>_N
                                   (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                                   (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                                   <Data.Monoid.Any>_R)_R)
                          ww2)
                         `cast`
                       ([(Diagrams.Core.Types.QDiagram
                            <Diagrams.Backend.SVG.B>_N
                            (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                            (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                            <Data.Monoid.Any>_R)_R])_R }))
                   `cast`
                 (Diagrams.Core.Types.QDiagram
                    <Diagrams.Backend.SVG.B>_N
                    (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                    (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                    <Data.Monoid.Any>_R)_R } }) -}
8a9601af7764b57f3779c8b906ae0f00
  $wgo ::
    [(Data.Colour.Internal.Colour GHC.Types.Double,
      Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> (# [Data.Colour.Internal.Colour GHC.Types.Double],
          [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
5e4eda6b96ca3c5717e4ce885294759a
  $wgo1 ::
    [(Data.Colour.Internal.Colour GHC.Types.Double,
      Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> (# [Data.Colour.Internal.Colour GHC.Types.Double],
          [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
0a83e50d0e50568b3b7632effe13b754
  $wgo2 ::
    [(Data.Colour.Internal.Colour GHC.Types.Double,
      Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> (# [Data.Colour.Internal.Colour GHC.Types.Double],
          [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
169a48f84ae5972bd174f5854a23db7f
  $wosc ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 4, Strictness: <L,U><L,1*U(U)><L,1*U(U)><L,U>,
     Inline: [0],
     Unfolding: (\ w :: Diagrams.Trail.Trail
                          Linear.V2.V2 GHC.Types.Double
                   ww :: GHC.Types.Double
                   ww1 :: GHC.Types.Double
                   ww2 :: GHC.Prim.Double# ->
                 let {
                   n :: GHC.Prim.Int# = GHC.Prim.double2Int# ww2
                 } in
                 let {
                   $j1 :: GHC.Prim.Int#
                          -> GHC.Types.Int
                          -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
                     {- Arity: 2, Strictness: <L,U><L,1*U(1*U)> -}
                   = \ y :: GHC.Prim.Int#[OneShot] wild1 :: GHC.Types.Int[OneShot] ->
                     let {
                       a40 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
                       = Diagrams.Trail.$w$csection1
                           @ Linear.V2.V2
                           @ GHC.Types.Double
                           Linear.V2.$fMetricV2
                           Lib.$s$fMonoidQDiagram1
                           GHC.Float.$fRealDouble
                           w
                           Lib.chord14
                             `cast`
                           (Sub (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                          <Linear.V2.V2>_N <GHC.Types.Double>_N)))
                           (case ww of wild { GHC.Types.D# x1 ->
                            case ww1 of wild2 { GHC.Types.D# x2 ->
                            (GHC.Types.D#
                               (GHC.Prim.+##
                                  x1
                                  (GHC.Prim.*##
                                     (GHC.Prim.-## ww2 (GHC.Prim.int2Double# y))
                                     (GHC.Prim.-## x2 x1))))
                              `cast`
                            (Sub (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                           <Linear.V2.V2>_N <GHC.Types.Double>_N))) } })
                     } in
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<# 0 y) of wild {
                       GHC.Types.False
                       -> Lib.chord_go
                            (GHC.Types.[]
                               @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                            a40
                       GHC.Types.True
                       -> let {
                            n1 :: [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
                            = GHC.Types.:
                                @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                                a40
                                (GHC.Types.[]
                                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                          } in
                          let {
                            lvl51 :: [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
                            = GHC.Types.:
                                @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                                w
                                n1
                          } in
                          letrec {
                            $wxs1 :: GHC.Prim.Int#
                                     -> [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
                              {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
                            = \ ww3 :: GHC.Prim.Int# ->
                              case ww3 of ds1 {
                                DEFAULT
                                -> GHC.Types.:
                                     @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                                     w
                                     ($wxs1 (GHC.Prim.-# ds1 1))
                                1 -> lvl51 }
                          } in
                          case $wxs1 y of wild2 {
                            []
                            -> GHC.List.foldl2
                                 @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                            : x1 xs -> Lib.chord_go xs x1 } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww2 (GHC.Prim.int2Double# n)) of wild1 {
                   GHC.Types.False -> $j1 n (GHC.Types.I# n)
                   GHC.Types.True
                   -> let {
                        y :: GHC.Prim.Int# = GHC.Prim.-# n 1
                      } in
                      $j1 y (GHC.Types.I# y) }) -}
c9f8f3898e44a3425804532c9bf916b7
  chord ::
    GHC.Types.Int
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Vector.Storable.Vector GHC.Types.Double
    -> GHC.Types.Int
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 4,
     Unfolding: (Lib.polyOsc
                   Lib.tone
                   Lib.chord11
                     `cast`
                   (<GHC.Types.Double>_R
                    ->_R <[(Data.Colour.Internal.Colour GHC.Types.Double,
                            Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]>_R
                    ->_R (Diagrams.Core.Types.QDiagram
                            <Diagrams.Backend.SVG.B>_N
                            (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                            (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                            <Data.Monoid.Any>_R)_R)
                   Lib.lblPolyOsc) -}
a8be40827baa1f75e2ac862c1d2633bd
  chord1 ::
    [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Unfolding: (Lib.chord3 Lib.chord2) -}
b1eb53da6188c88d9aec9d65e4bccecb
  chord10 ::
    Diagrams.Core.Envelope.Enveloped
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
  {- Unfolding: (Diagrams.Core.Types.$fEnvelopedQDiagram
                   @ Diagrams.Backend.SVG.SVG
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                     `cast`
                   (Linear.Metric.Metric
                      (Sym (Diagrams.Core.Types.TFCo:R:VQDiagram[0]
                                <Diagrams.Backend.SVG.SVG>_N
                                <Linear.V2.V2>_N
                                <GHC.Types.Double>_N
                                <Data.Monoid.Any>_N)))_R
                   Lib.$s$fMonoidQDiagram1
                     `cast`
                   (Diagrams.Core.Envelope.OrderedField
                      (Sym (Diagrams.Core.Types.TFCo:R:NQDiagram[0]
                                <Diagrams.Backend.SVG.SVG>_N
                                <Linear.V2.V2>_N
                                <GHC.Types.Double>_N
                                <Data.Monoid.Any>_N)))_R
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1
                   Lib.chord9) -}
50f23ec3b0b741d9e3262028838f6214
  chord11 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 2, Strictness: <L,A><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: GHC.Types.Double
                   w1 :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 Lib.$wa1 w1) -}
cc105c6dc896654f513f3f51706c4210
  chord12 ::
    [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
    -> Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (GHC.List.foldl
                   @ (Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
                   @ (Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
                   Lib.chord15
                   Lib.chord13
                     `cast`
                   (Sym (Linear.Affine.NTCo:Point[0]
                             <Linear.V2.V2>_R) <GHC.Types.Double>_N)) -}
a42df9320e4f3a9f36c8402ab9a56ca1
  chord13 :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord14
                   Lib.chord14) -}
bc162ee9da89123fa03b37a0c3099b12
  chord14 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0) -}
fc1853817434ace87e85c12391e875fc
  chord15 ::
    Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
    -> Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
    -> Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*H,U(U))><S(SS),1*U(U,U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ pt :: Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
                   pt' :: Linear.Affine.Point Linear.V2.V2 GHC.Types.Double ->
                 case pt'
                        `cast`
                      (Linear.Affine.NTCo:Point[0]
                           <Linear.V2.V2>_R <GHC.Types.Double>_N) of wild { Linear.V2.V2 a40 b ->
                 case pt
                        `cast`
                      (Linear.Affine.NTCo:Point[0]
                           <Linear.V2.V2>_R <GHC.Types.Double>_N) of wild1 { Linear.V2.V2 a41 b1 ->
                 case b1 of wild2 { GHC.Types.D# x1 ->
                 case b of wild3 { GHC.Types.D# y ->
                 (Linear.V2.V2
                    @ GHC.Types.Double
                    a40
                    (GHC.Types.D# (GHC.Prim.+## x1 y)))
                   `cast`
                 (Sym (Linear.Affine.NTCo:Point[0]
                           <Linear.V2.V2>_R) <GHC.Types.Double>_N) } } } }) -}
6a83ec0bf2f3a64ba6ba1a0a110d5f77
  chord16 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (case Lib.$satParam4 of cobox4 { GHC.Types.Eq# cobox5 ->
                 Lib.chord13 }) -}
41e0e11a018967c34dd6b9263776aa3e
  chord17 :: (GHC.Types.Double, GHC.Types.Double)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Lib.chord14, Lib.chord_x)) -}
c5d34a850b27680f2a38baea2875a184
  chord18 ::
    GHC.Types.Int
    -> (GHC.Types.Double, GHC.Types.Double)
    -> Data.Vector.Storable.Vector GHC.Types.Double
  {- Unfolding: (Internal.Container.linspace
                   @ GHC.Types.Double
                   GHC.Float.$fFractionalDouble
                   Internal.Numeric.$fContainerVectorDouble) -}
d504e311522fb7e579fab6b148e14f8f
  chord19 ::
    GHC.Types.Bool
    -> [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.CubicSpline.cubicSpline
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   Lib.$satParam7
                   Lib.$satParam6
                   Lib.$s$fTrailLikeTrail
                   Lib.$s$fFractionalV2) -}
e18d4a5644faec49305be2e0abaabf16
  chord2 :: Diagrams.Combinators.CatOpts GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Combinators.CatOpts
                   @ GHC.Types.Double
                   Diagrams.Combinators.Distrib
                   Lib.chord_x
                   (Data.Proxy.Proxy @ * @ GHC.Types.Double)) -}
e80d1f8e9cb536f5a6da5094f85c2ae6
  chord20 ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.TwoD.Path.stroke
                   @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                   @ Diagrams.Backend.SVG.B
                   @ GHC.Types.Double
                   Lib.$satParam5
                   (Diagrams.Path.pathFromTrail @ Linear.V2.V2 @ GHC.Types.Double)
                     `cast`
                   (Trans
                        ((Linear.Metric.Metric
                            (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                                      <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                         ->_R (Diagrams.Core.Envelope.OrderedField
                                 (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                           <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R
                         ->_R <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_R
                         ->_R (Diagrams.Path.Path
                                 (Sym (Diagrams.Trail.TFCo:R:VTrail[0]
                                           <Linear.V2.V2>_N <GHC.Types.Double>_N))
                                 (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                           <Linear.V2.V2>_N <GHC.Types.Double>_N)))_R)
                        (Sym (Diagrams.Path.NTCo:ToPath[0]
                                  <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)))
                   Lib.$s$fRenderablePathSVG2
                   Lib.$s$fRenderablePathSVG) -}
d2c683a2f4bd176c2854c89371404f08
  chord21 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Lib.oscCycle Lib.chord22) -}
231ec79785203280392679880beae9d6
  chord22 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Trail.Trail
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Diagrams.Trail.Line
                   Lib.chord23) -}
67ca5f599cbcca5d2dd298fa178a8fa1
  chord23 ::
    Diagrams.Trail.Trail'
      Diagrams.Trail.Line Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Lib.chord_g Lib.chord24) -}
826f1c6eb58fbcde684e675f985d8324
  chord24 ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Diagrams.Segment.Segment
                        Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double)
                   Lib.chord25
                   (GHC.Types.[]
                      @ (Diagrams.Segment.Segment
                           Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double))) -}
c8a736165a350cfae3f72d879a022c28
  chord25 ::
    Diagrams.Segment.Segment
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Segment.Cubic
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord31
                   Lib.chord29
                   Lib.chord26) -}
6e05bc16d2e4693d9834faea5b7b7fc7
  chord26 ::
    Diagrams.Segment.Offset
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Segment.OffsetClosed
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @~ <Diagrams.Segment.Closed>_N
                   Lib.chord27) -}
ce53f672377e817eca4aacde1e9c8770
  chord27 :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord_x
                   Lib.chord28) -}
e527032cb890194dd8da88103d060f18
  chord28 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# -1.0) -}
dea5b9d297008cfd6d93a465cd0608fb
  chord29 :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord30
                   Lib.chord28) -}
5df711db062021764921d28e7f745412
  chord3 ::
    Diagrams.Combinators.CatOpts GHC.Types.Double
    -> [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Unfolding: (Diagrams.TwoD.Combinators.vcat'
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                   Lib.$sfc4
                     `cast`
                   (Diagrams.Core.V.InSpace
                      <Linear.V2.V2>_N
                      <GHC.Types.Double>_N
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R
                   GHC.Float.$fFloatingDouble
                   Lib.chord6
                     `cast`
                   (Sym (Diagrams.Core.Juxtapose.NTCo:Juxtaposable[0]
                             (Diagrams.Core.Types.QDiagram
                                <Diagrams.Backend.SVG.B>_N
                                (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                <Data.Monoid.Any>_N)_N))
                   Lib.chord5
                     `cast`
                   (Sym (Diagrams.Core.HasOrigin.NTCo:HasOrigin[0]
                             (Diagrams.Core.Types.QDiagram
                                <Diagrams.Backend.SVG.B>_N
                                (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                <Data.Monoid.Any>_N)_N))
                   Lib.chord4
                     `cast`
                   (Data.Monoid.WithSemigroup.Monoid'
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R) -}
2062f0aa85c50b3a7f8adbc351c0f552
  chord30 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.5) -}
cea49419e8363cd42aec9cac646a2ad8
  chord31 :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord30
                   Lib.chord14) -}
db6d6e55f485b8243c043491a948c0c3
  chord32 ::
    Diagrams.Core.Transform.Transformation
      (Diagrams.Core.V.V
         (Diagrams.Trail.SegTree Linear.V2.V2 GHC.Types.Double))
      (Diagrams.Core.V.N
         (Diagrams.Trail.SegTree Linear.V2.V2 GHC.Types.Double))
    -> Diagrams.Trail.SegTree Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Trail.SegTree Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Trail.$fTransformableSegTree_$ctransform
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.chord34
                   Lib.chord33
                   Linear.V2.$fMetricV2) -}
f96e8d13535375e0a76cb42e81f7947c
  chord33 :: GHC.Classes.Ord GHC.Types.Double
  {- Unfolding: (Diagrams.Core.Envelope.$p2OrderedField
                   @ GHC.Types.Double
                   Lib.$s$fMonoidQDiagram1) -}
9e2f37be64a4d2219b14255bd46d6e1e
  chord34 :: GHC.Float.Floating GHC.Types.Double
  {- Unfolding: (Diagrams.Core.Envelope.$p1OrderedField
                   @ GHC.Types.Double
                   Lib.$s$fMonoidQDiagram1) -}
ebd097f4fe40390a68286549cd887f77
  chord4 ::
    Data.Monoid.WithSemigroup.Monoid'
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
  {- Unfolding: (Data.Monoid.WithSemigroup.$fMonoid'm
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   (Lib.$s$fSemigroupQDiagram @ Diagrams.Backend.SVG.SVG)
                   (Lib.$s$fMonoidQDiagram @ Diagrams.Backend.SVG.SVG)) -}
70474c9c54b644ba8fa62d862cf4e8ea
  chord5 ::
    Linear.Affine.Point
      (Diagrams.Core.V.V
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
      (Diagrams.Core.V.N
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Core.Types.$fHasOriginQDiagram_$cmoveOriginTo
                   @ Diagrams.Backend.SVG.SVG
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1
                   Data.Semigroup.$fSemigroupAny) -}
55c58c56ae2b2ff7ec7fc616b28717e1
  chord6 ::
    Diagrams.Core.V.Vn
      (Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any)
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 3,
     Unfolding: (Diagrams.Core.Juxtapose.juxtaposeDefault
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.SVG
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.chord10
                   Lib.chord7
                     `cast`
                   (Sym (Diagrams.Core.HasOrigin.NTCo:HasOrigin[0]
                             <Diagrams.Core.Types.QDiagram
                                Diagrams.Backend.SVG.SVG
                                Linear.V2.V2
                                GHC.Types.Double
                                Data.Monoid.Any>_N))) -}
28a2c04c19604a9ad8bbcdc3a9f211e8
  chord7 ::
    Linear.Affine.Point
      (Diagrams.Core.V.V
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
      (Diagrams.Core.V.N
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Core.Types.$fHasOriginQDiagram_$cmoveOriginTo
                   @ Diagrams.Backend.SVG.SVG
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1
                   Lib.chord8) -}
af010bf0ab94f18d9b4173d6a94dbce0
  chord8 :: Data.Semigroup.Semigroup Data.Monoid.Any
  {- Unfolding: (Data.Monoid.WithSemigroup.$p1Monoid'
                   @ Data.Monoid.Any
                   Lib.chord9) -}
a7def821272fd6a4093475e0e918ad92
  chord9 :: Data.Monoid.WithSemigroup.Monoid' Data.Monoid.Any
  {- Unfolding: (Data.Monoid.WithSemigroup.$fMonoid'm
                   @ Data.Monoid.Any
                   Data.Semigroup.$fSemigroupAny
                   Data.Monoid.$fMonoidAny) -}
0da8939667b539ecd30374fa284a49cc
  chord_g ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
    -> Diagrams.Trail.Trail'
         Diagrams.Trail.Line Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Trail.lineFromSegments
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1) -}
0bf32c32e13bfdfa368369a817153341
  chord_go ::
    [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
74813664ea065fd28faf8814a01ec37e
  chord_w2 ::
    Diagrams.Core.Transform.Transformation
      (Diagrams.Core.V.V
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
      (Diagrams.Core.V.N
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
  {- Unfolding: (case Lib.$satParam4 of cobox { GHC.Types.Eq# cobox1 ->
                 case Lib.$satParam10 of cobox2 { GHC.Types.Eq# cobox3 ->
                 case Diagrams.TwoD.Transform.$wreflectionY
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        Lib.$satParam9
                        Linear.V2.$fR2V2
                        Lib.$satParam8 of ww { (#,,#) ww1 ww2 ww3 ->
                 (Diagrams.Core.Transform.Transformation
                    @ Linear.V2.V2
                    @ GHC.Types.Double
                    ww1
                    ww2
                    ww3)
                   `cast`
                 (Diagrams.Core.Transform.Transformation
                    (Sub (Sym cobox1)) (Sym cobox3))_R } } }) -}
961d8be7a081ff24933a28557bb42964
  chord_x :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.0) -}
3d465eaf2d35cadc86bf75a79ebb5dc4
  eqt :: Data.Vector.Storable.Vector GHC.Types.Double
  {- Unfolding: (GHC.ST.runSTRep
                   @ (Data.Vector.Storable.Vector GHC.Types.Double)
                   Lib.eqt1) -}
5c2771738f7fa6fb85a875488a727289
  eqt1 ::
    GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          Data.Vector.Storable.Vector GHC.Types.Double #)
  {- Arity: 1,
     Unfolding: (\ @ s s1 :: GHC.Prim.State# s[OneShot] ->
                 case GHC.Prim.newPinnedByteArray#
                        @ GHC.Prim.RealWorld
                        0
                        s1
                          `cast`
                        (GHC.Prim.State#
                           (Trans
                                (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0] <s>_N))
                                (Trans
                                     (Control.Monad.Primitive.PrimState
                                        (UnivCo mkUnsafeCo nominal (GHC.ST.ST s) GHC.Types.IO))_N
                                     (Control.Monad.Primitive.TFCo:R:PrimStateIO[0]))))_R of ds { (#,#) ipv ipv1 ->
                 case Lib.eqt6
                        @ s
                        GHC.Types.SPEC
                        ((Data.Vector.Storable.Mutable.MVector
                            @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                            @ GHC.Types.Double
                            0
                            (GHC.Prim.byteArrayContents#
                               ipv1
                                 `cast`
                               (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                      GHC.Prim.RealWorld) GHC.Prim.ByteArray#))
                            (GHC.ForeignPtr.PlainPtr ipv1))
                           `cast`
                         (Sub (Sym (Data.Vector.Storable.TFCo:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                      (GHC.ST.ST
                                                                                         s)>_N <GHC.Types.Double>_N),
                         Lib.eqt5)
                        Lib.eqt2
                        ipv
                          `cast`
                        (GHC.Prim.State#
                           (Trans
                                (Sym (Control.Monad.Primitive.TFCo:R:PrimStateIO[0]))
                                (Trans
                                     (Control.Monad.Primitive.PrimState
                                        (UnivCo mkUnsafeCo nominal GHC.Types.IO (GHC.ST.ST s)))_N
                                     (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                          <s>_N))))_R of ds2 { (#,#) ipv6 ipv7 ->
                 case ipv7 of wild5 { (,) v' n ->
                 case v'
                        `cast`
                      (Sub (Data.Vector.Storable.TFCo:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                             (GHC.ST.ST
                                                                                s)>_N <GHC.Types.Double>_N) of wild { Data.Vector.Storable.Mutable.MVector dt dt1 dt2 ->
                 case n of dt3 { GHC.Types.I# dt4 ->
                 (# ipv6,
                    Data.Vector.Storable.Vector
                      @ GHC.Types.Double
                      dt4
                      dt1
                      dt2 #) } } } } }) -}
c6a1e32a84c2c4c23de1f951779ceb0a
  eqt2 :: [GHC.Types.Double]
  {- Unfolding: (Lib.eqt_go Lib.eqt3) -}
44e93b436114a59e368caad41b3c26dc
  eqt3 :: [GHC.Types.Double]
  {- Unfolding: (GHC.Real.numericEnumFromTo
                   @ GHC.Types.Double
                   GHC.Classes.$fOrdDouble
                   GHC.Float.$fFractionalDouble
                   Lib.chord14
                   Lib.eqt4) -}
c438795784a7f9363099bf00f807accb
  eqt4 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 11.0) -}
eca643bdaabc4246fa4690645cc23069
  eqt5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0) -}
2c603485225be7993f0f7153b8e899e3
  eqt6 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Storable.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
          GHC.Types.Double,
        GHC.Types.Int)
    -> [GHC.Types.Double]
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Storable.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
             GHC.Types.Double,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><L,U> -}
8f16660035c49fe4e94c12c9084dcadb
  eqt_go :: [GHC.Types.Double] -> [GHC.Types.Double]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
ab122728f0eddd402760073ed03f4076
  farey :: Data.Vector.Storable.Vector GHC.Types.Double
  {- Unfolding: (GHC.ST.runSTRep
                   @ (Data.Vector.Storable.Vector GHC.Types.Double)
                   Lib.farey1) -}
b7520f2830dc39a22d5c6b1a77a6a1a9
  farey1 ::
    GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          Data.Vector.Storable.Vector GHC.Types.Double #)
  {- Arity: 1,
     Unfolding: (\ @ s s1 :: GHC.Prim.State# s[OneShot] ->
                 case GHC.Prim.newPinnedByteArray#
                        @ GHC.Prim.RealWorld
                        0
                        s1
                          `cast`
                        (GHC.Prim.State#
                           (Trans
                                (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0] <s>_N))
                                (Trans
                                     (Control.Monad.Primitive.PrimState
                                        (UnivCo mkUnsafeCo nominal (GHC.ST.ST s) GHC.Types.IO))_N
                                     (Control.Monad.Primitive.TFCo:R:PrimStateIO[0]))))_R of ds { (#,#) ipv ipv1 ->
                 case Lib.farey25
                        @ s
                        GHC.Types.SPEC
                        ((Data.Vector.Storable.Mutable.MVector
                            @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                            @ GHC.Types.Double
                            0
                            (GHC.Prim.byteArrayContents#
                               ipv1
                                 `cast`
                               (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                      GHC.Prim.RealWorld) GHC.Prim.ByteArray#))
                            (GHC.ForeignPtr.PlainPtr ipv1))
                           `cast`
                         (Sub (Sym (Data.Vector.Storable.TFCo:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                      (GHC.ST.ST
                                                                                         s)>_N <GHC.Types.Double>_N),
                         Lib.eqt5)
                        Lib.farey2
                        ipv
                          `cast`
                        (GHC.Prim.State#
                           (Trans
                                (Sym (Control.Monad.Primitive.TFCo:R:PrimStateIO[0]))
                                (Trans
                                     (Control.Monad.Primitive.PrimState
                                        (UnivCo mkUnsafeCo nominal GHC.Types.IO (GHC.ST.ST s)))_N
                                     (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                          <s>_N))))_R of ds2 { (#,#) ipv6 ipv7 ->
                 case ipv7 of wild5 { (,) v' n ->
                 case v'
                        `cast`
                      (Sub (Data.Vector.Storable.TFCo:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                             (GHC.ST.ST
                                                                                s)>_N <GHC.Types.Double>_N) of wild { Data.Vector.Storable.Mutable.MVector dt dt1 dt2 ->
                 case n of dt3 { GHC.Types.I# dt4 ->
                 (# ipv6,
                    Data.Vector.Storable.Vector
                      @ GHC.Types.Double
                      dt4
                      dt1
                      dt2 #) } } } } }) -}
e5cbc7059b5fc25ab8d66e0815185bd5
  farey10 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey17
                   Lib.farey11) -}
20be73ba4d582249951f1e62964c2aa6
  farey11 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey16
                   Lib.farey12) -}
be65f35917962a3a1467248250723c50
  farey12 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey15
                   Lib.farey13) -}
cfc0d55cfd77ebfc1f4e1a8ea863d5da
  farey13 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey14
                   (GHC.Types.[] @ GHC.Types.Double)) -}
7bf85fd0404e086beda17144ab6d211a
  farey14 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.875) -}
33a493ec205e0d60dc4ae3521e6666a7
  farey15 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.7777777777777777) -}
e8ef4d70dd0e3844d6716d33851574b5
  farey16 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.6666666666666667) -}
af9b2cec73c0e7516635ea1c694d47eb
  farey17 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.6) -}
e681aa02c57a83dfb9e590f0b5a6af65
  farey18 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.5) -}
3595cecd7070ed59e4a3048bf98110d0
  farey19 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.4166666666666667) -}
ba32d40a8991b5f809a32e14856a499f
  farey2 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.chord_x
                   Lib.farey3) -}
c6e3aedbfd37ec8a60194778da8637ec
  farey20 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.3333333333333333) -}
bdf5e89c4cbe03dfa0760ba0f3bf7b96
  farey21 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.25) -}
793517605b314d3cf26ff266c8598555
  farey22 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.2) -}
55b3aeecbf960e93fc5e7db21940015e
  farey23 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.125) -}
d031569ab902f636e8dfcf601d8e6b42
  farey24 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.0666666666666667) -}
2988a8c7c0a6dac18ea58796fc05d171
  farey25 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Storable.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
          GHC.Types.Double,
        GHC.Types.Int)
    -> [GHC.Types.Double]
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Storable.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
             GHC.Types.Double,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><L,U> -}
ecf6da329f4d09f9d3ced67aa49f1c0e
  farey3 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey24
                   Lib.farey4) -}
5d3f09c8bfbec3b3a0debe287614fe17
  farey4 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey23
                   Lib.farey5) -}
9f372aa4394e6db056a219aa30646317
  farey5 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey22
                   Lib.farey6) -}
39253201b2627ba626257d312667f885
  farey6 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey21
                   Lib.farey7) -}
3f39157eb8144cfb257bea3cb3646877
  farey7 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey20
                   Lib.farey8) -}
69e04aacb2b202035180c60f01bdafaa
  farey8 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey19
                   Lib.farey9) -}
ebee4d8609527caf8222eafc080a91a3
  farey9 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.farey18
                   Lib.farey10) -}
33948657fa65688ad793977bcd26053f
  hdist ::
    GHC.Types.Double
    -> [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ sepa :: GHC.Types.Double ->
                 Lib.hdist1
                   (Diagrams.Combinators.CatOpts
                      @ GHC.Types.Double
                      Diagrams.Combinators.Distrib
                      sepa
                      (Data.Proxy.Proxy @ * @ GHC.Types.Double))) -}
6b2fa1ff6e7a79b6431645a19a6c56dc
  hdist1 ::
    Diagrams.Combinators.CatOpts GHC.Types.Double
    -> [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Unfolding: (Diagrams.TwoD.Combinators.hcat'
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                   Lib.$sfc4
                     `cast`
                   (Diagrams.Core.V.InSpace
                      <Linear.V2.V2>_N
                      <GHC.Types.Double>_N
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R
                   GHC.Float.$fFloatingDouble
                   Lib.chord6
                     `cast`
                   (Sym (Diagrams.Core.Juxtapose.NTCo:Juxtaposable[0]
                             (Diagrams.Core.Types.QDiagram
                                <Diagrams.Backend.SVG.B>_N
                                (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                <Data.Monoid.Any>_N)_N))
                   Lib.chord5
                     `cast`
                   (Sym (Diagrams.Core.HasOrigin.NTCo:HasOrigin[0]
                             (Diagrams.Core.Types.QDiagram
                                <Diagrams.Backend.SVG.B>_N
                                (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                <Data.Monoid.Any>_N)_N))
                   Lib.chord4
                     `cast`
                   (Data.Monoid.WithSemigroup.Monoid'
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R) -}
df58da166b12c59915da4d702a720060
  lblPolyOsc ::
    GHC.Types.Double
    -> [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: GHC.Types.Double -> Lib.chord1) -}
fc1d47a2279764f9e388d0d7b8f87544
  oscCycle ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ halfCycle :: Diagrams.Trail.Trail
                                  Linear.V2.V2 GHC.Types.Double ->
                 case halfCycle of wild { Diagrams.Trail.Trail l0 t ->
                 case t of wild1 {
                   Diagrams.Trail.Line dt ds
                   -> Diagrams.Trail.$fMonoidTrail_$c<>
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        Lib.$s$fMonoidQDiagram1
                        Linear.V2.$fMetricV2
                        wild
                        (Diagrams.Trail.Trail
                           @ Linear.V2.V2
                           @ GHC.Types.Double
                           @ Diagrams.Trail.Line
                           (Diagrams.Trail.Line
                              @ Diagrams.Trail.Line
                              @ Linear.V2.V2
                              @ GHC.Types.Double
                              @~ <Diagrams.Trail.Line>_N
                              (Lib.chord32
                                 Lib.chord_w2
                                   `cast`
                                 (Diagrams.Core.Transform.Transformation
                                    (Trans
                                         (Sub (Diagrams.Trail.TFCo:R:VTrail[0]
                                                   <Linear.V2.V2>_N <GHC.Types.Double>_N))
                                         (Sub (Sym (Diagrams.Trail.TFCo:R:VSegTree[0]
                                                        <Linear.V2.V2>_N <GHC.Types.Double>_N))))
                                    (Trans
                                         (Diagrams.Trail.TFCo:R:NTrail[0]
                                              <Linear.V2.V2>_N <GHC.Types.Double>_N)
                                         (Sym (Diagrams.Trail.TFCo:R:NSegTree[0]
                                                   <Linear.V2.V2>_N <GHC.Types.Double>_N))))_R
                                 ds)))
                   Diagrams.Trail.Loop dt ds ds1
                   -> Diagrams.Trail.$fMonoidTrail_$c<>
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        Lib.$s$fMonoidQDiagram1
                        Linear.V2.$fMetricV2
                        wild
                        (Diagrams.Trail.Trail
                           @ Linear.V2.V2
                           @ GHC.Types.Double
                           @ Diagrams.Trail.Loop
                           (Diagrams.Trail.Loop
                              @ Diagrams.Trail.Loop
                              @ Linear.V2.V2
                              @ GHC.Types.Double
                              @~ <Diagrams.Trail.Loop>_N
                              (Lib.chord32
                                 Lib.chord_w2
                                   `cast`
                                 (Diagrams.Core.Transform.Transformation
                                    (Trans
                                         (Sub (Diagrams.Trail.TFCo:R:VTrail[0]
                                                   <Linear.V2.V2>_N <GHC.Types.Double>_N))
                                         (Sub (Sym (Diagrams.Trail.TFCo:R:VSegTree[0]
                                                        <Linear.V2.V2>_N <GHC.Types.Double>_N))))
                                    (Trans
                                         (Diagrams.Trail.TFCo:R:NTrail[0]
                                              <Linear.V2.V2>_N <GHC.Types.Double>_N)
                                         (Sym (Diagrams.Trail.TFCo:R:NSegTree[0]
                                                   <Linear.V2.V2>_N <GHC.Types.Double>_N))))_R
                                 ds)
                              (Diagrams.Segment.$fTransformableSegment1
                                 @ Diagrams.Segment.Open
                                 @ Linear.V2.V2
                                 @ GHC.Types.Double
                                 Lib.chord_w2
                                   `cast`
                                 (Diagrams.Core.Transform.Transformation
                                    (Sub (Diagrams.Trail.TFCo:R:VTrail[0]
                                              <Linear.V2.V2>_N <GHC.Types.Double>_N))
                                    (Diagrams.Trail.TFCo:R:NTrail[0]
                                         <Linear.V2.V2>_N <GHC.Types.Double>_N))_R
                                 ds1))) } }) -}
5893de93cb64812282e25bbe7a912d07
  oscs ::
    (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
     -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
    -> GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ strokeFn :: Diagrams.Trail.Trail
                                 Linear.V2.V2 GHC.Types.Double
                               -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                   sepa :: GHC.Types.Double ->
                 let {
                   f4 :: [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
                         -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                   = Lib.chord3
                       (Diagrams.Combinators.CatOpts
                          @ GHC.Types.Double
                          Diagrams.Combinators.Distrib
                          sepa
                          (Data.Proxy.Proxy @ * @ GHC.Types.Double))
                 } in
                 let {
                   a40 :: (Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                          -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                     {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, False)
                                   (\ w :: (Data.Colour.Internal.Colour GHC.Types.Double,
                                            Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double) ->
                                    case w of ww { (,) ww1 ww2 ->
                                    Lib.rhythms_f
                                      (Diagrams.TwoD.Attributes.SC
                                         @ GHC.Types.Double
                                         (Diagrams.Attributes.SomeColor
                                            @ (Data.Colour.Internal.Colour GHC.Types.Double)
                                            Diagrams.TwoD.Attributes.$fDefaultLineTexture_$s$fColorColour
                                            ww1))
                                      (strokeFn ww2) }) -}
                   = \ w :: (Data.Colour.Internal.Colour GHC.Types.Double,
                             Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double) ->
                     case w of ww { (,) ww1 ww2 ->
                     Lib.rhythms_f
                       (Diagrams.TwoD.Attributes.SC
                          @ GHC.Types.Double
                          (Diagrams.Attributes.SomeColor
                             @ (Data.Colour.Internal.Colour GHC.Types.Double)
                             Diagrams.TwoD.Attributes.$fDefaultLineTexture_$s$fColorColour
                             ww1))
                       (strokeFn ww2) }
                 } in
                 \ x1 :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 f4
                   (GHC.Base.map
                      @ (Data.Colour.Internal.Colour GHC.Types.Double,
                         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                      @ (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.B
                           (Diagrams.Core.V.V Diagrams.Backend.SVG.B)
                           (Diagrams.Core.V.N Diagrams.Backend.SVG.B)
                           Data.Monoid.Any)
                      a40
                      x1)) -}
ae4b31adf66f264bc7e4341e5695d08b
  polyOsc ::
    (GHC.Types.Double
     -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    -> (GHC.Types.Double
        -> [(Data.Colour.Internal.Colour GHC.Types.Double,
             Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
        -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
    -> (GHC.Types.Double
        -> [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
        -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
    -> GHC.Types.Int
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Vector.Storable.Vector GHC.Types.Double
    -> GHC.Types.Int
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 7,
     Strictness: <L,C(U)><L,1*C1(C1(U))><L,1*C1(C1(U))><L,1*U(U)><L,1*U><L,U(U,U,U)><L,1*U(U)> -}
91462d219ad66cf36c01afa1ce23478c
  polyRhythm ::
    GHC.Types.Int
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Vector.Storable.Vector GHC.Types.Double
    -> GHC.Types.Int
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 4,
     Unfolding: (Lib.polyOsc
                   Lib.rhythm
                   Lib.polyRhythm1
                   Lib.lblPolyOsc) -}
3c743ef1abcfa5aef512fab8d589ee85
  polyRhythm1 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: GHC.Types.Double
                   w1 :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 Lib.$wa2 w1) -}
d7e999cb87900cc957dffbefa6fcd712
  polyRhythm10 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (case Linear.Vector.zero
                        @ Linear.V2.V2
                        Lib.polyRhythm11
                        @ GHC.Types.Double
                        GHC.Float.$fNumDouble of wild { Linear.V2.V2 a40 b ->
                 Linear.V2.V2 @ GHC.Types.Double Lib.chord_x b }) -}
46cd60ccf7fb8de11a76e336a79df8c2
  polyRhythm11 :: Linear.Vector.Additive Linear.V2.V2
  {- Unfolding: (Diagrams.Core.V.$p3InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$sfc4) -}
2a7ba86e1e9c77ddf754f6e1d556ee20
  polyRhythm12 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Linear.Vector.zero
                   @ Linear.V2.V2
                   Lib.polyRhythm13
                   @ GHC.Types.Double
                   GHC.Float.$fNumDouble) -}
f6b2b5b57e651ee4100f4ef5223739fa
  polyRhythm13 :: Linear.Vector.Additive Linear.V2.V2
  {- Unfolding: (Diagrams.Core.V.$p3InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                   Lib.$sfc4
                     `cast`
                   (Diagrams.Core.V.InSpace
                      <Linear.V2.V2>_N
                      <GHC.Types.Double>_N
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R) -}
ce2a8cbd3a2221427aa9532b23cf5085
  polyRhythm14 ::
    Diagrams.Core.Transform.Transformation
      (Diagrams.Core.V.V
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
      (Diagrams.Core.V.N
         (Diagrams.Core.Types.QDiagram
            Diagrams.Backend.SVG.SVG
            Linear.V2.V2
            GHC.Types.Double
            Data.Monoid.Any))
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Core.Types.$fHasOriginQDiagram_$ctransform
                   @ Diagrams.Backend.SVG.SVG
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Lib.$s$fMonoidQDiagram1
                   Linear.V2.$fMetricV2
                   Data.Semigroup.$fSemigroupAny) -}
f2084f8221b62b0439775d58314df1b9
  polyRhythm15 ::
    Diagrams.Core.V.N
      (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
    ~ GHC.Types.Double
  {- Unfolding: (Diagrams.Core.V.$p2InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                   Lib.$sfc4
                     `cast`
                   (Diagrams.Core.V.InSpace
                      <Linear.V2.V2>_N
                      <GHC.Types.Double>_N
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R) -}
5b4d0e3aa01175e9477586547d04cc43
  polyRhythm16 ::
    Diagrams.Core.V.V
      (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
    ~ Linear.V2.V2
  {- Unfolding: (Diagrams.Core.V.$p1InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                   Lib.$sfc4
                     `cast`
                   (Diagrams.Core.V.InSpace
                      <Linear.V2.V2>_N
                      <GHC.Types.Double>_N
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R) -}
2d0cb19f37facdf36546b9a97dd93133
  polyRhythm17 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.75) -}
3b6ac7f131a5e5e6537c3d65de41f64f
  polyRhythm18 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.25) -}
5c0fe9255c1ee876b2c5bdd7d5333a20
  polyRhythm19 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Lib.oscCycle Lib.polyRhythm20) -}
afee867f6e528e619f1fce2950aee872
  polyRhythm2 ::
    Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ cyc :: Diagrams.Trail.Trail
                            Linear.V2.V2 GHC.Types.Double ->
                 Lib.polyRhythm9
                   (GHC.List.zipWith
                      @ (Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                         -> Diagrams.Core.Types.QDiagram
                              Diagrams.Backend.SVG.B
                              Linear.V2.V2
                              GHC.Types.Double
                              Data.Monoid.Any)
                      @ (Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                      @ (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.B
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any)
                      (GHC.Base.$
                         @ (Diagrams.Located.Located
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                         @ (Diagrams.Core.Types.QDiagram
                              Diagrams.Backend.SVG.B
                              Linear.V2.V2
                              GHC.Types.Double
                              Data.Monoid.Any))
                      Lib.polyRhythm_xs'
                      (Lib.polyRhythm3
                         (Diagrams.Located.Loc
                            @ (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                            Lib.chord13
                              `cast`
                            (Sym (Linear.Affine.NTCo:Point[0]
                                      (Sub (Diagrams.Trail.TFCo:R:VTrail[0]
                                                <Linear.V2.V2>_N
                                                <GHC.Types.Double>_N))) (Sym (Diagrams.Trail.TFCo:R:NTrail[0]
                                                                                  <Linear.V2.V2>_N
                                                                                  <GHC.Types.Double>_N)))
                            cyc)))) -}
409bbb30a15549de2d80be4843c4dbc9
  polyRhythm20 :: Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Trail.Trail
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Diagrams.Trail.Line
                   Lib.polyRhythm21) -}
39a7e673841d83dfeda10f9c0d506ebe
  polyRhythm21 ::
    Diagrams.Trail.Trail'
      Diagrams.Trail.Line Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Lib.chord_g Lib.polyRhythm22) -}
027af3a3c548a555c9da50b69ee83fe8
  polyRhythm22 ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
  {- Unfolding: (GHC.Types.:
                   @ (Diagrams.Segment.Segment
                        Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double)
                   Lib.polyRhythm26
                   Lib.polyRhythm23) -}
6f692a9ee35a7c6ccb68d2a091a506be
  polyRhythm23 ::
    [Diagrams.Segment.Segment
       Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Diagrams.Segment.Segment
                        Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double)
                   Lib.polyRhythm24
                   (GHC.Types.[]
                      @ (Diagrams.Segment.Segment
                           Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double))) -}
6d6092db3bd264628dc474ed8c1737d9
  polyRhythm24 ::
    Diagrams.Segment.Segment
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Segment.Linear
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.polyRhythm25) -}
1da74617211ef3cc89b31594ff33fbfe
  polyRhythm25 ::
    Diagrams.Segment.Offset
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Diagrams.Segment.OffsetClosed
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @~ <Diagrams.Segment.Closed>_N
                   Lib.$sunitX) -}
fe84be6bec2d5a76453a39c04cb8d19c
  polyRhythm26 ::
    Diagrams.Segment.Segment
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Segment.Linear
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.polyRhythm27) -}
7494150900ec6e3e24897a1402ff0075
  polyRhythm27 ::
    Diagrams.Segment.Offset
      Diagrams.Segment.Closed Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Segment.OffsetClosed
                   @ Diagrams.Segment.Closed
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @~ <Diagrams.Segment.Closed>_N
                   Lib.polyRhythm28) -}
71dad128307bd66c294aa542bdf79ee8
  polyRhythm28 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Lib.polyRhythm29
                   Lib.chord28) -}
7fca895ac7243b63b9a480e3396615be
  polyRhythm29 :: GHC.Types.Double
  {- Unfolding: (GHC.Types.D# (GHC.Prim.negateDouble# 0.0)) -}
dfa998b4a880cde60955a75e2783c87d
  polyRhythm3 ::
    Diagrams.Located.Located
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    -> [Diagrams.Located.Located
          (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
  {- Unfolding: (Diagrams.TrailLike.explodeTrail
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Located.Located
                        (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                   Lib.polyRhythm5
                   Lib.polyRhythm4
                   Lib.$s$fTrailLikeLocated) -}
27128103a1970f47ff647ac9648f4330
  polyRhythm4 ::
    Diagrams.Core.V.N
      (Diagrams.Located.Located
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
    ~ GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Diagrams.Core.V.N
                        (Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))
                   @ GHC.Types.Double
                   @~ (Trans
                           (Diagrams.Located.TFCo:R:NLocated[0]
                                <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)
                           (Diagrams.Trail.TFCo:R:NTrail[0]
                                <Linear.V2.V2>_N <GHC.Types.Double>_N))) -}
264de2d9b0aadc7d0da49b1d1b9dcc0b
  polyRhythm5 ::
    Diagrams.Core.V.V
      (Diagrams.Located.Located
         (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
    ~ Linear.V2.V2
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ (* -> *)
                   @ (Diagrams.Core.V.V
                        (Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)))
                   @ Linear.V2.V2
                   @~ (Trans
                           (Diagrams.Located.TFCo:R:VLocated[0]
                                <Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_N)
                           (Diagrams.Trail.TFCo:R:VTrail[0]
                                <Linear.V2.V2>_N <GHC.Types.Double>_N))) -}
c16b917baf4a714e10d20bb5cc5624a3
  polyRhythm6 ::
    [Diagrams.Located.Located
       (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
     -> Diagrams.Core.Types.QDiagram
          Diagrams.Backend.SVG.B
          Linear.V2.V2
          GHC.Types.Double
          Data.Monoid.Any]
099e51d0afd8633f165d8b19277de86c
  polyRhythm7 ::
    Diagrams.Located.Located
      (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ x1 :: Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double) ->
                 Lib.polyRhythm_f
                   (GHC.Types.:
                      @ (Diagrams.Located.Located
                           (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))
                      x1
                      (GHC.Types.[]
                         @ (Diagrams.Located.Located
                              (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double))))
                     `cast`
                   (Sym (Diagrams.Path.NTCo:Path[0]
                             <Linear.V2.V2>_N <GHC.Types.Double>_N))) -}
7df3eaf58d84f302c995dbac62739921
  polyRhythm8 ::
    Diagrams.TwoD.Path.StrokeOpts ()
    -> Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.TwoD.Path.strokeP'
                   @ ()
                   @ GHC.Types.Double
                   @ Diagrams.Backend.SVG.B
                   Lib.$s$fRenderablePathSVG2
                   Lib.$s$fRenderablePathSVG
                   Diagrams.Core.Names.$fIsName()) -}
14f7fd81a31caf7753c2756b3776daec
  polyRhythm9 ::
    [Diagrams.Core.Types.QDiagram
       Diagrams.Backend.SVG.B
       Linear.V2.V2
       GHC.Types.Double
       Data.Monoid.Any]
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Combinators.$wcat'
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$sfc4
                   Linear.V2.$fMetricV2
                   GHC.Float.$fFloatingDouble
                   Lib.chord6
                     `cast`
                   (Sym (Diagrams.Core.Juxtapose.NTCo:Juxtaposable[0]
                             <Diagrams.Core.Types.QDiagram
                                Diagrams.Backend.SVG.SVG
                                Linear.V2.V2
                                GHC.Types.Double
                                Data.Monoid.Any>_N))
                   Lib.chord4
                   Lib.chord5
                     `cast`
                   (Sym (Diagrams.Core.HasOrigin.NTCo:HasOrigin[0]
                             <Diagrams.Core.Types.QDiagram
                                Diagrams.Backend.SVG.SVG
                                Linear.V2.V2
                                GHC.Types.Double
                                Data.Monoid.Any>_N))
                   Lib.polyRhythm10
                   Diagrams.Combinators.Cat
                   Lib.chord14) -}
1b3b4b17d659ab0ffe9794a82d2d9e7c
  polyRhythm_f ::
    Diagrams.Path.Path Linear.V2.V2 GHC.Types.Double
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Lib.polyRhythm8
                   (Diagrams.TwoD.Path.$fDefaultStrokeOpts_$cdef @ ())) -}
37a9c1b6ad8ff774f7fd601e7e948a04
  polyRhythm_xs' ::
    [Diagrams.Located.Located
       (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
     -> Diagrams.Core.Types.QDiagram
          Diagrams.Backend.SVG.B
          Linear.V2.V2
          GHC.Types.Double
          Data.Monoid.Any]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Diagrams.Located.Located
                        (Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                      -> Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.B
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any)
                   Lib.polyRhythm7
                   Lib.polyRhythm6) -}
703d54146eecab2371805908696b9881
  rhythm ::
    GHC.Types.Double
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 1,
     Unfolding: (\ w :: GHC.Types.Double ->
                 case w of ww { GHC.Types.D# ww1 ->
                 Lib.$wosc
                   Lib.polyRhythm19
                   Lib.polyRhythm18
                   Lib.polyRhythm17
                   ww1 }) -}
53e2209f046f76fcbd818d74a0e62ce1
  rhythms ::
    GHC.Types.Int
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Vector.Storable.Vector GHC.Types.Double
    -> GHC.Types.Int
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 4,
     Unfolding: (Lib.polyOsc Lib.rhythm Lib.rhythms1 Lib.vdist) -}
71fe6ed1ce05eb8cd67cc827350f86d2
  rhythms1 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 1,
     Unfolding: (\ sepa :: GHC.Types.Double ->
                 let {
                   f4 :: [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
                         -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                   = Lib.chord3
                       (Diagrams.Combinators.CatOpts
                          @ GHC.Types.Double
                          Diagrams.Combinators.Distrib
                          sepa
                          (Data.Proxy.Proxy @ * @ GHC.Types.Double))
                 } in
                 let {
                   a40 :: (Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                          -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
                     {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, False)
                                   (\ w :: (Data.Colour.Internal.Colour GHC.Types.Double,
                                            Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double) ->
                                    case w of ww { (,) ww1 ww2 ->
                                    Lib.rhythms_f
                                      (Diagrams.TwoD.Attributes.SC
                                         @ GHC.Types.Double
                                         (Diagrams.Attributes.SomeColor
                                            @ (Data.Colour.Internal.Colour GHC.Types.Double)
                                            Diagrams.TwoD.Attributes.$fDefaultLineTexture_$s$fColorColour
                                            ww1))
                                      (Lib.polyRhythm2 ww2)
                                        `cast`
                                      (Diagrams.Core.Types.QDiagram
                                         <Diagrams.Backend.SVG.B>_N
                                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                                         <Data.Monoid.Any>_R)_R }) -}
                   = \ w :: (Data.Colour.Internal.Colour GHC.Types.Double,
                             Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double) ->
                     case w of ww { (,) ww1 ww2 ->
                     Lib.rhythms_f
                       (Diagrams.TwoD.Attributes.SC
                          @ GHC.Types.Double
                          (Diagrams.Attributes.SomeColor
                             @ (Data.Colour.Internal.Colour GHC.Types.Double)
                             Diagrams.TwoD.Attributes.$fDefaultLineTexture_$s$fColorColour
                             ww1))
                       (Lib.polyRhythm2 ww2)
                         `cast`
                       (Diagrams.Core.Types.QDiagram
                          <Diagrams.Backend.SVG.B>_N
                          (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                          (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                          <Data.Monoid.Any>_R)_R }
                 } in
                 \ x1 :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                           Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 f4
                   (GHC.Base.map
                      @ (Data.Colour.Internal.Colour GHC.Types.Double,
                         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)
                      @ (Diagrams.Core.Types.QDiagram
                           Diagrams.Backend.SVG.B
                           (Diagrams.Core.V.V Diagrams.Backend.SVG.B)
                           (Diagrams.Core.V.N Diagrams.Backend.SVG.B)
                           Data.Monoid.Any)
                      a40
                      x1)) -}
8f3aa71daafd2295ae0b6af4a38118ca
  rhythmsWithSync ::
    GHC.Types.Int
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Vector.Storable.Vector GHC.Types.Double
    -> GHC.Types.Int
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 4, Strictness: <L,U(U)><L,U><L,U(U,U,U)><L,U(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.rhythmsWithSync1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <[(Data.Colour.Internal.Colour GHC.Types.Double,
                         GHC.Types.Int)]>_R
                 ->_R <Data.Vector.Storable.Vector GHC.Types.Double>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_R)_R) -}
6e06650a443b2591574f35238a02a8c0
  rhythmsWithSync1 ::
    GHC.Types.Int
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Vector.Storable.Vector GHC.Types.Double
    -> GHC.Types.Int
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 4, Strictness: <L,U(U)><L,U><L,U(U,U,U)><L,U(U)>,
     Unfolding: (\ w0 :: GHC.Types.Int
                   pcs :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                            GHC.Types.Int)]
                   tn :: Data.Vector.Storable.Vector GHC.Types.Double
                   f0 :: GHC.Types.Int ->
                 Lib.rhythmsWithSync13
                   (Lib.polyOsc Lib.rhythm Lib.rhythms1 Lib.vdist w0 pcs tn f0)
                     `cast`
                   (Diagrams.Core.Types.QDiagram
                      <Diagrams.Backend.SVG.SVG>_N
                      (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                      (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                      <Data.Monoid.Any>_R)_R
                   (Lib.polyOsc
                      Lib.rhythm
                      Lib.rhythmsWithSync3
                        `cast`
                      (<GHC.Types.Double>_R
                       ->_R <[(Data.Colour.Internal.Colour GHC.Types.Double,
                               Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]>_R
                       ->_R (Diagrams.Core.Types.QDiagram
                               <Diagrams.Backend.SVG.B>_N
                               (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                               (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                               <Data.Monoid.Any>_R)_R)
                      Lib.rhythmsWithSync2
                        `cast`
                      (<GHC.Types.Double>_R
                       ->_R <[Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]>_R
                       ->_R Trans
                                (Sym (Data.Semigroup.NTCo:Option[0]) <Data.Tree.DUAL.Internal.DUALTreeU
                                                                        (Diagrams.Core.Types.DownAnnots
                                                                           Linear.V2.V2
                                                                           GHC.Types.Double)
                                                                        (Diagrams.Core.Types.UpAnnots
                                                                           Diagrams.Backend.SVG.SVG
                                                                           Linear.V2.V2
                                                                           GHC.Types.Double
                                                                           Data.Monoid.Any)
                                                                        Diagrams.Core.Types.Annotation
                                                                        (Diagrams.Core.Types.QDiaLeaf
                                                                           Diagrams.Backend.SVG.SVG
                                                                           Linear.V2.V2
                                                                           GHC.Types.Double
                                                                           Data.Monoid.Any)>_N)
                                (Trans
                                     (Sym (Data.Tree.DUAL.Internal.NTCo:DUALTree[0]
                                               <Diagrams.Core.Types.DownAnnots
                                                  Linear.V2.V2 GHC.Types.Double>_R
                                               <Diagrams.Core.Types.UpAnnots
                                                  Diagrams.Backend.SVG.SVG
                                                  Linear.V2.V2
                                                  GHC.Types.Double
                                                  Data.Monoid.Any>_R
                                               <Diagrams.Core.Types.Annotation>_R
                                               <Diagrams.Core.Types.QDiaLeaf
                                                  Diagrams.Backend.SVG.SVG
                                                  Linear.V2.V2
                                                  GHC.Types.Double
                                                  Data.Monoid.Any>_R))
                                     (Sym (Diagrams.Core.Types.NTCo:QDiagram[0]
                                               <Diagrams.Backend.SVG.SVG>_N
                                               (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                               (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                               <Data.Monoid.Any>_R))))
                      w0
                      pcs
                      tn
                      f0)
                     `cast`
                   (Diagrams.Core.Types.QDiagram
                      <Diagrams.Backend.SVG.SVG>_N
                      (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                      (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                      <Data.Monoid.Any>_R)_R) -}
585cd2d232eff29eb965bae922ef6727
  rhythmsWithSync10 ::
    Data.HashMap.Base.HashMap
      Data.Typeable.Internal.TypeRep
      (Diagrams.Core.Style.Attribute
         (Diagrams.Core.V.V
            (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B))
         (Diagrams.Core.V.N
            (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)))
  {- Unfolding: (Data.HashMap.Base.Leaf
                   @ Data.Typeable.Internal.TypeRep
                   @ (Diagrams.Core.Style.Attribute
                        (Diagrams.Core.V.V
                           (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B))
                        (Diagrams.Core.V.N
                           (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)))
                   __word 8940204702237973666
                   Diagrams.Attributes.$fAttributeClassOpacity3
                   Lib.rhythmsWithSync11) -}
608e91d8da7f47c7bede3ea485ed661f
  rhythmsWithSync11 ::
    Diagrams.Core.Style.Attribute
      (Diagrams.Core.V.V
         (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B))
      (Diagrams.Core.V.N
         (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B))
  {- Unfolding: (Diagrams.Core.Style.Attribute
                   @ (Diagrams.Core.V.V
                        (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B))
                   @ (Diagrams.Core.V.N
                        (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B))
                   @ Diagrams.Attributes.Opacity
                   Diagrams.Attributes.$fAttributeClassOpacity
                   Lib.rhythmsWithSync12
                     `cast`
                   (Trans
                        (Sym (Data.Monoid.NTCo:Product[0] <GHC.Types.Double>_R))
                        (Sym (Diagrams.Attributes.NTCo:Opacity[0])))) -}
a4650509c3311ee2693dc0da1ed1c7d1
  rhythmsWithSync12 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 0.2) -}
27be3e4a75aa9db36675f31afb3b8e76
  rhythmsWithSync13 ::
    Diagrams.Core.Types.QDiagram
      Diagrams.Backend.SVG.B
      Linear.V2.V2
      GHC.Types.Double
      Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Diagrams.Core.Types.$fMonoidQDiagram_$c<>
                   @ Diagrams.Backend.SVG.B
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ Data.Monoid.Any
                   Linear.V2.$fMetricV2
                   Lib.$s$fMonoidQDiagram1
                   Data.Semigroup.$fSemigroupAny) -}
daf95676ab51426daa6fec2e3586882e
  rhythmsWithSync2 ::
    GHC.Types.Double
    -> [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
    -> GHC.Base.Maybe
         (Data.Tree.DUAL.Internal.DUALTreeU
            (Diagrams.Core.Types.DownAnnots Linear.V2.V2 GHC.Types.Double)
            (Diagrams.Core.Types.UpAnnots
               Diagrams.Backend.SVG.SVG
               Linear.V2.V2
               GHC.Types.Double
               Data.Monoid.Any)
            Diagrams.Core.Types.Annotation
            (Diagrams.Core.Types.QDiaLeaf
               Diagrams.Backend.SVG.SVG
               Linear.V2.V2
               GHC.Types.Double
               Data.Monoid.Any))
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: GHC.Types.Double
                   ds1 :: [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B] ->
                 GHC.Base.Nothing
                   @ (Data.Tree.DUAL.Internal.DUALTreeU
                        (Diagrams.Core.Types.DownAnnots Linear.V2.V2 GHC.Types.Double)
                        (Diagrams.Core.Types.UpAnnots
                           Diagrams.Backend.SVG.SVG
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any)
                        Diagrams.Core.Types.Annotation
                        (Diagrams.Core.Types.QDiaLeaf
                           Diagrams.Backend.SVG.SVG
                           Linear.V2.V2
                           GHC.Types.Double
                           Data.Monoid.Any))) -}
c83f917ae1769b34011db3dec88d788b
  rhythmsWithSync3 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U>,
     Unfolding: (\ sepa :: GHC.Types.Double
                   oscs1 :: [(Data.Colour.Internal.Colour GHC.Types.Double,
                              Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)] ->
                 Lib.rhythmsWithSync9
                   (Lib.rhythmsWithSync5
                      (case Lib.$wgo2 oscs1 of ww { (#,#) ww1 ww2 ->
                       let {
                         grid' :: [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
                         = Lib.rhythmsWithSync_go1
                             ww2
                             (case GHC.Real.$wnumericEnumFromThen
                                     @ GHC.Types.Double
                                     GHC.Float.$fFractionalDouble
                                     Lib.chord14
                                     (GHC.Float.negateDouble sepa) of ww3 { (#,#) ww4 ww5 ->
                              GHC.Base.map
                                @ GHC.Types.Double
                                @ (Linear.Affine.Point Linear.V2.V2 GHC.Types.Double)
                                Lib.rhythmsWithSync4
                                (GHC.Types.: @ GHC.Types.Double ww4 ww5) })
                       } in
                       Diagrams.Core.Types.$fMonoidQDiagram_$cmconcat
                         @ Diagrams.Backend.SVG.SVG
                         @ Linear.V2.V2
                         @ GHC.Types.Double
                         @ Data.Monoid.Any
                         Linear.V2.$fMetricV2
                         Lib.$s$fMonoidQDiagram1
                         Data.Semigroup.$fSemigroupAny
                         (Lib.rhythmsWithSync_go
                            grid'
                            (case grid' of wild {
                               []
                               -> GHC.List.scanl2
                                    @ [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
                               : ds1 xs -> xs })
                            grid') }))) -}
b0910020d98735e8209991f7148a8477
  rhythmsWithSync4 ::
    GHC.Types.Double
    -> Linear.Affine.Point Linear.V2.V2 GHC.Types.Double
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: GHC.Types.Double ->
                 case ds of wild { GHC.Types.D# x1 ->
                 (Linear.V2.V2
                    @ GHC.Types.Double
                    (GHC.Types.D# (GHC.Prim.*## x1 0.0))
                    (GHC.Types.D# x1))
                   `cast`
                 (Sym (Linear.Affine.NTCo:Point[0]
                           <Linear.V2.V2>_R) <GHC.Types.Double>_N) }) -}
c52835b1df2c3b0737cf01da61b99c94
  rhythmsWithSync5 ::
    Diagrams.Core.Types.QDiagram
      Diagrams.Backend.SVG.B
      Linear.V2.V2
      GHC.Types.Double
      Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.B
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (case Diagrams.Core.V.$p1InSpace
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        @ (Diagrams.Core.Types.QDiagram
                             Diagrams.Backend.SVG.B
                             Linear.V2.V2
                             GHC.Types.Double
                             Data.Monoid.Any)
                        Lib.$sfc4 of cobox { GHC.Types.Eq# cobox1 ->
                 case Diagrams.Core.V.$p2InSpace
                        @ Linear.V2.V2
                        @ GHC.Types.Double
                        @ (Diagrams.Core.Types.QDiagram
                             Diagrams.Backend.SVG.B
                             Linear.V2.V2
                             GHC.Types.Double
                             Data.Monoid.Any)
                        Lib.$sfc4 of cobox2 { GHC.Types.Eq# cobox3 ->
                 Lib.polyRhythm14
                   Lib.rhythmsWithSync6
                     `cast`
                   (Diagrams.Core.Transform.Transformation
                      (Sub (Sym cobox1)) (Sym cobox3))_R } }) -}
1b3ee3480b533cac7a76dcbfff229a65
  rhythmsWithSync6 ::
    Diagrams.Core.Transform.Transformation
      Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (Diagrams.Core.Transform.Transformation
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   (Diagrams.Core.Transform.$fMonoid:-:_$cmempty
                      @ (Linear.V2.V2 GHC.Types.Double))
                   (Diagrams.Core.Transform.$fMonoid:-:_$cmempty
                      @ (Linear.V2.V2 GHC.Types.Double))
                   Lib.rhythmsWithSync7) -}
2633d51b4d691d63b432154c1b01c469
  rhythmsWithSync7 :: Linear.V2.V2 GHC.Types.Double
  {- Unfolding: (case Linear.Vector.zero
                        @ Linear.V2.V2
                        Lib.polyRhythm11
                        @ GHC.Types.Double
                        Lib.rhythmsWithSync8 of wild { Linear.V2.V2 a40 b ->
                 Linear.V2.V2 @ GHC.Types.Double a40 Lib.chord28 }) -}
ee10606e71d2e60f7580c3095319a166
  rhythmsWithSync8 :: GHC.Num.Num GHC.Types.Double
  {- Unfolding: (Diagrams.Core.V.$p4InSpace
                   @ Linear.V2.V2
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.QDiagram
                        Diagrams.Backend.SVG.B
                        Linear.V2.V2
                        GHC.Types.Double
                        Data.Monoid.Any)
                   Lib.$sfc4) -}
f749b547e01158aabf9bd9425620b316
  rhythmsWithSync9 ::
    Diagrams.Core.Types.QDiagram
      Diagrams.Backend.SVG.SVG
      Linear.V2.V2
      GHC.Types.Double
      Data.Monoid.Any
    -> Diagrams.Core.Types.QDiagram
         Diagrams.Backend.SVG.SVG
         Linear.V2.V2
         GHC.Types.Double
         Data.Monoid.Any
  {- Unfolding: (Lib.$sfc2
                   Lib.rhythmsWithSync10
                     `cast`
                   (Sym (Diagrams.Core.Style.NTCo:Style[0]
                             (Diagrams.Core.V.V
                                (Diagrams.Core.Types.QDiagram
                                   <Diagrams.Backend.SVG.B>_N
                                   (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                                   (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                                   <Data.Monoid.Any>_N)_N)_N
                             (Diagrams.Core.V.N
                                (Diagrams.Core.Types.QDiagram
                                   <Diagrams.Backend.SVG.B>_N
                                   (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                                   (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                                   <Data.Monoid.Any>_N)_N)_N))) -}
3cac8c9b547645edce8b83b54abde382
  rhythmsWithSync_go ::
    [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
    -> [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
    -> [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
    -> [Diagrams.Core.Types.QDiagram
          Diagrams.Backend.SVG.B
          Linear.V2.V2
          GHC.Types.Double
          Data.Monoid.Any]
  {- Arity: 3, Strictness: <S,1*U><L,1*U><L,1*U> -}
e1825638b26c5aa472c5f329bb37363a
  rhythmsWithSync_go1 ::
    [Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double]
    -> [Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]
    -> [[Linear.Affine.Point Linear.V2.V2 GHC.Types.Double]]
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
8faa0fc3ad91c2cd6beb677914174aa6
  rhythms_f ::
    Diagrams.TwoD.Attributes.Texture GHC.Types.Double
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Unfolding: (Diagrams.TwoD.Attributes.lineTexture
                   @ GHC.Types.Double
                   @ (Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B)
                   Lib.$sfc4
                     `cast`
                   (Diagrams.Core.V.InSpace
                      <Linear.V2.V2>_N
                      <GHC.Types.Double>_N
                      (Diagrams.Core.Types.QDiagram
                         <Diagrams.Backend.SVG.B>_N
                         (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                         (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                         <Data.Monoid.Any>_N)_N)_R
                   Lib.$s$fRenderablePathSVG3
                     `cast`
                   (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                             <*>_N <GHC.Types.Double>_N))
                   GHC.Float.$fFloatingDouble
                   Lib.$sfc2
                     `cast`
                   (Sym (Diagrams.Core.Style.NTCo:HasStyle[0]
                             (Diagrams.Core.Types.QDiagram
                                <Diagrams.Backend.SVG.B>_N
                                (Diagrams.Backend.SVG.TFCo:R:VSVG[0])
                                (Diagrams.Backend.SVG.TFCo:R:NSVG[0])
                                <Data.Monoid.Any>_N)_N))) -}
3c445ab33864b7695a388552b621cbff
  tone ::
    GHC.Types.Double
    -> Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double
  {- Arity: 1,
     Unfolding: (\ w :: GHC.Types.Double ->
                 case w of ww { GHC.Types.D# ww1 ->
                 Lib.$wosc Lib.chord21 Lib.chord14 Lib.chord_x ww1 }) -}
fedf5fdd536f1c476485da70dab9e707
  tones ::
    GHC.Types.Int
    -> [(Data.Colour.Internal.Colour GHC.Types.Double, GHC.Types.Int)]
    -> Data.Vector.Storable.Vector GHC.Types.Double
    -> GHC.Types.Int
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 4,
     Unfolding: (Lib.polyOsc Lib.tone Lib.tones1 Lib.vdist) -}
d98eb58fa7551e6da4ae4c5db1f2fe17
  tones1 ::
    GHC.Types.Double
    -> [(Data.Colour.Internal.Colour GHC.Types.Double,
         Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double)]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 1,
     Unfolding: (Lib.oscs
                   Lib.chord20
                     `cast`
                   (<Diagrams.Trail.Trail Linear.V2.V2 GHC.Types.Double>_R
                    ->_R (Diagrams.Core.Types.QDiagram
                            <Diagrams.Backend.SVG.B>_N
                            (Sym (Diagrams.Backend.SVG.TFCo:R:VSVG[0]))
                            (Sym (Diagrams.Backend.SVG.TFCo:R:NSVG[0]))
                            <Data.Monoid.Any>_R)_R)) -}
ebef3e29894cd278a2cd5c2efe9e69ff
  vdist ::
    GHC.Types.Double
    -> [Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B]
    -> Diagrams.Core.Types.Diagram Diagrams.Backend.SVG.B
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ sepa :: GHC.Types.Double ->
                 Lib.chord3
                   (Diagrams.Combinators.CatOpts
                      @ GHC.Types.Double
                      Diagrams.Combinators.Distrib
                      sepa
                      (Data.Proxy.Proxy @ * @ GHC.Types.Double))) -}
"SPEC/Lib $fFractionalV2 @ Double" [ALWAYS] forall $dNum :: GHC.Num.Num
                                                              (Linear.V2.V2 GHC.Types.Double)
                                                   $dFractional :: GHC.Real.Fractional
                                                                     GHC.Types.Double
  Linear.V2.$fFractionalV2 @ GHC.Types.Double $dNum $dFractional
  = Lib.$s$fFractionalV2
"SPEC/Lib $fMonoidQDiagram _ @ V2 @ Double @ Any" [ALWAYS] forall @ b
                                                                  $dMetric :: Linear.Metric.Metric
                                                                                Linear.V2.V2
                                                                  $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                                      GHC.Types.Double
                                                                  $dSemigroup :: Data.Semigroup.Semigroup
                                                                                   Data.Monoid.Any
  Diagrams.Core.Types.$fMonoidQDiagram @ b
                                       @ Linear.V2.V2
                                       @ GHC.Types.Double
                                       @ Data.Monoid.Any
                                       $dMetric
                                       $dOrderedField
                                       $dSemigroup
  = Lib.$s$fMonoidQDiagram @ b
"SPEC/Lib $fNumV2 @ Double" [ALWAYS] forall $dNum :: GHC.Num.Num
                                                       GHC.Types.Double
  Linear.V2.$fNumV2 @ GHC.Types.Double $dNum
  = Lib.$s$fFractionalV2_$s$fNumV2
"SPEC/Lib $fRenderablePathSVG @ Double" [ALWAYS] forall $dTransformable :: Diagrams.Core.Transform.Transformable
                                                                             (Diagrams.Path.Path
                                                                                Linear.V2.V2
                                                                                GHC.Types.Double)
                                                        tup :: Graphics.Rendering.SVG.SVGFloat
                                                                 GHC.Types.Double
  Diagrams.Backend.SVG.$fRenderablePathSVG @ GHC.Types.Double
                                           $dTransformable
                                           tup
  = Lib.$s$fRenderablePathSVG
"SPEC/Lib $fRenderableTextSVG @ Double" [ALWAYS] forall $dTransformable :: Diagrams.Core.Transform.Transformable
                                                                             (Diagrams.TwoD.Text.Text
                                                                                GHC.Types.Double)
                                                        tup :: Graphics.Rendering.SVG.SVGFloat
                                                                 GHC.Types.Double
  Diagrams.Backend.SVG.$fRenderableTextSVG @ GHC.Types.Double
                                           $dTransformable
                                           tup
  = Lib.$s$fRenderableTextSVG
"SPEC/Lib $fSemigroupQDiagram _ @ V2 @ Double @ Any" [ALWAYS] forall @ b
                                                                     $dMetric :: Linear.Metric.Metric
                                                                                   Linear.V2.V2
                                                                     $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                                         GHC.Types.Double
                                                                     $dSemigroup :: Data.Semigroup.Semigroup
                                                                                      Data.Monoid.Any
  Diagrams.Core.Types.$fSemigroupQDiagram @ b
                                          @ Linear.V2.V2
                                          @ GHC.Types.Double
                                          @ Data.Monoid.Any
                                          $dMetric
                                          $dOrderedField
                                          $dSemigroup
  = Lib.$s$fSemigroupQDiagram @ b
"SPEC/Lib $fSemigroupQDiagram_$cstimes _ @ V2 @ Double @ Any" [ALWAYS] forall @ b
                                                                              $dMetric :: Linear.Metric.Metric
                                                                                            Linear.V2.V2
                                                                              $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                                                  GHC.Types.Double
                                                                              $dSemigroup :: Data.Semigroup.Semigroup
                                                                                               Data.Monoid.Any
  Diagrams.Core.Types.$fSemigroupQDiagram_$cstimes @ b
                                                   @ Linear.V2.V2
                                                   @ GHC.Types.Double
                                                   @ Data.Monoid.Any
                                                   $dMetric
                                                   $dOrderedField
                                                   $dSemigroup
  = Lib.$s$fSemigroupQDiagram_$s$fSemigroupQDiagram_$cstimes @ b
"SPEC/Lib $fTrailLikeLocated @ (Trail V2 Double)" [ALWAYS] forall $dMetric :: Linear.Metric.Metric
                                                                                (Diagrams.Core.V.V
                                                                                   (Diagrams.Located.Located
                                                                                      (Diagrams.Trail.Trail
                                                                                         Linear.V2.V2
                                                                                         GHC.Types.Double)))
                                                                  $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                                      (Diagrams.Core.V.N
                                                                                         (Diagrams.Located.Located
                                                                                            (Diagrams.Trail.Trail
                                                                                               Linear.V2.V2
                                                                                               GHC.Types.Double)))
                                                                  $dTrailLike :: Diagrams.TrailLike.TrailLike
                                                                                   (Diagrams.Trail.Trail
                                                                                      Linear.V2.V2
                                                                                      GHC.Types.Double)
  Diagrams.TrailLike.$fTrailLikeLocated @ (Diagrams.Trail.Trail
                                             Linear.V2.V2 GHC.Types.Double)
                                        $dMetric
                                        $dOrderedField
                                        $dTrailLike
  = Lib.$s$fTrailLikeLocated
"SPEC/Lib $fTrailLikeTrail @ V2 @ Double" [ALWAYS] forall $dMetric :: Linear.Metric.Metric
                                                                        (Diagrams.Core.V.V
                                                                           (Diagrams.Trail.Trail
                                                                              Linear.V2.V2
                                                                              GHC.Types.Double))
                                                          $dOrderedField :: Diagrams.Core.Envelope.OrderedField
                                                                              (Diagrams.Core.V.N
                                                                                 (Diagrams.Trail.Trail
                                                                                    Linear.V2.V2
                                                                                    GHC.Types.Double))
                                                          $dMetric1 :: Linear.Metric.Metric
                                                                         Linear.V2.V2
                                                          $dOrderedField1 :: Diagrams.Core.Envelope.OrderedField
                                                                               GHC.Types.Double
  Diagrams.TrailLike.$fTrailLikeTrail @ Linear.V2.V2
                                      @ GHC.Types.Double
                                      $dMetric
                                      $dOrderedField
                                      $dMetric1
                                      $dOrderedField1
  = Lib.$s$fTrailLikeTrail
"SPEC/Lib unitX @ V2 @ Double" [ALWAYS] forall $dR1 :: Linear.V1.R1
                                                         Linear.V2.V2
                                               $dAdditive :: Linear.Vector.Additive Linear.V2.V2
                                               $dNum :: GHC.Num.Num GHC.Types.Double
  Diagrams.TwoD.Vector.unitX @ Linear.V2.V2
                             @ GHC.Types.Double
                             $dR1
                             $dAdditive
                             $dNum
  = Lib.$sunitX
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

