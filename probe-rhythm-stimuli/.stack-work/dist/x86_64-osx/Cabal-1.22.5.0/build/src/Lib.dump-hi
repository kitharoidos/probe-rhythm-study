
==================== FINAL INTERFACE ====================
2016-09-07 10:27:05.646225 UTC

interface probe_GhpfxM5TCHW90UKWP1Xo7K:Lib 7103
  interface hash: a2b3e1e34e13ca3a1f4c9de4f91ce017
  ABI hash: 3cd665f3bae143e408a2844e58d3a5b1
  export-list hash: 73a42d7be3aad59dc8e8a545bf86bbed
  orphan hash: 3e49e268c42885d5cf0082fa962715f9
  flag hash: 161d16d3422b284d74d35a691dea01b8
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.calibrationStimulus
  Lib.stimuli
  Lib.stimulusChords
  Lib.stimulusFileNames
module dependencies:
package dependencies: Boolean-0.2.3@Boole_AQw96tEQbS14h4CU6tCStK
                      QuickCheck-2.8.2@Quick_6TxL5Cx3o2p0HsyT59KWiD
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      colour-2.3.3@colou_4tkGkumXZDK9tS5HCSa7Y0
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      csound-expression-typed-0.0.9.3@csoun_30GzPkbwq4z8DveTcfaCNZ
                      csound-expression-dynamic-0.1.6@csoun_3DjXDAELwER3zAMHZGMbsp
                      csound-sampler-0.0.6.5@csoun_5PQBehliRREIml1BuUB3jI
                      csound-expression-opcodes-0.0.3.1@csoun_FB7csGHVu7NCj0H3l7PA5p
                      csound-catalog-0.5.0@csoun_Ga4q4r4aWcOFbH21APDvuI
                      csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J
                      data-default-instances-base-0.1.0@datad_2INJRDvgZ4jDHH2QJIQkcK
                      data-default-0.5.3@datad_91CrM49egJd0Gm9c4dN01A
                      data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk
                      data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ
                      data-fix-cse-0.0.2@dataf_9OU4S4aXn8p7PJ6lHH74jm
                      data-fix-0.0.3@dataf_GQW30SgTqCHK8c9qmpbLGb
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui
                      double-conversion-2.0.1.0@doubl_9d4SFE0Uwt89cnl39kvRqX
                      formatting-6.2.2@forma_8aodSjW5eMN2lAZ4gdtUVi ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I integer-gmp-1.0.0.0
                      old-locale-1.0.0.7@oldlo_7h2Gx6mVPJ5Gheca8j9Mpe
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou
                      scientific-0.3.4.9@scien_1WVNjGUftkQ9QzH4DOM2n1
                      temporal-media-0.6.1@tempo_761SzttxqBd2KI5nkyi311
                      temporal-music-notation-0.4.1@tempo_BNMZo3KS1hoKUMM4l1A0ov
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      text-format-0.3.1.1@textf_AVjaAeJErF76GdHnr7DxnV
                      tf-random-0.5@tfran_1eLmkn3WUnC8NZpPuDLGKF
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      wl-pprint-1.2@wlppr_BfLVsbunhxqAoD0kHyfMec
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         colour-2.3.3@colou_4tkGkumXZDK9tS5HCSa7Y0:Data.Colour
         csound-expression-typed-0.0.9.3@csoun_30GzPkbwq4z8DveTcfaCNZ:Csound.Typed.Types.Tuple
         csound-expression-dynamic-0.1.6@csoun_3DjXDAELwER3zAMHZGMbsp:Csound.Dynamic.Build.Logic
         csound-expression-dynamic-0.1.6@csoun_3DjXDAELwER3zAMHZGMbsp:Csound.Dynamic.Build.Numeric
         csound-sampler-0.0.6.5@csoun_5PQBehliRREIml1BuUB3jI:Csound.Sam
         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Air.Live
         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Control.Gui
         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.SigSpace
         data-default-instances-base-0.1.0@datad_2INJRDvgZ4jDHH2QJIQkcK:Data.Default.Instances.Base
         data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk:Data.Default.Instances.DList
         data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY:Data.Default.Instances.Containers
         data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ:Data.Default.Instances.OldLocale
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Arbitrary
         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Operators.Reduction
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: Boolean-0.2.3@Boole_AQw96tEQbS14h4CU6tCStK:Data.Boolean
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         csound-expression-typed-0.0.9.3@csoun_30GzPkbwq4z8DveTcfaCNZ:Csound.Typed.Control.Sf2
                         csound-expression-typed-0.0.9.3@csoun_30GzPkbwq4z8DveTcfaCNZ:Csound.Typed.Types.Evt
                         csound-expression-typed-0.0.9.3@csoun_30GzPkbwq4z8DveTcfaCNZ:Csound.Typed.Types.Prim
                         csound-expression-typed-0.0.9.3@csoun_30GzPkbwq4z8DveTcfaCNZ:Csound.Typed.Types.Tuple
                         csound-expression-dynamic-0.1.6@csoun_3DjXDAELwER3zAMHZGMbsp:Csound.Dynamic.Build.Logic
                         csound-expression-dynamic-0.1.6@csoun_3DjXDAELwER3zAMHZGMbsp:Csound.Dynamic.Types.Exp
                         csound-sampler-0.0.6.5@csoun_5PQBehliRREIml1BuUB3jI:Csound.Sam
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Air.Envelope
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Air.ModArg
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Air.Seg
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Control.Gui
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Control.Overload.MidiInstr
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Control.Overload.Outs
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Control.Overload.SpecInstr
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.SigSpace
                         data-fix-0.0.3@dataf_GQW30SgTqCHK8c9qmpbLGb:Data.Fix
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Operators.Mapping
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.ByteString
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Cursored
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Delayed
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.ForeignPtr
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.HintInterleave
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.HintSmall
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Partitioned
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Unboxed
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Undefined
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Vector
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Slice
                         temporal-media-0.6.1@tempo_761SzttxqBd2KI5nkyi311:Temporal.Media
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  csound-expression-typed-0.0.9.3@csoun_30GzPkbwq4z8DveTcfaCNZ:Csound.Typed.Control.Mix 5cb6a3a6537d0d17156e5b54f30fab70
import  -/  csound-expression-typed-0.0.9.3@csoun_30GzPkbwq4z8DveTcfaCNZ:Csound.Typed.Types.Prim 0c13091d36716d50683b84763fbec702
import  -/  csound-expression-typed-0.0.9.3@csoun_30GzPkbwq4z8DveTcfaCNZ:Csound.Typed.Types.Tuple d84d2bf4c272ea20cce66ea470f6cbf2
import  -/  csound-catalog-0.5.0@csoun_Ga4q4r4aWcOFbH21APDvuI:Csound.Catalog.Drum.Tr808 9f39a9cb146cad591a0c79cdcb62abfb
import  -/  csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Air.Patch eb5418aa7da668319d70a671979dd5dd
import  -/  csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Base 1391ff3f0a8b4387853e5c9b8c961f44
import  -/  data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD:Data.Default.Class e80ea6ea555665ab4b7ecc52cc0c771c
import  -/  formatting-6.2.2@forma_8aodSjW5eMN2lAZ4gdtUVi:Formatting 12022e37c2bced1eacf704906569e455
import  -/  formatting-6.2.2@forma_8aodSjW5eMN2lAZ4gdtUVi:Formatting.Formatters 4b7607d90305cac36e8393bbd3ade37b
import  -/  formatting-6.2.2@forma_8aodSjW5eMN2lAZ4gdtUVi:Formatting.Internal 1f66abda18c47de86214aae7d090768e
import  -/  random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL:System.Random d515be7800d601546639722a30f2fed4
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa 0d2b929203adefea46e338c8d5c0d0e3
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Base 812b961d0b9a43cec848ee4c7e0ccd95
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Eval cf223ddb0bba48ccf13f57fe10324a67
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Eval.Target 3c680c4c65321dd32881ebfc388d8281
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Index 5b7546ca101c4e6a6ea5d84a7dca03a5
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Operators.IndexSpace 70ec7a802add18980410f611d91db6be
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Operators.Mapping 18e3b03d104ed6d10371157ac47ae55b
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Operators.Traversal d8038ee6e197b52cd988988960e0feff
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Delayed bfd910a6132168c3cb9415767303456b
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Vector aa97ef99b2a616323348edcdab9fc269
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Slice 92d744efd156994f0805f523da75dd44
import  -/  temporal-media-0.6.1@tempo_761SzttxqBd2KI5nkyi311:Temporal.Class 572d807cf7b2f6a256dd7d03a92aeb9a
import  -/  temporal-media-0.6.1@tempo_761SzttxqBd2KI5nkyi311:Temporal.Media 4ddb10701bd892fe7d12a33f8d43c0e3
import  -/  temporal-music-notation-0.4.1@tempo_BNMZo3KS1hoKUMM4l1A0ov:Temporal.Music 7a43de7b9ddfa5e8f6d33f170dca5dc1
import  -/  temporal-music-notation-0.4.1@tempo_BNMZo3KS1hoKUMM4l1A0ov:Temporal.Music.Note 731355f2ad030956d7582897f4d26eee
import  -/  temporal-music-notation-0.4.1@tempo_BNMZo3KS1hoKUMM4l1A0ov:Temporal.Music.Pitch e34633f57c0c90be37599c30e94a2be0
import  -/  temporal-music-notation-0.4.1@tempo_BNMZo3KS1hoKUMM4l1A0ov:Temporal.Music.Scales 7cf02924bb9d3badb05a22788e371d95
import  -/  temporal-music-notation-0.4.1@tempo_BNMZo3KS1hoKUMM4l1A0ov:Temporal.Music.Score 8402d6d0a2be510a43f288dcc6420690
import  -/  temporal-music-notation-0.4.1@tempo_BNMZo3KS1hoKUMM4l1A0ov:Temporal.Music.Volume 6e8a0127e34f33beaa5ecb83a98fc27b
070bfecba988127a45c17509107dd1c2
  $s$fEq:. ::
    GHC.Classes.Eq
      (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
                  (Data.Array.Repa.Index.$fEq:._$c==
                     @ Data.Array.Repa.Index.Z
                     @ GHC.Types.Int
                     Data.Array.Repa.Index.$fEqZ
                     GHC.Classes.$fEqInt)
                  (Data.Array.Repa.Index.$fEq:._$c/=
                     @ Data.Array.Repa.Index.Z
                     @ GHC.Types.Int
                     Data.Array.Repa.Index.$fEqZ
                     GHC.Classes.$fEqInt) -}
2cfaa46527e5bb0b61e81bf78be40ac2
  $s$fEq:.2 ::
    GHC.Classes.Eq
      (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Lib.$s$fEq:. -}
1991c55eaf360783213917a49440e319
  $s$fShape:. ::
    Data.Array.Repa.Shape.Shape
      (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
                  Lib.$s$fEq:.2
                  (Data.Array.Repa.Index.$fShape:._$crank
                     @ Data.Array.Repa.Index.Z
                     Lib.$s$fEq:.2
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$czeroDim
                     @ Data.Array.Repa.Index.Z
                     Lib.$s$fEq:.2
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$cunitDim
                     @ Data.Array.Repa.Index.Z
                     Lib.$s$fEq:.2
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$cintersectDim
                     @ Data.Array.Repa.Index.Z
                     Lib.$s$fEq:.2
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$caddDim
                     @ Data.Array.Repa.Index.Z
                     Lib.$s$fEq:.2
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$csize
                     @ Data.Array.Repa.Index.Z
                     Lib.$s$fEq:.2
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$csizeIsValid
                     @ Data.Array.Repa.Index.Z
                     Lib.$s$fEq:.2
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$ctoIndex
                     @ Data.Array.Repa.Index.Z
                     Lib.$s$fEq:.2
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$cfromIndex
                     @ Data.Array.Repa.Index.Z
                     Lib.$s$fEq:.2
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$cinShapeRange
                     @ Data.Array.Repa.Index.Z
                     Lib.$s$fEq:.2
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$clistOfShape
                     @ Data.Array.Repa.Index.Z
                     Lib.$s$fEq:.2
                     Data.Array.Repa.Index.$fShapeZ)
                  (Data.Array.Repa.Index.$fShape:._$cshapeOfList
                     @ Data.Array.Repa.Index.Z
                     Lib.$s$fEq:.2
                     Data.Array.Repa.Index.$fShapeZ)
                  Lib.$s$fShape:._$s$fShape:._$cdeepSeq -}
9cdd05ce7d2bf76a08fc7033ca134389
  $s$fShape:._$caddDim ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*H,U(U))><S(SS),1*U(1*H,U(U))>m,
     Inline: INLINE[1] (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int
                   ds1 :: Data.Array.Repa.Index.Z
                          Data.Array.Repa.Index.:. GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. sh1 n1 ->
                 case ds1 of wild1 { Data.Array.Repa.Index.:. sh2 n2 ->
                 case n1 of wild2 { GHC.Types.I# x ->
                 case n2 of wild3 { GHC.Types.I# y ->
                 Data.Array.Repa.Index.:.
                   @ Data.Array.Repa.Index.Z
                   @ GHC.Types.Int
                   Data.Array.Repa.Index.Z
                   (GHC.Types.I# (GHC.Prim.+# x y)) } } } }) -}
c25b624c22206ffb2e765649491d8d25
  $s$fShape:._$cfromIndex ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> GHC.Types.Int
    -> Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*H,1*H)><S,1*U(U)>m,
     Inline: INLINE[1] (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int
                   n :: GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. ds1 d ->
                 case n of dt2 { GHC.Types.I# ipv ->
                 Data.Array.Repa.Index.:.
                   @ Data.Array.Repa.Index.Z
                   @ GHC.Types.Int
                   Data.Array.Repa.Index.Z
                   dt2 } }) -}
ac81fab42d4986821d8e3515eed350e2
  $s$fShape:._$cinShapeRange ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*H,U(U))><S(SS),1*U(1*H,U(U))><S(SS),1*U(1*H,U(U))>,
     Inline: INLINE[1] (sat-args=3),
     Unfolding: InlineRule (3, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int
                   ds1 :: Data.Array.Repa.Index.Z
                          Data.Array.Repa.Index.:. GHC.Types.Int
                   ds2 :: Data.Array.Repa.Index.Z
                          Data.Array.Repa.Index.:. GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. zs z ->
                 case ds1 of wild1 { Data.Array.Repa.Index.:. sh1 n1 ->
                 case ds2 of wild2 { Data.Array.Repa.Index.:. sh2 n2 ->
                 case n2 of wild3 { GHC.Types.I# x ->
                 case z of wild4 { GHC.Types.I# y ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# x y) of wild5 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case n1 of wild6 { GHC.Types.I# y1 ->
                      GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# x y1) } } } } } } }) -}
559c03874101796052b9b37cebc8bf71
  $s$fShape:._$cintersectDim ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*H,U(U))><S(SS),1*U(1*H,U(U))>m,
     Inline: INLINE[1] (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int
                   ds1 :: Data.Array.Repa.Index.Z
                          Data.Array.Repa.Index.:. GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. sh1 n1 ->
                 case ds1 of wild1 { Data.Array.Repa.Index.:. sh2 n2 ->
                 case n1 of wild2 { GHC.Types.I# x1 ->
                 case n2 of wild3 { GHC.Types.I# y1 ->
                 case case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# x1 y1) of wild4 {
                        GHC.Types.False -> wild3
                        GHC.Types.True -> wild2 } of dt2 { GHC.Types.I# ipv ->
                 Data.Array.Repa.Index.:.
                   @ Data.Array.Repa.Index.Z
                   @ GHC.Types.Int
                   Data.Array.Repa.Index.Z
                   dt2 } } } } }) -}
99d272e816d1818e1440a6d527c88e90
  $s$fShape:._$crank ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*H,1*H)>m,
     Inline: INLINE[1] (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. sh1 ds1 ->
                 GHC.Types.I# 1 }) -}
aaf0fb7a6b3d1a80165c1ea32b2aa7c4
  $s$fShape:._$csize ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*H,U(U))>,
     Inline: INLINE[1] (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. sh1 n -> n }) -}
7142e2a2ac5762f82cb2ea6b5997a600
  $s$fShape:._$csizeIsValid ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*H,U(U))>,
     Inline: INLINE[1] (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. sh1 n ->
                 case n of wild3 { GHC.Types.I# x1 ->
                 case GHC.Real.$fIntegralInt_$cdiv
                        GHC.Base.maxInt
                        (GHC.Types.I# 1) of wild4 { GHC.Types.I# y ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# x1 y) } } }) -}
ad2c82a19d02c961f6095a087b09961c
  $s$fShape:._$ctoIndex ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*H,1*H)><S(SS),1*U(1*H,U(U))>,
     Inline: INLINE[1] (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int
                   ds1 :: Data.Array.Repa.Index.Z
                          Data.Array.Repa.Index.:. GHC.Types.Int ->
                 case ds of wild { Data.Array.Repa.Index.:. sh1 sh2 ->
                 case ds1 of wild1 { Data.Array.Repa.Index.:. sh1' sh2' ->
                 sh2' } }) -}
936aabae69324cbad69f2842814bc2e0
  $s$fShape:._$s$fShape:._$cdeepSeq ::
    (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
    -> a -> a
  {- Arity: 2, HasNoCafRefs, Strictness: <S(SS),1*U(1*H,1*H)><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a4
                   ds :: Data.Array.Repa.Index.Z
                         Data.Array.Repa.Index.:. GHC.Types.Int
                   x :: a4 ->
                 case ds of wild { Data.Array.Repa.Index.:. sh1 n -> x }) -}
3e49665f8fa1664c2a4d187817084e04
  $sfromString11 ::
    (Temporal.Music.Pitch.Step -> [GHC.Types.Char])
    ~ (Temporal.Music.Pitch.Step -> [GHC.Types.Char])
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Temporal.Music.Pitch.Step -> [GHC.Types.Char])
                   @ (Temporal.Music.Pitch.Step -> [GHC.Types.Char])
                   @~ <Temporal.Music.Pitch.Step -> [GHC.Types.Char]>_N) -}
8f0e65990c7615d6d5529778e9638c01
  $sfromString15 ::
    (Temporal.Music.Pitch.Hz
     -> Temporal.Music.Pitch.Step -> [GHC.Types.Char])
    ~ (Temporal.Music.Pitch.Hz
       -> Temporal.Music.Pitch.Step -> [GHC.Types.Char])
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Temporal.Music.Pitch.Hz
                      -> Temporal.Music.Pitch.Step -> [GHC.Types.Char])
                   @ (Temporal.Music.Pitch.Hz
                      -> Temporal.Music.Pitch.Step -> [GHC.Types.Char])
                   @~ <Temporal.Music.Pitch.Hz
                       -> Temporal.Music.Pitch.Step -> [GHC.Types.Char]>_N) -}
f371e9866bd236a4decde7a1ecb18069
  $sfromString3 :: [GHC.Types.Char] ~ [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Char]
                   @~ <[GHC.Types.Char]>_N) -}
4b0941ebe54b250a31edb6dc1788bf72
  $sfromString7 ::
    (Temporal.Music.Pitch.Hz -> [GHC.Types.Char])
    ~ (Temporal.Music.Pitch.Hz -> [GHC.Types.Char])
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Temporal.Music.Pitch.Hz -> [GHC.Types.Char])
                   @ (Temporal.Music.Pitch.Hz -> [GHC.Types.Char])
                   @~ <Temporal.Music.Pitch.Hz -> [GHC.Types.Char]>_N) -}
ae3860cf767b42603bca7e4b9cfc5796
  $wgo ::
    System.Random.StdGen
    -> GHC.Prim.Int#
    -> [Temporal.Music.Score.Score
          (Temporal.Music.Note.Drum GHC.Prim.Any)]
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
59b33615b9f164c52dfc5df165a3cd04
  $winstr ::
    Csound.Typed.Types.Prim.D
    -> Csound.Typed.GlobalState.SE.SE
         (Csound.Typed.Types.Prim.Sig, Csound.Typed.Types.Prim.Sig)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ @ t ww :: Csound.Typed.Types.Prim.D ->
                 let {
                   a' :: Csound.Typed.Types.Prim.Sig
                   = case Csound.Typed.Types.Prim.$wsig ww of ww1 { (##) ww2 ->
                     Csound.Typed.Types.Prim.Sig ww2 }
                 } in
                 (\ eta :: Csound.Dynamic.Types.Dep.LocalHistory ->
                  let {
                    ma1 :: Csound.Typed.GlobalState.GE.GE
                             (Csound.Catalog.Drum.Tr808.TrSpec,
                              Csound.Dynamic.Types.Dep.LocalHistory)
                    = Csound.Catalog.Drum.Tr808.rim_ma
                        `cast`
                      (Trans
                           (Trans
                                (Csound.Typed.GlobalState.SE.NTCo:SE[0])
                                (Csound.Dynamic.Types.Dep.NTCo:DepT[0] <Csound.Typed.GlobalState.GE.GE>_N) <Csound.Catalog.Drum.Tr808.TrSpec>_N)
                           (Control.Monad.Trans.State.Strict.NTCo:StateT[0]
                                <Csound.Dynamic.Types.Dep.LocalHistory>_N
                                <Csound.Typed.GlobalState.GE.GE>_R
                                <Csound.Catalog.Drum.Tr808.TrSpec>_N))
                        eta
                  } in
                  (\ eta1 :: Csound.Typed.GlobalState.Options.Options ->
                   let {
                     m1 :: Control.Monad.Trans.State.Strict.StateT
                             Csound.Typed.GlobalState.GE.History
                             GHC.Types.IO
                             (Csound.Catalog.Drum.Tr808.TrSpec,
                              Csound.Dynamic.Types.Dep.LocalHistory)
                     = ma1
                         `cast`
                       (Trans
                            (Csound.Typed.GlobalState.GE.NTCo:GE[0] <(Csound.Catalog.Drum.Tr808.TrSpec,
                                                                      Csound.Dynamic.Types.Dep.LocalHistory)>_N)
                            (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                 <Csound.Typed.GlobalState.Options.Options>_R
                                 <Control.Monad.Trans.State.Strict.StateT
                                    Csound.Typed.GlobalState.GE.History GHC.Types.IO>_R
                                 <(Csound.Catalog.Drum.Tr808.TrSpec,
                                   Csound.Dynamic.Types.Dep.LocalHistory)>_N))
                         eta1
                   } in
                   (\ eta2 :: Csound.Typed.GlobalState.GE.History
                      s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                    case (m1
                            `cast`
                          (Control.Monad.Trans.State.Strict.NTCo:StateT[0]
                               <Csound.Typed.GlobalState.GE.History>_N
                               <GHC.Types.IO>_R
                               <(Csound.Catalog.Drum.Tr808.TrSpec,
                                 Csound.Dynamic.Types.Dep.LocalHistory)>_N)
                            eta2)
                           `cast`
                         (GHC.Types.NTCo:IO[0]
                              <((Csound.Catalog.Drum.Tr808.TrSpec,
                                 Csound.Dynamic.Types.Dep.LocalHistory),
                                Csound.Typed.GlobalState.GE.History)>_R)
                           s of ds1 { (#,#) ipv ipv1 ->
                    case ipv1 of wild { (,) a116 s' ->
                    case a116 of wild1 { (,) a117 s'1 ->
                    case Csound.Catalog.Drum.Tr808.rim3
                           a117
                           s'1
                           eta1
                           s'
                           ipv of ds2 { (#,#) ipv2 ipv3 ->
                    case ipv3 of wild2 { (,) a38 s'2 ->
                    case a38 of wild3 { (,) a18 s'3 ->
                    case (((Csound.Catalog.Drum.Tr808.rim_ma
                              `cast`
                            (Trans
                                 (Trans
                                      (Csound.Typed.GlobalState.SE.NTCo:SE[0])
                                      (Csound.Dynamic.Types.Dep.NTCo:DepT[0] <Csound.Typed.GlobalState.GE.GE>_N) <Csound.Catalog.Drum.Tr808.TrSpec>_N)
                                 (Control.Monad.Trans.State.Strict.NTCo:StateT[0]
                                      <Csound.Dynamic.Types.Dep.LocalHistory>_N
                                      <Csound.Typed.GlobalState.GE.GE>_R
                                      <Csound.Catalog.Drum.Tr808.TrSpec>_N))
                              s'3)
                             `cast`
                           (Trans
                                (Csound.Typed.GlobalState.GE.NTCo:GE[0] <(Csound.Catalog.Drum.Tr808.TrSpec,
                                                                          Csound.Dynamic.Types.Dep.LocalHistory)>_N)
                                (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                     <Csound.Typed.GlobalState.Options.Options>_R
                                     <Control.Monad.Trans.State.Strict.StateT
                                        Csound.Typed.GlobalState.GE.History GHC.Types.IO>_R
                                     <(Csound.Catalog.Drum.Tr808.TrSpec,
                                       Csound.Dynamic.Types.Dep.LocalHistory)>_N))
                             eta1)
                            `cast`
                          (Control.Monad.Trans.State.Strict.NTCo:StateT[0]
                               <Csound.Typed.GlobalState.GE.History>_N
                               <GHC.Types.IO>_R
                               <(Csound.Catalog.Drum.Tr808.TrSpec,
                                 Csound.Dynamic.Types.Dep.LocalHistory)>_N)
                            s'2)
                           `cast`
                         (GHC.Types.NTCo:IO[0]
                              <((Csound.Catalog.Drum.Tr808.TrSpec,
                                 Csound.Dynamic.Types.Dep.LocalHistory),
                                Csound.Typed.GlobalState.GE.History)>_R)
                           ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                    case ipv5 of wild4 { (,) a4 s'4 ->
                    case a4 of wild5 { (,) a5 s'5 ->
                    case Csound.Catalog.Drum.Tr808.rim3
                           a5
                           s'5
                           eta1
                           s'4
                           ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                    case ipv7 of wild6 { (,) a6 s'6 ->
                    case a6 of wild7 { (,) a7 s'7 ->
                    (# ipv6,
                       (((Csound.Typed.Types.Prim.$fNumSig_$c* a' a18,
                          Csound.Typed.Types.Prim.$fNumSig_$c* a' a7),
                         s'7),
                        s'6) #) } } } } } } } } } } } })
                     `cast`
                   (Trans
                        (<Csound.Typed.GlobalState.GE.History>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       <(((Csound.Typed.Types.Prim.Sig,
                                           Csound.Typed.Types.Prim.Sig),
                                          Csound.Dynamic.Types.Dep.LocalHistory),
                                         Csound.Typed.GlobalState.GE.History)>_R))
                        (Sym (Control.Monad.Trans.State.Strict.NTCo:StateT[0]
                                  <Csound.Typed.GlobalState.GE.History>_N
                                  <GHC.Types.IO>_R
                                  <((Csound.Typed.Types.Prim.Sig, Csound.Typed.Types.Prim.Sig),
                                    Csound.Dynamic.Types.Dep.LocalHistory)>_N))))
                    `cast`
                  (Trans
                       (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                 <Csound.Typed.GlobalState.Options.Options>_R
                                 <Control.Monad.Trans.State.Strict.StateT
                                    Csound.Typed.GlobalState.GE.History GHC.Types.IO>_R
                                 <((Csound.Typed.Types.Prim.Sig, Csound.Typed.Types.Prim.Sig),
                                   Csound.Dynamic.Types.Dep.LocalHistory)>_N))
                       (Sym (Csound.Typed.GlobalState.GE.NTCo:GE[0]) <((Csound.Typed.Types.Prim.Sig,
                                                                        Csound.Typed.Types.Prim.Sig),
                                                                       Csound.Dynamic.Types.Dep.LocalHistory)>_N)))
                   `cast`
                 (Trans
                      (Sym (Control.Monad.Trans.State.Strict.NTCo:StateT[0]
                                <Csound.Dynamic.Types.Dep.LocalHistory>_N
                                <Csound.Typed.GlobalState.GE.GE>_R
                                <(Csound.Typed.Types.Prim.Sig, Csound.Typed.Types.Prim.Sig)>_N))
                      (Trans
                           (Sym (Csound.Dynamic.Types.Dep.NTCo:DepT[0]) <Csound.Typed.GlobalState.GE.GE>_N)
                           (Sym (Csound.Typed.GlobalState.SE.NTCo:SE[0])) <(Csound.Typed.Types.Prim.Sig,
                                                                            Csound.Typed.Types.Prim.Sig)>_N))) -}
6c6d9c10a7c33a592ab3fdeae478bcbc
  calibrationStimulus ::
    System.Random.StdGen -> Csound.Typed.Types.Tuple.Sig2
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ x :: System.Random.StdGen ->
                 Csound.Typed.Control.Mix.mix
                   @ Csound.Typed.Types.Tuple.Sig2
                   Csound.Typed.Types.Tuple.$fSigs(,)0
                   (case Csound.Air.Patch.$watSco
                           @ Csound.Typed.Types.Tuple.Sig2
                           Csound.SigSpace.$fAt(,)(,)(,)_$cmapSig
                             `cast`
                           (Sym (Csound.SigSpace.NTCo:SigSpace[0]
                                     <(Csound.Typed.Types.Prim.Sig,
                                       Csound.Typed.Types.Prim.Sig)>_N))
                           Csound.Typed.Types.Tuple.$fSigs(,)0
                           Lib.patch
                           (case Temporal.Music.Score.mel
                                   @ (Temporal.Music.Note.Drum GHC.Prim.Any)
                                   (Lib.$wgo x 40) of ww { Temporal.Media.Track ww1 ww2 ->
                            case Temporal.Media.$w$cmconcat
                                   @ Csound.Typed.Types.Prim.D
                                   @ (Temporal.Music.Note.Drum GHC.Prim.Any)
                                   Csound.Typed.Types.Prim.$fNumD
                                   Csound.Typed.Types.Prim.$fIfBD
                                   Csound.Typed.Types.Prim.$fOrdBD
                                   (GHC.Base.map
                                      @ (Temporal.Media.Event
                                           GHC.Types.Double (Temporal.Music.Note.Drum GHC.Prim.Any))
                                      @ (Temporal.Media.Track
                                           Csound.Typed.Types.Prim.D
                                           (Temporal.Music.Note.Drum GHC.Prim.Any))
                                      (Lib.calibrationStimulus_f
                                         @ (Temporal.Music.Note.Drum GHC.Prim.Any))
                                      (Temporal.Media.$wrender
                                         @ Temporal.Music.Score.Dur
                                         @ (Temporal.Music.Note.Drum GHC.Prim.Any)
                                         GHC.Float.$fNumDouble
                                         ww2)) of ww4 { (#,#) ww5 ww6 ->
                            Temporal.Media.Track
                              @ Csound.Typed.Types.Prim.D
                              @ (Csound.Air.Patch.CsdNote Csound.Typed.Types.Prim.D)
                              ww5
                              (Temporal.Media.$fFunctorTList_$cfmap
                                 @ Csound.Typed.Types.Prim.D
                                 @ (Temporal.Music.Note.Drum GHC.Prim.Any)
                                 @ (Csound.Air.Patch.CsdNote Csound.Typed.Types.Prim.D)
                                 (Lib.csdDrum @ GHC.Prim.Any)
                                 ww6) } }) of ww { (#,#) ww1 ww2 ->
                    Temporal.Media.Track
                      @ Csound.Typed.Types.Prim.D
                      @ (Csound.Typed.Control.Mix.Mix Csound.Typed.Types.Tuple.Sig2)
                      ww1
                      ww2 })) -}
d6ebfd3172f049f99100d6256a678418
  calibrationStimulus1 :: Csound.Typed.Types.Prim.D
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Csound.Typed.Types.Prim.PrimD
                   Lib.calibrationStimulus2) -}
aba4f3733187ef519e5f060434dc46f7
  calibrationStimulus2 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.0) -}
cec6964736b02a9c0fe219b6fe9eb957
  calibrationStimulus_f ::
    Temporal.Media.Event GHC.Types.Double a
    -> Temporal.Media.Track Csound.Typed.Types.Prim.D a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U(U),U(U),U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a4 w :: Temporal.Media.Event GHC.Types.Double a4 ->
                 case w of ww { Temporal.Media.Event ww1 ww2 ww3 ->
                 Temporal.Media.Track
                   @ Csound.Typed.Types.Prim.D
                   @ a4
                   (Csound.Typed.Types.Prim.PrimD (GHC.Float.plusDouble ww1 ww2))
                   (Temporal.Media.TFun
                      @ Csound.Typed.Types.Prim.D
                      @ a4
                      (Temporal.Media.Tfm
                         @ Csound.Typed.Types.Prim.D
                         (Csound.Typed.Types.Prim.PrimD ww2)
                         (Csound.Typed.Types.Prim.PrimD ww1))
                      (Temporal.Media.Single @ Csound.Typed.Types.Prim.D @ a4 ww3)) }) -}
3052e0b102a2894a20c46b6484e39a83
  calibrationStimulus_instr ::
    (Csound.Typed.Types.Prim.D, t)
    -> Csound.Typed.GlobalState.SE.SE
         (Csound.Typed.Types.Prim.Sig, Csound.Typed.Types.Prim.Sig)
  {- Arity: 1, Strictness: <S,1*U(1*U,A)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ t w :: (Csound.Typed.Types.Prim.D, t) ->
                 case w of ww { (,) ww1 ww2 -> Lib.$winstr @ t ww1 }) -}
42aba96e15ab54fb628fec2e7fadae9d
  csdDrum ::
    Temporal.Music.Note.Drum a
    -> Csound.Air.Patch.CsdNote Csound.Typed.Types.Prim.D
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U(1*U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a4 d :: Temporal.Music.Note.Drum a4 ->
                 (Csound.Typed.Types.Prim.PrimD
                    (case Temporal.Music.Volume.$wabsVolume
                            @ Temporal.Music.Volume.Volume
                            Temporal.Music.Volume.$fVolumeLikeVolume
                            (case d of wild { Temporal.Music.Note.Drum ds1 ds2 ->
                             ds1 }) of ww { DEFAULT ->
                     GHC.Types.D# ww }),
                  Lib.calibrationStimulus1)) -}
d2ba2467d64a9ae3a863d7b96a9b88ce
  patch :: Csound.Air.Patch.Patch2
  {- Strictness: m,
     Unfolding: (Csound.Air.Patch.Patch
                   @ Csound.Typed.Types.Prim.D
                   @ Csound.Typed.Types.Tuple.Sig2
                   (Lib.calibrationStimulus_instr @ Csound.Typed.Types.Prim.D)
                   (GHC.Types.[]
                      @ (Csound.Air.Patch.FxSpec Csound.Typed.Types.Tuple.Sig2))) -}
be59d429a5afa5535aa4d4d63d67e824
  probeSteps ::
    Data.Array.Repa.Base.Array
      Data.Array.Repa.Repr.Vector.V
      Data.Array.Repa.Index.DIM1
      (GHC.Base.Maybe Temporal.Music.Pitch.Step)
  {- Unfolding: (Data.Array.Repa.Eval.Target.fromList
                   @ (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
                   @ (GHC.Base.Maybe Temporal.Music.Pitch.Step)
                   @ Data.Array.Repa.Repr.Vector.V
                   Lib.$s$fShape:.
                   (Data.Array.Repa.Repr.Vector.$fTargetVe
                      @ (GHC.Base.Maybe Temporal.Music.Pitch.Step))
                   Lib.stimulusChords71
                   Lib.stimulusChords52) -}
a96e0c6bb9a8f7e6e31d5834bda55328
  scaleBases ::
    Data.Array.Repa.Base.Array
      Data.Array.Repa.Repr.Vector.V
      Data.Array.Repa.Index.DIM1
      Temporal.Music.Pitch.Hz
  {- Unfolding: (Data.Array.Repa.Eval.Target.fromList
                   @ (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
                   @ Temporal.Music.Pitch.Hz
                   @ Data.Array.Repa.Repr.Vector.V
                   Lib.$s$fShape:.
                   (Data.Array.Repa.Repr.Vector.$fTargetVe @ GHC.Types.Double)
                   Lib.stimulusChords21
                   Lib.stimulusChords10) -}
6b2a5b9598d3cf73a4a86497c70d2101
  scales ::
    Data.Array.Repa.Base.Array
      Data.Array.Repa.Repr.Delayed.D
      Data.Array.Repa.Index.DIM2
      Temporal.Music.Pitch.Scale
  {- Unfolding: (case (Data.Array.Repa.Eval.Target.fromList
                         @ Data.Array.Repa.Index.DIM1
                         @ (Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale)
                         @ Data.Array.Repa.Repr.Vector.V
                         Lib.$s$fShape:.
                         (Data.Array.Repa.Repr.Vector.$fTargetVe
                            @ (Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale))
                         Lib.stimulusChords48
                         Lib.stimulusChords23)
                        `cast`
                      (Sub (Data.Array.Repa.Repr.Vector.TFCo:R:ArrayVsha[0]
                                <Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale>_N
                                <Data.Array.Repa.Index.DIM1>_N)) of wild { Data.Array.Repa.Repr.Vector.AVector sh1 dt2 dt3 dt4 ->
                 case sh1 of wild1 { Data.Array.Repa.Index.:. ds ng ->
                 let {
                   lvl39 :: GHC.Types.Int
                   = Data.Vector.Generic.length
                       @ Data.Vector.Vector
                       @ (Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale)
                       Lib.stimulusChords22
                       (Data.Vector.Vector
                          @ (Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale)
                          dt2
                          dt3
                          dt4)
                 } in
                 case Lib.scaleBases
                        `cast`
                      (Sub (Data.Array.Repa.Repr.Vector.TFCo:R:ArrayVsha[0]
                                <GHC.Types.Double>_N
                                <Data.Array.Repa.Index.DIM1>_N)) of wild2 { Data.Array.Repa.Repr.Vector.AVector sh2 dt5 dt6 dt7 ->
                 case sh2 of wild3 { Data.Array.Repa.Index.:. ds1 nb ->
                 let {
                   lvl40 :: GHC.Types.Int
                   = Data.Vector.Generic.length
                       @ Data.Vector.Vector
                       @ GHC.Types.Double
                       Temporal.Music.Pitch.$s$fEqVector_$c==_$s$fVectorVectora
                       (Data.Vector.Vector @ GHC.Types.Double dt5 dt6 dt7)
                 } in
                 (Data.Array.Repa.Repr.Delayed.ADelayed
                    @ Temporal.Music.Pitch.Scale
                    @ Data.Array.Repa.Index.DIM2
                    (Data.Array.Repa.Index.:.
                       @ (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
                       @ GHC.Types.Int
                       (Data.Array.Repa.Index.:.
                          @ Data.Array.Repa.Index.Z
                          @ GHC.Types.Int
                          Data.Array.Repa.Index.Z
                          ng)
                       nb)
                    (\ ds2 :: (Data.Array.Repa.Index.Z
                               Data.Array.Repa.Index.:. GHC.Types.Int)
                              Data.Array.Repa.Index.:. GHC.Types.Int ->
                     case ds2 of wild4 { Data.Array.Repa.Index.:. ds3 ib ->
                     case ds3 of wild5 { Data.Array.Repa.Index.:. ds4 ig ->
                     case ig of wild6 { GHC.Types.I# y1 ->
                     case ib of wild7 { GHC.Types.I# y2 ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# y1 0) of wild8 {
                       GHC.Types.False
                       -> case lvl39 of wild9 { GHC.Types.I# n# ->
                          case Lib.stimulusChords9 n# y1
                          ret_ty Temporal.Music.Pitch.Scale
                          of {} }
                       GHC.Types.True
                       -> case lvl39 of wild9 { GHC.Types.I# y ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<# y1 y) of wild10 {
                            GHC.Types.False
                            -> case Lib.stimulusChords9 y y1
                               ret_ty Temporal.Music.Pitch.Scale
                               of {}
                            GHC.Types.True
                            -> case GHC.Prim.indexArray#
                                      @ (Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale)
                                      dt4
                                      (GHC.Prim.+# dt2 y1) of ds5 { (##) ipv ->
                               ipv
                                 (case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.>=# y2 0) of wild11 {
                                    GHC.Types.False
                                    -> case lvl40 of wild12 { GHC.Types.I# n# ->
                                       Lib.stimulusChords8 n# y2 }
                                    GHC.Types.True
                                    -> case lvl40 of wild12 { GHC.Types.I# y3 ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# y2 y3) of wild13 {
                                         GHC.Types.False -> Lib.stimulusChords8 y3 y2
                                         GHC.Types.True
                                         -> case GHC.Prim.indexArray#
                                                   @ GHC.Types.Double
                                                   dt7
                                                   (GHC.Prim.+# dt5 y2) of ds6 { (##) ipv1 ->
                                            ipv1 } } } }) } } } } } } } }))
                   `cast`
                 (Sub (Sym (Data.Array.Repa.Repr.Delayed.TFCo:R:ArrayDsha[0]
                                <Temporal.Music.Pitch.Scale>_N
                                <Data.Array.Repa.Index.DIM2>_N))) } } } }) -}
62be405e1cf13600591ea22a91a1ebff
  stimuli ::
    Data.Array.Repa.Base.Array
      Data.Array.Repa.Repr.Delayed.D
      Data.Array.Repa.Index.DIM3
      Csound.Typed.Types.Tuple.Sig2
  {- Unfolding: (case (Lib.stimulusChords @ GHC.Prim.Any)
                        `cast`
                      (Sub (Data.Array.Repa.Repr.Delayed.TFCo:R:ArrayDsha[0]
                                <Temporal.Media.Track
                                   GHC.Types.Double (Temporal.Music.Note.Note GHC.Prim.Any)>_N
                                <Data.Array.Repa.Index.DIM3>_N)) of wild { Data.Array.Repa.Repr.Delayed.ADelayed sh1 ds1 ->
                 case sh1 of wild1 { Data.Array.Repa.Index.:. ds2 d ->
                 case ds2 of wild2 { Data.Array.Repa.Index.:. ds3 d1 ->
                 case d1 of wild3 { GHC.Types.I# y ->
                 case d of wild4 { GHC.Types.I# y1 ->
                 (Data.Array.Repa.Repr.Delayed.ADelayed
                    @ Csound.Typed.Types.Tuple.Sig2
                    @ Data.Array.Repa.Index.DIM3
                    wild1
                    (\ x :: Data.Array.Repa.Index.DIM3 ->
                     Csound.Typed.Control.Mix.mix
                       @ Csound.Typed.Types.Tuple.Sig2
                       Csound.Typed.Types.Tuple.$fSigs(,)0
                       (case Csound.Air.Patch.$watSco
                               @ Csound.Typed.Types.Tuple.Sig2
                               Csound.SigSpace.$fAt(,)(,)(,)_$cmapSig
                                 `cast`
                               (Sym (Csound.SigSpace.NTCo:SigSpace[0]
                                         <(Csound.Typed.Types.Prim.Sig,
                                           Csound.Typed.Types.Prim.Sig)>_N))
                               Csound.Typed.Types.Tuple.$fSigs(,)0
                               Lib.patch
                               (case ds1
                                       (case x of wild5 { Data.Array.Repa.Index.:. sh1' sh2' ->
                                        case sh1' of wild6 { Data.Array.Repa.Index.:. sh1'1 sh2'1 ->
                                        case sh1'1 of wild7 { Data.Array.Repa.Index.:. sh1'2 sh2'2 ->
                                        case sh2'2 of wild8 { GHC.Types.I# y2 ->
                                        case sh2'1 of wild9 { GHC.Types.I# y3 ->
                                        case sh2' of wild10 { GHC.Types.I# y4 ->
                                        let {
                                          x1 :: GHC.Prim.Int#
                                          = GHC.Prim.+#
                                              (GHC.Prim.*# (GHC.Prim.+# (GHC.Prim.*# y2 y) y3) y1)
                                              y4
                                        } in
                                        case GHC.Prim.quotInt# x1 y1 of wild11 { DEFAULT ->
                                        case GHC.Prim.quotInt# wild11 y of wild12 { DEFAULT ->
                                        case GHC.Prim.remInt# wild11 y of wild13 { DEFAULT ->
                                        case GHC.Prim.remInt# x1 y1 of wild14 { DEFAULT ->
                                        let {
                                          x2 :: GHC.Prim.Int#
                                          = GHC.Prim.+#
                                              (GHC.Prim.*#
                                                 (GHC.Prim.+# (GHC.Prim.*# wild12 y) wild13)
                                                 y1)
                                              wild14
                                        } in
                                        case GHC.Prim.quotInt# x2 y1 of wild15 { DEFAULT ->
                                        case GHC.Prim.quotInt# wild15 y of wild16 { DEFAULT ->
                                        case GHC.Prim.remInt# wild15 y of wild17 { DEFAULT ->
                                        case GHC.Prim.remInt# x2 y1 of wild18 { DEFAULT ->
                                        Data.Array.Repa.Index.:.
                                          @ ((Data.Array.Repa.Index.Z
                                              Data.Array.Repa.Index.:. GHC.Types.Int)
                                             Data.Array.Repa.Index.:. GHC.Types.Int)
                                          @ GHC.Types.Int
                                          (Data.Array.Repa.Index.:.
                                             @ (Data.Array.Repa.Index.Z
                                                Data.Array.Repa.Index.:. GHC.Types.Int)
                                             @ GHC.Types.Int
                                             (Data.Array.Repa.Index.:.
                                                @ Data.Array.Repa.Index.Z
                                                @ GHC.Types.Int
                                                Data.Array.Repa.Index.Z
                                                (GHC.Types.I# wild16))
                                             (GHC.Types.I# wild17))
                                          (GHC.Types.I#
                                             wild18) } } } } } } } } } } } } } }) of ww { Temporal.Media.Track ww1 ww2 ->
                                case (Temporal.Media.$fFoldableTList_$cfoldMap
                                        @ GHC.Types.Double
                                        @ (Temporal.Music.Score.Score
                                             (Temporal.Music.Note.Drum GHC.Prim.Any))
                                        @ (Data.Monoid.Dual
                                             (Data.Monoid.Endo
                                                (GHC.Base.Maybe
                                                   (Temporal.Music.Score.Score
                                                      (Temporal.Music.Note.Drum GHC.Prim.Any)))))
                                        (Temporal.Media.$fFoldableTList_$dMonoid
                                           @ (GHC.Base.Maybe
                                                (Temporal.Music.Score.Score
                                                   (Temporal.Music.Note.Drum GHC.Prim.Any))))
                                        Lib.stimuli1
                                          `cast`
                                        (<Temporal.Music.Score.Score
                                            (Temporal.Music.Note.Drum GHC.Prim.Any)>_R
                                         ->_R Sym (Data.Monoid.NTCo:Dual[0]
                                                       (Data.Monoid.NTCo:Endo[0]
                                                            <GHC.Base.Maybe
                                                               (Temporal.Music.Score.Score
                                                                  (Temporal.Music.Note.Drum
                                                                     GHC.Prim.Any))>_R)))
                                        (Lib.stimuli_go
                                           (Temporal.Media.$wrender
                                              @ GHC.Types.Double
                                              @ (Temporal.Music.Note.Note GHC.Prim.Any)
                                              GHC.Float.$fNumDouble
                                              ww2)))
                                       `cast`
                                     (Data.Monoid.NTCo:Dual[0]
                                          (Data.Monoid.NTCo:Endo[0]
                                               <GHC.Base.Maybe
                                                  (Temporal.Music.Score.Score
                                                     (Temporal.Music.Note.Drum GHC.Prim.Any))>_R))
                                       (GHC.Base.Nothing
                                          @ (Temporal.Music.Score.Score
                                               (Temporal.Music.Note.Drum GHC.Prim.Any))) of wild5 {
                                  GHC.Base.Nothing
                                  -> case Temporal.Media.$fFoldableTList8
                                     ret_ty (Csound.Typed.Control.Mix.Sco
                                               (Csound.Air.Patch.CsdNote Csound.Typed.Types.Prim.D))
                                     of {}
                                  GHC.Base.Just v
                                  -> case v of ww4 { Temporal.Media.Track ww5 ww6 ->
                                     case Temporal.Media.$w$cmconcat
                                            @ Csound.Typed.Types.Prim.D
                                            @ (Temporal.Music.Note.Drum GHC.Prim.Any)
                                            Csound.Typed.Types.Prim.$fNumD
                                            Csound.Typed.Types.Prim.$fIfBD
                                            Csound.Typed.Types.Prim.$fOrdBD
                                            (GHC.Base.map
                                               @ (Temporal.Media.Event
                                                    GHC.Types.Double
                                                    (Temporal.Music.Note.Drum GHC.Prim.Any))
                                               @ (Temporal.Media.Track
                                                    Csound.Typed.Types.Prim.D
                                                    (Temporal.Music.Note.Drum GHC.Prim.Any))
                                               (Lib.calibrationStimulus_f
                                                  @ (Temporal.Music.Note.Drum GHC.Prim.Any))
                                               (Temporal.Media.$wrender
                                                  @ Temporal.Music.Score.Dur
                                                  @ (Temporal.Music.Note.Drum GHC.Prim.Any)
                                                  GHC.Float.$fNumDouble
                                                  ww6)) of ww7 { (#,#) ww8 ww9 ->
                                     Temporal.Media.Track
                                       @ Csound.Typed.Types.Prim.D
                                       @ (Csound.Air.Patch.CsdNote Csound.Typed.Types.Prim.D)
                                       ww8
                                       (Temporal.Media.$fFunctorTList_$cfmap
                                          @ Csound.Typed.Types.Prim.D
                                          @ (Temporal.Music.Note.Drum GHC.Prim.Any)
                                          @ (Csound.Air.Patch.CsdNote Csound.Typed.Types.Prim.D)
                                          (Lib.csdDrum @ GHC.Prim.Any)
                                          ww9) } } } }) of ww { (#,#) ww1 ww2 ->
                        Temporal.Media.Track
                          @ Csound.Typed.Types.Prim.D
                          @ (Csound.Typed.Control.Mix.Mix Csound.Typed.Types.Tuple.Sig2)
                          ww1
                          ww2 })))
                   `cast`
                 (Sub (Sym (Data.Array.Repa.Repr.Delayed.TFCo:R:ArrayDsha[0]
                                <Csound.Typed.Types.Tuple.Sig2>_N
                                <Data.Array.Repa.Index.DIM3>_N))) } } } } }) -}
300082a96fb4ddd8406b30fbdf61c85f
  stimuli1 ::
    Temporal.Music.Score.Score (Temporal.Music.Note.Drum GHC.Prim.Any)
    -> GHC.Base.Maybe
         (Temporal.Music.Score.Score
            (Temporal.Music.Note.Drum GHC.Prim.Any))
    -> GHC.Base.Maybe
         (Temporal.Music.Score.Score
            (Temporal.Music.Note.Drum GHC.Prim.Any))
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ x :: Temporal.Music.Score.Score
                          (Temporal.Music.Note.Drum GHC.Prim.Any)
                   eta :: GHC.Base.Maybe
                            (Temporal.Music.Score.Score
                               (Temporal.Music.Note.Drum GHC.Prim.Any)) ->
                 GHC.Base.Just
                   @ (Temporal.Music.Score.Score
                        (Temporal.Music.Note.Drum GHC.Prim.Any))
                   (case eta of wild {
                      GHC.Base.Nothing -> x
                      GHC.Base.Just x1
                      -> Temporal.Music.Score.=:=
                           @ (Temporal.Music.Note.Drum GHC.Prim.Any)
                           x1
                           x })) -}
2d1bc674b1082aba4cfc941a60cae5c2
  stimuli_go ::
    [Temporal.Media.Event
       GHC.Types.Double (Temporal.Music.Note.Note GHC.Prim.Any)]
    -> Temporal.Media.TList
         GHC.Types.Double
         (Temporal.Music.Score.Score
            (Temporal.Music.Note.Drum GHC.Prim.Any))
  {- Arity: 1, Strictness: <S,1*U> -}
7fc6197ad72c6be0f381879b7066abd4
  stimulusChords ::
    Data.Array.Repa.Base.Array
      Data.Array.Repa.Repr.Delayed.D
      Data.Array.Repa.Index.DIM3
      (Temporal.Music.Score.Score (Temporal.Music.Note.Note a))
  {- Unfolding: (\ @ a4 ->
                 case (Lib.stimulusChords_arr @ a4)
                        `cast`
                      (Sub (Data.Array.Repa.Repr.Delayed.TFCo:R:ArrayDsha[0]
                                <[Temporal.Music.Score.Score (Temporal.Music.Note.Note a4)]>_N
                                <Data.Array.Repa.Slice.SliceShape
                                   (((Data.Array.Repa.Index.Z
                                      Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All)
                                     Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All)
                                    Data.Array.Repa.Index.:. GHC.Types.Int)>_N)) of wild { Data.Array.Repa.Repr.Delayed.ADelayed sh1 ds1 ->
                 case sh1
                        `cast`
                      (Trans
                           (Sub (Data.Array.Repa.Slice.TFCo:R:SliceShape:.0[0]
                                     <(Data.Array.Repa.Index.Z
                                       Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All)
                                      Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All>_N))
                           (Sub (Data.Array.Repa.Slice.TFCo:R:SliceShape:.[0]
                                     <Data.Array.Repa.Index.Z
                                      Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All>_N))) of wild1 { Data.Array.Repa.Index.:. ssl s ->
                 case ssl
                        `cast`
                      (Sub (Data.Array.Repa.Slice.TFCo:R:SliceShape:.[0]
                                <Data.Array.Repa.Index.Z>_N)) of wild2 { Data.Array.Repa.Index.:. ssl1 s1 ->
                 case s1 of wild3 { GHC.Types.I# x1 ->
                 case s of wild4 { GHC.Types.I# x2 ->
                 case (Lib.stimulusChords_arr2 @ a4)
                        `cast`
                      (Sub (Data.Array.Repa.Repr.Delayed.TFCo:R:ArrayDsha[0]
                                <GHC.Base.Maybe
                                   (Temporal.Music.Score.Score (Temporal.Music.Note.Note a4))>_N
                                <Data.Array.Repa.Index.DIM3>_N)) of wild5 { Data.Array.Repa.Repr.Delayed.ADelayed sh2 ds2 ->
                 case sh2 of wild6 { Data.Array.Repa.Index.:. sh3 n2 ->
                 case sh3 of wild7 { Data.Array.Repa.Index.:. sh4 n1 ->
                 case sh4 of wild8 { Data.Array.Repa.Index.:. sh5 n3 ->
                 case n3 of wild9 { GHC.Types.I# y1 ->
                 case n1 of wild10 { GHC.Types.I# y2 ->
                 case n2 of wild11 { GHC.Types.I# y3 ->
                 case case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# x1 y1) of wild12 {
                        GHC.Types.False -> wild9
                        GHC.Types.True -> wild3 } of dt2 { GHC.Types.I# ipv ->
                 case case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# x2 y2) of wild12 {
                        GHC.Types.False -> wild10
                        GHC.Types.True -> wild4 } of dt3 { GHC.Types.I# ipv1 ->
                 case case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# 10 y3) of wild12 {
                        GHC.Types.False -> wild11
                        GHC.Types.True
                        -> Lib.stimulusChords64 } of dt4 { GHC.Types.I# ipv2 ->
                 (Data.Array.Repa.Repr.Delayed.ADelayed
                    @ (Temporal.Music.Score.Score (Temporal.Music.Note.Note a4))
                    @ Data.Array.Repa.Index.DIM3
                    (Data.Array.Repa.Index.:.
                       @ ((Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
                          Data.Array.Repa.Index.:. GHC.Types.Int)
                       @ GHC.Types.Int
                       (Data.Array.Repa.Index.:.
                          @ (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
                          @ GHC.Types.Int
                          (Data.Array.Repa.Index.:.
                             @ Data.Array.Repa.Index.Z
                             @ GHC.Types.Int
                             Data.Array.Repa.Index.Z
                             dt2)
                          dt3)
                       dt4)
                    (Lib.stimulusChords1 @ a4))
                   `cast`
                 (Sub (Sym (Data.Array.Repa.Repr.Delayed.TFCo:R:ArrayDsha[0]
                                <Temporal.Music.Score.Score (Temporal.Music.Note.Note a4)>_N
                                <Data.Array.Repa.Index.DIM3>_N))) } } } } } } } } } } } } } } }) -}
5b0cc0224215d01efeb606e6020a3e13
  stimulusChords1 ::
    Data.Array.Repa.Index.DIM3
    -> Temporal.Music.Score.Score (Temporal.Music.Note.Note a)
  {- Arity: 1,
     Unfolding: (\ @ a4 ix :: Data.Array.Repa.Index.DIM3 ->
                 case (Lib.stimulusChords_arr2 @ a4)
                        `cast`
                      (Sub (Data.Array.Repa.Repr.Delayed.TFCo:R:ArrayDsha[0]
                                <GHC.Base.Maybe
                                   (Temporal.Music.Score.Score (Temporal.Music.Note.Note a4))>_N
                                <Data.Array.Repa.Index.DIM3>_N)) of wild { Data.Array.Repa.Repr.Delayed.ADelayed sh1 f ->
                 case sh1 of wild1 { Data.Array.Repa.Index.:. ds1 d ->
                 case ds1 of wild2 { Data.Array.Repa.Index.:. ds2 d1 ->
                 case d1 of wild3 { GHC.Types.I# y ->
                 case d of wild4 { GHC.Types.I# y1 ->
                 let {
                   cns :: [Temporal.Music.Score.Score (Temporal.Music.Note.Note a4)]
                   = case (Lib.stimulusChords_arr @ a4)
                            `cast`
                          (Sub (Data.Array.Repa.Repr.Delayed.TFCo:R:ArrayDsha[0]
                                    <[Temporal.Music.Score.Score (Temporal.Music.Note.Note a4)]>_N
                                    <Data.Array.Repa.Slice.SliceShape
                                       (((Data.Array.Repa.Index.Z
                                          Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All)
                                         Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All)
                                        Data.Array.Repa.Index.:. GHC.Types.Int)>_N)) of wild5 { Data.Array.Repa.Repr.Delayed.ADelayed sh2 ds3 ->
                     case sh2
                            `cast`
                          (Trans
                               (Sub (Data.Array.Repa.Slice.TFCo:R:SliceShape:.0[0]
                                         <(Data.Array.Repa.Index.Z
                                           Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All)
                                          Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All>_N))
                               (Sub (Data.Array.Repa.Slice.TFCo:R:SliceShape:.[0]
                                         <Data.Array.Repa.Index.Z
                                          Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All>_N))) of wild6 { Data.Array.Repa.Index.:. ssl s ->
                     case s of wild7 { GHC.Types.I# y2 ->
                     case (Lib.stimulusChords_arr @ a4)
                            `cast`
                          (Sub (Data.Array.Repa.Repr.Delayed.TFCo:R:ArrayDsha[0]
                                    <[Temporal.Music.Score.Score (Temporal.Music.Note.Note a4)]>_N
                                    <Data.Array.Repa.Slice.SliceShape
                                       (((Data.Array.Repa.Index.Z
                                          Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All)
                                         Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All)
                                        Data.Array.Repa.Index.:. GHC.Types.Int)>_N)) of wild8 { Data.Array.Repa.Repr.Delayed.ADelayed ds4 f1 ->
                     f1
                       (case ix of wild9 { Data.Array.Repa.Index.:. sh1' sh2' ->
                        case sh1' of wild10 { Data.Array.Repa.Index.:. sh1'1 sh2'1 ->
                        case sh1'1 of wild11 { Data.Array.Repa.Index.:. sh1'2 sh2'2 ->
                        case sh2'2 of wild12 { GHC.Types.I# y3 ->
                        case sh2'1 of wild13 { GHC.Types.I# y4 ->
                        case sh2' of wild14 { GHC.Types.I# y5 ->
                        let {
                          wild15 :: GHC.Prim.Int#
                          = GHC.Prim.quotInt#
                              (GHC.Prim.+#
                                 (GHC.Prim.*# (GHC.Prim.+# (GHC.Prim.*# y3 y2) y4) 10)
                                 y5)
                              10
                        } in
                        case GHC.Prim.quotInt# wild15 y2 of wild16 { DEFAULT ->
                        case GHC.Prim.remInt# wild15 y2 of wild17 { DEFAULT ->
                        (Data.Array.Repa.Index.:.
                           @ (Data.Array.Repa.Slice.SliceShape
                                (Data.Array.Repa.Index.Z
                                 Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All))
                           @ GHC.Types.Int
                           (Data.Array.Repa.Index.:.
                              @ (Data.Array.Repa.Slice.SliceShape Data.Array.Repa.Index.Z)
                              @ GHC.Types.Int
                              Data.Array.Repa.Index.Z
                                `cast`
                              (Sub (Sym (Data.Array.Repa.Slice.TFCo:R:SliceShapeZ[0])))
                              (GHC.Types.I# wild16))
                             `cast`
                           (Sub (Sym (Data.Array.Repa.Slice.TFCo:R:SliceShape:.[0]
                                          <Data.Array.Repa.Index.Z>_N)))
                           (GHC.Types.I# wild17))
                          `cast`
                        (Trans
                             (Sub (Sym (Data.Array.Repa.Slice.TFCo:R:SliceShape:.[0]
                                            <Data.Array.Repa.Index.Z
                                             Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All>_N)))
                             (Sub (Sym (Data.Array.Repa.Slice.TFCo:R:SliceShape:.0[0]
                                            <(Data.Array.Repa.Index.Z
                                              Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All)
                                             Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All>_N)))) } } } } } } } }) } } } }
                 } in
                 case f (case ix of wild5 { Data.Array.Repa.Index.:. sh1' sh2' ->
                         case sh1' of wild6 { Data.Array.Repa.Index.:. sh1'1 sh2'1 ->
                         case sh1'1 of wild7 { Data.Array.Repa.Index.:. sh1'2 sh2'2 ->
                         case sh2'2 of wild8 { GHC.Types.I# y2 ->
                         case sh2'1 of wild9 { GHC.Types.I# y3 ->
                         case sh2' of wild10 { GHC.Types.I# y4 ->
                         let {
                           x :: GHC.Prim.Int#
                           = GHC.Prim.+#
                               (GHC.Prim.*# (GHC.Prim.+# (GHC.Prim.*# y2 y) y3) y1)
                               y4
                         } in
                         case GHC.Prim.quotInt# x y1 of wild11 { DEFAULT ->
                         case GHC.Prim.quotInt# wild11 y of wild12 { DEFAULT ->
                         case GHC.Prim.remInt# wild11 y of wild13 { DEFAULT ->
                         case GHC.Prim.remInt# x y1 of wild14 { DEFAULT ->
                         Data.Array.Repa.Index.:.
                           @ ((Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
                              Data.Array.Repa.Index.:. GHC.Types.Int)
                           @ GHC.Types.Int
                           (Data.Array.Repa.Index.:.
                              @ (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
                              @ GHC.Types.Int
                              (Data.Array.Repa.Index.:.
                                 @ Data.Array.Repa.Index.Z
                                 @ GHC.Types.Int
                                 Data.Array.Repa.Index.Z
                                 (GHC.Types.I# wild12))
                              (GHC.Types.I# wild13))
                           (GHC.Types.I# wild14) } } } } } } } } } }) of wild5 {
                   GHC.Base.Nothing
                   -> Temporal.Music.Score.har @ (Temporal.Music.Note.Note a4) cns
                   GHC.Base.Just pn
                   -> case Temporal.Media.$w$cmconcat
                             @ GHC.Types.Double
                             @ (Temporal.Music.Note.Note a4)
                             GHC.Float.$fNumDouble
                             Data.Boolean.$fIfBDouble
                             Data.Boolean.$fOrdBDouble
                             (GHC.Types.:
                                @ (Temporal.Music.Score.Score (Temporal.Music.Note.Note a4))
                                pn
                                cns) of ww { (#,#) ww1 ww2 ->
                      Temporal.Media.Track
                        @ GHC.Types.Double
                        @ (Temporal.Music.Note.Note a4)
                        ww1
                        ww2 } } } } } } }) -}
b0e9874cd489b55d278e9c1f7e70fbbe
  stimulusChords10 :: [GHC.Types.Double]
  {- Unfolding: (GHC.Base.map
                   @ GHC.Types.Double
                   @ GHC.Types.Double
                   Lib.stimulusChords19
                   Lib.stimulusChords11) -}
3fdfe838b3ec6eaf18c77456b711d97c
  stimulusChords11 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.stimulusChords18
                   Lib.stimulusChords12) -}
4777251876da51024227042c8c83d3e4
  stimulusChords12 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.stimulusChords17
                   Lib.stimulusChords13) -}
bd8d6fdb93f3123c46bb6e08485f20b9
  stimulusChords13 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.stimulusChords16
                   Lib.stimulusChords14) -}
eb3a834357257f9845f0427731f4502b
  stimulusChords14 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Lib.stimulusChords15
                   (GHC.Types.[] @ GHC.Types.Double)) -}
25ca8cb83d5d7580c0860d1c12ace593
  stimulusChords15 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 12.0) -}
80808bd56d59101eba9fd5442f0caaa8
  stimulusChords16 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 8.0) -}
1be09e9842d1bba80095686e31d14684
  stimulusChords17 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 4.0) -}
63c3041e3162dfd5cf1d0949a121732d
  stimulusChords18 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0) -}
95146bc7666325b5e71c31bcb91ffb0d
  stimulusChords19 :: GHC.Types.Double -> GHC.Types.Double
  {- Arity: 1,
     Unfolding: (\ w1 :: GHC.Types.Double ->
                 case Lib.stimulusChords20 of ww { Temporal.Music.Pitch.Scale ww1 ww2 ww3 ->
                 case ww1 of ww4 { GHC.Types.D# ww5 ->
                 case ww3 of ww6 { Data.Vector.Vector ww7 ww8 ww9 ->
                 case w1 of ww10 { GHC.Types.D# ww11 ->
                 case Temporal.Music.Pitch.$wscaleAt
                        ww5
                        ww2
                        ww7
                        ww8
                        ww9
                        ww11 of ww12 { DEFAULT ->
                 GHC.Types.D# ww12 } } } } }) -}
7b7e4b475e553dbeff3ccc318ff66abe
  stimulusChords2 :: [Temporal.Music.Pitch.Step]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Step
                   Lib.stimulusChords7
                   Lib.stimulusChords3) -}
3dfb1acb16cbb98578dacdcddbc41a23
  stimulusChords20 :: Temporal.Music.Pitch.Scale
  {- Unfolding: (case Temporal.Music.Pitch.$wfromIntervals
                        Temporal.Music.Scales.eqt6
                        Temporal.Music.Scales.eqt1
                        Lib.calibrationStimulus2 of ww { (#,,#) ww1 ww2 ww3 ->
                 Temporal.Music.Pitch.Scale ww1 ww2 ww3 }) -}
025622d701aab1be078054212f7df8bb
  stimulusChords21 ::
    Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (Data.Array.Repa.Index.:.
                   @ Data.Array.Repa.Index.Z
                   @ GHC.Types.Int
                   Data.Array.Repa.Index.Z
                   Lib.stimulusChords6) -}
702066f950f39ff32cc75958e34e9c5b
  stimulusChords22 ::
    Data.Vector.Generic.Base.Vector
      Data.Vector.Vector
      (Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale)
  {- Unfolding: (Data.Vector.$fVectorVectora
                   @ (Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale)
                   (Data.Vector.Mutable.$fMVectorMVectora
                      @ (Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale))
                     `cast`
                   (Data.Vector.Generic.Mutable.Base.MVector
                      (Sym (Data.Vector.TFCo:R:MutableVector[0]))
                      <Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale>_N)_R) -}
c927d6d9c0f80c9b708600885b534527
  stimulusChords23 ::
    [Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale]
  {- Unfolding: (GHC.Types.:
                   @ (Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale)
                   Temporal.Music.Scales.eqt
                   Lib.stimulusChords24) -}
ad409eaf0a67218e6e8c585b82f5eadf
  stimulusChords24 ::
    [Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale]
  {- Unfolding: (GHC.Types.:
                   @ (Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale)
                   Lib.stimulusChords25
                   (GHC.Types.[]
                      @ (Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale))) -}
00ec547b2934f7044aab4e6337a9bb05
  stimulusChords25 ::
    Temporal.Music.Pitch.Hz -> Temporal.Music.Pitch.Scale
  {- Arity: 1,
     Unfolding: (\ w2 :: Temporal.Music.Pitch.Hz ->
                 case Temporal.Music.Pitch.$wfromIntervals
                        Lib.stimulusChords_w
                        Lib.stimulusChords_w1
                        w2 of ww { (#,,#) ww1 ww2 ww3 ->
                 Temporal.Music.Pitch.Scale ww1 ww2 ww3 }) -}
016750ffc69db8437987281c3a9b3aad
  stimulusChords26 :: [Temporal.Music.Pitch.Interval]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Interval
                   Lib.stimulusChords47
                   Lib.stimulusChords27) -}
393c692082c15df07e249dbcf168062f
  stimulusChords27 :: [Temporal.Music.Pitch.Interval]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Interval
                   Lib.stimulusChords46
                   Lib.stimulusChords28) -}
7522fe7b0a045ba89ae3dfbcba795cb7
  stimulusChords28 :: [Temporal.Music.Pitch.Interval]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Interval
                   Lib.stimulusChords45
                   Lib.stimulusChords29) -}
a1b673de33b75369659b03425b9cc335
  stimulusChords29 :: [Temporal.Music.Pitch.Interval]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Interval
                   Lib.stimulusChords44
                   Lib.stimulusChords30) -}
b1a7c27840824e4dba645fe50605bf56
  stimulusChords3 :: [Temporal.Music.Pitch.Step]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Step
                   Lib.stimulusChords6
                   Lib.stimulusChords4) -}
1d0771d0fc1af4155e20d0d62fc1fcc0
  stimulusChords30 :: [Temporal.Music.Pitch.Interval]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Interval
                   Lib.stimulusChords43
                   Lib.stimulusChords31) -}
39f92f30703c9773c697c945cada87d6
  stimulusChords31 :: [Temporal.Music.Pitch.Interval]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Interval
                   Lib.stimulusChords42
                   Lib.stimulusChords32) -}
8ca87ec98c11f1469b39ecb6f97b7d02
  stimulusChords32 :: [Temporal.Music.Pitch.Interval]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Interval
                   Lib.stimulusChords41
                   Lib.stimulusChords33) -}
8d81f7efc4963f8e1abec7593cb797db
  stimulusChords33 :: [Temporal.Music.Pitch.Interval]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Interval
                   Lib.stimulusChords40
                   Lib.stimulusChords34) -}
321b2224f9c4223eb97a347d4aacc0de
  stimulusChords34 :: [Temporal.Music.Pitch.Interval]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Interval
                   Lib.stimulusChords39
                   Lib.stimulusChords35) -}
264da360e2bf59b423cdea3f7ba4066d
  stimulusChords35 :: [Temporal.Music.Pitch.Interval]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Interval
                   Lib.stimulusChords38
                   Lib.stimulusChords36) -}
12f93b090c2d7c999123be448e413141
  stimulusChords36 :: [Temporal.Music.Pitch.Interval]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Interval
                   Lib.stimulusChords37
                   (GHC.Types.[] @ Temporal.Music.Pitch.Interval)) -}
f08f46e64ffef180de26462c444885e7
  stimulusChords37 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.875) -}
29190b2835f8fb8b818187347006c101
  stimulusChords38 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.D# 1.7777777777777777) -}
54133ac3bc01c3833275b69bddbbf881
  stimulusChords39 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.D# 1.6666666666666667) -}
1c5ec9dc7a216f6c880456de0a5495c9
  stimulusChords4 :: [Temporal.Music.Pitch.Step]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Step
                   Lib.stimulusChords5
                   (GHC.Types.[] @ Temporal.Music.Pitch.Step)) -}
f7e109f0d94ba68a44dac06757f67bd3
  stimulusChords40 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.6) -}
2f838166d039ec73be1893a4806bd913
  stimulusChords41 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.5) -}
9dc943603d3a29ec88b263f975d7af5d
  stimulusChords42 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.D# 1.4166666666666667) -}
7a62f51a9cddc791ffe56168d689a3ba
  stimulusChords43 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.D# 1.3333333333333333) -}
57e41eb03f4b9539781fa6187cbafb47
  stimulusChords44 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.25) -}
32ca80ce75659a3fb0a9f42d135bd5cc
  stimulusChords45 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.2) -}
5dfd42fa238cc7c4261f101d73924fce
  stimulusChords46 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.125) -}
8309f5c990c25a43db48c997e21d3910
  stimulusChords47 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.D# 1.0666666666666667) -}
28a6e62b664f35f8e812cfcbc6073b3c
  stimulusChords48 ::
    Data.Array.Repa.Index.DIM0 Data.Array.Repa.Index.:. GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (Data.Array.Repa.Index.:.
                   @ Data.Array.Repa.Index.DIM0
                   @ GHC.Types.Int
                   Data.Array.Repa.Index.Z
                   Lib.stimulusChords49) -}
e597f76d476d107b2c66b22d677c65ea
  stimulusChords49 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 2) -}
582869fda0d694e313e122561dce5c09
  stimulusChords5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 7) -}
4156e49998b907c0438e77677c320d1c
  stimulusChords50 ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> GHC.Base.Maybe Temporal.Music.Pitch.Step
  {- Arity: 2, Strictness: <L,U><L,U>b -}
481d65b01614fa0ca05c7e028faf7ec5
  stimulusChords51 ::
    Data.Vector.Generic.Base.Vector
      Data.Vector.Vector (GHC.Base.Maybe Temporal.Music.Pitch.Step)
  {- Unfolding: (Data.Vector.$fVectorVectora
                   @ (GHC.Base.Maybe Temporal.Music.Pitch.Step)
                   (Data.Vector.Mutable.$fMVectorMVectora
                      @ (GHC.Base.Maybe Temporal.Music.Pitch.Step))
                     `cast`
                   (Data.Vector.Generic.Mutable.Base.MVector
                      (Sym (Data.Vector.TFCo:R:MutableVector[0]))
                      <GHC.Base.Maybe Temporal.Music.Pitch.Step>_N)_R) -}
2aa6e571a58d03d602607668f02c21ed
  stimulusChords52 :: [GHC.Base.Maybe Temporal.Music.Pitch.Step]
  {- Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Temporal.Music.Pitch.Step)
                   (GHC.Base.Nothing @ Temporal.Music.Pitch.Step)
                   Lib.stimulusChords53) -}
a7c40c6e8400f8723baa2bb99c7ee810
  stimulusChords53 :: [GHC.Base.Maybe Temporal.Music.Pitch.Step]
  {- Unfolding: (GHC.Base.map
                   @ GHC.Types.Int
                   @ (GHC.Base.Maybe Temporal.Music.Pitch.Step)
                   (GHC.Base.Just @ Temporal.Music.Pitch.Step)
                   Lib.stimulusChords54) -}
da96ebad4379c66ec831bda5edb6eafb
  stimulusChords54 :: [Temporal.Music.Pitch.Step]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Step
                   Lib.stimulusChords70
                   Lib.stimulusChords55) -}
01813da610af82d757581c4f1524df6c
  stimulusChords55 :: [Temporal.Music.Pitch.Step]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Step
                   Lib.stimulusChords49
                   Lib.stimulusChords56) -}
f0d058e221205f52f559e5a9bd9406dd
  stimulusChords56 :: [Temporal.Music.Pitch.Step]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Step
                   Lib.stimulusChords69
                   Lib.stimulusChords57) -}
e8027ede00e1a5f534a02a91b702c850
  stimulusChords57 :: [Temporal.Music.Pitch.Step]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Step
                   Lib.stimulusChords68
                   Lib.stimulusChords58) -}
1d4d61a3b363ba819a6ab9b0bc1af882
  stimulusChords58 :: [Temporal.Music.Pitch.Step]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Step
                   Lib.stimulusChords67
                   Lib.stimulusChords59) -}
bdd33bc2a148170257284a417ee7b832
  stimulusChords59 :: [Temporal.Music.Pitch.Step]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Step
                   Lib.stimulusChords66
                   Lib.stimulusChords60) -}
de800ccd4c2d1dcd9481b6b611010d7a
  stimulusChords6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4) -}
d922328f08fbb505f2d8728bb4d52412
  stimulusChords60 :: [Temporal.Music.Pitch.Step]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Step
                   Lib.stimulusChords65
                   Lib.stimulusChords61) -}
5292610aa690f8bd06499a1912610aed
  stimulusChords61 :: [Temporal.Music.Pitch.Step]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Step
                   Lib.stimulusChords64
                   Lib.stimulusChords62) -}
cb899a238b52b382efceb7f600d0f3fe
  stimulusChords62 :: [Temporal.Music.Pitch.Step]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Step
                   Lib.stimulusChords63
                   (GHC.Types.[] @ Temporal.Music.Pitch.Step)) -}
bd7af8dc0a3e1a9293a8039b1dfdb226
  stimulusChords63 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 11) -}
c1cd0945ba168533124915dd0198271c
  stimulusChords64 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 10) -}
ac17000b913e74595c41d4225232ecb9
  stimulusChords65 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 9) -}
86b2394e35fd4698b692c8cbec89d4d2
  stimulusChords66 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 8) -}
7d1f5723bf2624c587c0eb988feec7cb
  stimulusChords67 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 6) -}
4aa13bb4360b7a059f27a60198f1c89b
  stimulusChords68 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5) -}
bb8ed637afb60e2a0af575151b609dc5
  stimulusChords69 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3) -}
692993ad5e6ccd29ece6898953ff8f8e
  stimulusChords7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0) -}
fa0a57212106d8175368fe1ef7c253b3
  stimulusChords70 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1) -}
63f6cfd9bbd1553c8c233275597b795f
  stimulusChords71 ::
    Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int
  {- HasNoCafRefs,
     Unfolding: (Data.Array.Repa.Index.:.
                   @ Data.Array.Repa.Index.Z
                   @ GHC.Types.Int
                   Data.Array.Repa.Index.Z
                   Lib.stimulusChords64) -}
5ba597c3e2de4d07fc53b1d0c3d67ef6
  stimulusChords8 ::
    GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Types.Double
  {- Arity: 2, Strictness: <L,U><L,U>b -}
5d55dba96ca0f606665d45afcf0d2d5f
  stimulusChords9 ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Temporal.Music.Pitch.Hz
    -> Temporal.Music.Pitch.Scale
  {- Arity: 2, Strictness: <L,U><L,U>b -}
5a835d59d5d18dc688a10e78ba1bbd41
  stimulusChords_arr ::
    Data.Array.Repa.Base.Array
      Data.Array.Repa.Repr.Delayed.D
      (Data.Array.Repa.Slice.SliceShape
         (((Data.Array.Repa.Index.Z
            Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All)
           Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All)
          Data.Array.Repa.Index.:. GHC.Types.Int))
      [Temporal.Music.Score.Score (Temporal.Music.Note.Note a)]
  {- Unfolding: (\ @ a4 ->
                 case Lib.scales
                        `cast`
                      (Sub (Data.Array.Repa.Repr.Delayed.TFCo:R:ArrayDsha[0]
                                <Temporal.Music.Pitch.Scale>_N
                                <Data.Array.Repa.Index.DIM2>_N)) of wild { Data.Array.Repa.Repr.Delayed.ADelayed sh1 ds1 ->
                 case sh1 of wild1 { Data.Array.Repa.Index.:. ds2 d ->
                 case d of wild3 { GHC.Types.I# y ->
                 (Data.Array.Repa.Repr.Delayed.ADelayed
                    @ [Temporal.Music.Score.Score (Temporal.Music.Note.Note a4)]
                    @ Data.Array.Repa.Index.DIM2
                    wild1
                    (\ x :: Data.Array.Repa.Index.DIM2 ->
                     let {
                       s :: Temporal.Music.Pitch.Scale
                       = ds1
                           (case x of wild2 { Data.Array.Repa.Index.:. sh1' sh2' ->
                            case sh1' of wild4 { Data.Array.Repa.Index.:. sh1'1 sh2'1 ->
                            case sh2'1 of wild5 { GHC.Types.I# y1 ->
                            case sh2' of wild6 { GHC.Types.I# y2 ->
                            let {
                              x1 :: GHC.Prim.Int# = GHC.Prim.+# (GHC.Prim.*# y1 y) y2
                            } in
                            case GHC.Prim.quotInt# x1 y of wild7 { DEFAULT ->
                            case GHC.Prim.remInt# x1 y of wild8 { DEFAULT ->
                            Data.Array.Repa.Index.:.
                              @ (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
                              @ GHC.Types.Int
                              (Data.Array.Repa.Index.:.
                                 @ Data.Array.Repa.Index.Z
                                 @ GHC.Types.Int
                                 Data.Array.Repa.Index.Z
                                 (GHC.Types.I# wild7))
                              (GHC.Types.I# wild8) } } } } } })
                     } in
                     GHC.Base.map
                       @ GHC.Types.Int
                       @ (Temporal.Media.Track
                            GHC.Types.Double (Temporal.Music.Note.Note a4))
                       (\ x1 :: Temporal.Music.Pitch.Step ->
                        Temporal.Media.Track
                          @ GHC.Types.Double
                          @ (Temporal.Music.Note.Note a4)
                          Temporal.Music.Score.+:+_a1
                          (Temporal.Media.$fFunctorTList_$cfmap
                             @ GHC.Types.Double
                             @ (Temporal.Music.Note.Note a4)
                             @ (Temporal.Music.Note.Note a4)
                             (\ x2 :: Temporal.Music.Note.Note a4 ->
                              case x2 of wild2 { Temporal.Music.Note.Note ds ds3 ds4 ->
                              Temporal.Music.Note.Note
                                @ a4
                                ds
                                (case ds3 of wild4 { Temporal.Music.Pitch.Pitch ds5 ds6 ds7 ds8 ->
                                 Temporal.Music.Pitch.Pitch s ds6 ds7 ds8 })
                                ds4 })
                             (Temporal.Media.Single
                                @ GHC.Types.Double
                                @ (Temporal.Music.Note.Note a4)
                                (Temporal.Music.Note.Note
                                   @ a4
                                   Temporal.Music.Volume.$fDefaultVolume_$cdef
                                   (Temporal.Music.Pitch.Pitch
                                      Temporal.Music.Pitch.$fDefaultPitch_$cdef1
                                      Data.Default.Instances.Base.$fDefaultCDouble_$cdef1
                                      Data.Default.Instances.Base.$fDefaultInt_$cdef
                                      x1)
                                   (GHC.Base.Nothing @ a4)))))
                       Lib.stimulusChords2))
                   `cast`
                 (Trans
                      (Sub (Sym (Data.Array.Repa.Repr.Delayed.TFCo:R:ArrayDsha[0]
                                     <[Temporal.Music.Score.Score (Temporal.Music.Note.Note a4)]>_N
                                     <Data.Array.Repa.Index.DIM2>_N)))
                      (Data.Array.Repa.Base.Array
                         <Data.Array.Repa.Repr.Delayed.D>_N
                         (Trans
                              (Trans
                                   (Sym (Data.Array.Repa.Slice.TFCo:R:SliceShapeZ[0])
                                    Data.Array.Repa.Index.:. <GHC.Types.Int>_N)_N
                                   (Sym (Data.Array.Repa.Slice.TFCo:R:SliceShape:.[0]
                                             <Data.Array.Repa.Index.Z>_N))
                               Data.Array.Repa.Index.:. <GHC.Types.Int>_N)_N
                              (Trans
                                   (Sym (Data.Array.Repa.Slice.TFCo:R:SliceShape:.[0]
                                             <Data.Array.Repa.Index.Z
                                              Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All>_N))
                                   (Sym (Data.Array.Repa.Slice.TFCo:R:SliceShape:.0[0]
                                             <(Data.Array.Repa.Index.Z
                                               Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All)
                                              Data.Array.Repa.Index.:. Data.Array.Repa.Slice.All>_N))))
                         <[Temporal.Music.Score.Score
                             (Temporal.Music.Note.Note a4)]>_N)_R) } } }) -}
bab88528bb138e93be57d383f6fc3471
  stimulusChords_arr2 ::
    Data.Array.Repa.Base.Array
      Data.Array.Repa.Repr.Delayed.D
      Data.Array.Repa.Index.DIM3
      (GHC.Base.Maybe
         (Temporal.Music.Score.Score (Temporal.Music.Note.Note a)))
  {- Unfolding: (\ @ a4 ->
                 case Lib.scales
                        `cast`
                      (Sub (Data.Array.Repa.Repr.Delayed.TFCo:R:ArrayDsha[0]
                                <Temporal.Music.Pitch.Scale>_N
                                <Data.Array.Repa.Index.DIM2>_N)) of wild { Data.Array.Repa.Repr.Delayed.ADelayed sh1 ds1 ->
                 case sh1 of wild1 { Data.Array.Repa.Index.:. ds nb ->
                 case ds of wild2 { Data.Array.Repa.Index.:. ds2 ng ->
                 case Lib.probeSteps
                        `cast`
                      (Sub (Data.Array.Repa.Repr.Vector.TFCo:R:ArrayVsha[0]
                                <GHC.Base.Maybe Temporal.Music.Pitch.Step>_N
                                <Data.Array.Repa.Index.DIM1>_N)) of wild3 { Data.Array.Repa.Repr.Vector.AVector sh2 dt2 dt3 dt4 ->
                 case sh2 of wild4 { Data.Array.Repa.Index.:. ds3 nst ->
                 let {
                   lvl39 :: GHC.Types.Int
                   = Data.Vector.Generic.length
                       @ Data.Vector.Vector
                       @ (GHC.Base.Maybe Temporal.Music.Pitch.Step)
                       Lib.stimulusChords51
                       (Data.Vector.Vector
                          @ (GHC.Base.Maybe Temporal.Music.Pitch.Step)
                          dt2
                          dt3
                          dt4)
                 } in
                 (Data.Array.Repa.Repr.Delayed.ADelayed
                    @ (GHC.Base.Maybe
                         (Temporal.Music.Score.Score (Temporal.Music.Note.Note a4)))
                    @ Data.Array.Repa.Index.DIM3
                    (Data.Array.Repa.Index.:.
                       @ ((Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
                          Data.Array.Repa.Index.:. GHC.Types.Int)
                       @ GHC.Types.Int
                       (Data.Array.Repa.Index.:.
                          @ (Data.Array.Repa.Index.Z Data.Array.Repa.Index.:. GHC.Types.Int)
                          @ GHC.Types.Int
                          (Data.Array.Repa.Index.:.
                             @ Data.Array.Repa.Index.Z
                             @ GHC.Types.Int
                             Data.Array.Repa.Index.Z
                             ng)
                          nb)
                       nst)
                    (\ ds4 :: ((Data.Array.Repa.Index.Z
                                Data.Array.Repa.Index.:. GHC.Types.Int)
                               Data.Array.Repa.Index.:. GHC.Types.Int)
                              Data.Array.Repa.Index.:. GHC.Types.Int ->
                     case ds4 of wild5 { Data.Array.Repa.Index.:. ds5 ist ->
                     case ds5 of wild6 { Data.Array.Repa.Index.:. ds6 ib ->
                     case ds6 of wild7 { Data.Array.Repa.Index.:. ds7 ig ->
                     case ist of wild8 { GHC.Types.I# y1 ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# y1 0) of wild9 {
                       GHC.Types.False
                       -> case lvl39 of wild10 { GHC.Types.I# n# ->
                          case Lib.stimulusChords50 n# y1
                          ret_ty (GHC.Base.Maybe
                                    (Temporal.Music.Score.Score (Temporal.Music.Note.Note a4)))
                          of {} }
                       GHC.Types.True
                       -> case lvl39 of wild10 { GHC.Types.I# y ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<# y1 y) of wild11 {
                            GHC.Types.False
                            -> case Lib.stimulusChords50 y y1
                               ret_ty (GHC.Base.Maybe
                                         (Temporal.Music.Score.Score (Temporal.Music.Note.Note a4)))
                               of {}
                            GHC.Types.True
                            -> case GHC.Prim.indexArray#
                                      @ (GHC.Base.Maybe Temporal.Music.Pitch.Step)
                                      dt4
                                      (GHC.Prim.+# dt2 y1) of ds8 { (##) ipv ->
                               case ipv of wild12 {
                                 GHC.Base.Nothing
                                 -> GHC.Base.Nothing
                                      @ (Temporal.Music.Score.Score (Temporal.Music.Note.Note a4))
                                 GHC.Base.Just a5
                                 -> GHC.Base.Just
                                      @ (Temporal.Music.Score.Score (Temporal.Music.Note.Note a4))
                                      (Temporal.Media.Track
                                         @ GHC.Types.Double
                                         @ (Temporal.Music.Note.Note a4)
                                         Temporal.Music.Score.+:+_a1
                                         (let {
                                            w1 :: Temporal.Music.Pitch.Scale
                                            = ds1
                                                (Data.Array.Repa.Index.:.
                                                   @ (Data.Array.Repa.Index.Z
                                                      Data.Array.Repa.Index.:. GHC.Types.Int)
                                                   @ GHC.Types.Int
                                                   (Data.Array.Repa.Index.:.
                                                      @ Data.Array.Repa.Index.Z
                                                      @ GHC.Types.Int
                                                      Data.Array.Repa.Index.Z
                                                      ig)
                                                   ib)
                                          } in
                                          Temporal.Media.$fFunctorTList_$cfmap
                                            @ GHC.Types.Double
                                            @ (Temporal.Music.Note.Note a4)
                                            @ (Temporal.Music.Note.Note a4)
                                            (\ x :: Temporal.Music.Note.Note a4 ->
                                             case x of wild13 { Temporal.Music.Note.Note ds9 ds10 ds11 ->
                                             Temporal.Music.Note.Note
                                               @ a4
                                               ds9
                                               (case ds10 of wild14 { Temporal.Music.Pitch.Pitch ds12 ds13 ds14 ds15 ->
                                                Temporal.Music.Pitch.Pitch w1 ds13 ds14 ds15 })
                                               ds11 })
                                            (Temporal.Media.Single
                                               @ GHC.Types.Double
                                               @ (Temporal.Music.Note.Note a4)
                                               (Temporal.Music.Note.Note
                                                  @ a4
                                                  Temporal.Music.Volume.$fDefaultVolume_$cdef
                                                  (Temporal.Music.Pitch.Pitch
                                                     Temporal.Music.Pitch.$fDefaultPitch_$cdef1
                                                     Data.Default.Instances.Base.$fDefaultCDouble_$cdef1
                                                     Data.Default.Instances.Base.$fDefaultInt_$cdef
                                                     a5)
                                                  (GHC.Base.Nothing @ a4))))) } } } } } } } } }))
                   `cast`
                 (Sub (Sym (Data.Array.Repa.Repr.Delayed.TFCo:R:ArrayDsha[0]
                                <GHC.Base.Maybe
                                   (Temporal.Music.Score.Score (Temporal.Music.Note.Note a4))>_N
                                <Data.Array.Repa.Index.DIM3>_N))) } } } } }) -}
65e8869870ff233af0deb8488e3e555f
  stimulusChords_w :: Temporal.Music.Pitch.Interval
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 2.0) -}
69e4e78e33e6bc08f36d5b15a2bc9b49
  stimulusChords_w1 :: [Temporal.Music.Pitch.Interval]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Temporal.Music.Pitch.Interval
                   Lib.calibrationStimulus2
                   Lib.stimulusChords26) -}
c0f6ed55184b3d360acb9156b8a6ab71
  stimulusFileNames ::
    Data.Array.Repa.Base.Array
      Data.Array.Repa.Repr.Delayed.D
      Data.Array.Repa.Index.DIM3
      GHC.Base.String
"SPEC/Lib $fEq:. @ Z @ Int" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                      Data.Array.Repa.Index.Z
                                            $dEq1 :: GHC.Classes.Eq GHC.Types.Int
  Data.Array.Repa.Index.$fEq:. @ Data.Array.Repa.Index.Z
                               @ GHC.Types.Int
                               $dEq
                               $dEq1
  = Lib.$s$fEq:.
"SPEC/Lib $fShape:. @ Z" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                   (Data.Array.Repa.Index.Z
                                                    Data.Array.Repa.Index.:. GHC.Types.Int)
                                         $dShape :: Data.Array.Repa.Shape.Shape
                                                      Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:. @ Data.Array.Repa.Index.Z
                                  $dEq
                                  $dShape
  = Lib.$s$fShape:.
"SPEC/Lib $fShape:._$caddDim @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                       (Data.Array.Repa.Index.Z
                                                        Data.Array.Repa.Index.:. GHC.Types.Int)
                                             $dShape :: Data.Array.Repa.Shape.Shape
                                                          Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$caddDim @ Data.Array.Repa.Index.Z
                                           $dEq
                                           $dShape
  = Lib.$s$fShape:._$caddDim
"SPEC/Lib $fShape:._$cdeepSeq @ Z" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                             (Data.Array.Repa.Index.Z
                                                              Data.Array.Repa.Index.:. GHC.Types.Int)
                                                   $dShape :: Data.Array.Repa.Shape.Shape
                                                                Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$cdeepSeq @ Data.Array.Repa.Index.Z
                                            $dEq
                                            $dShape
  = Lib.$s$fShape:._$s$fShape:._$cdeepSeq
"SPEC/Lib $fShape:._$cfromIndex @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                          (Data.Array.Repa.Index.Z
                                                           Data.Array.Repa.Index.:. GHC.Types.Int)
                                                $dShape :: Data.Array.Repa.Shape.Shape
                                                             Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$cfromIndex @ Data.Array.Repa.Index.Z
                                              $dEq
                                              $dShape
  = Lib.$s$fShape:._$cfromIndex
"SPEC/Lib $fShape:._$cinShapeRange @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                             (Data.Array.Repa.Index.Z
                                                              Data.Array.Repa.Index.:. GHC.Types.Int)
                                                   $dShape :: Data.Array.Repa.Shape.Shape
                                                                Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$cinShapeRange @ Data.Array.Repa.Index.Z
                                                 $dEq
                                                 $dShape
  = Lib.$s$fShape:._$cinShapeRange
"SPEC/Lib $fShape:._$cintersectDim @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                             (Data.Array.Repa.Index.Z
                                                              Data.Array.Repa.Index.:. GHC.Types.Int)
                                                   $dShape :: Data.Array.Repa.Shape.Shape
                                                                Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$cintersectDim @ Data.Array.Repa.Index.Z
                                                 $dEq
                                                 $dShape
  = Lib.$s$fShape:._$cintersectDim
"SPEC/Lib $fShape:._$crank @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                     (Data.Array.Repa.Index.Z
                                                      Data.Array.Repa.Index.:. GHC.Types.Int)
                                           $dShape :: Data.Array.Repa.Shape.Shape
                                                        Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$crank @ Data.Array.Repa.Index.Z
                                         $dEq
                                         $dShape
  = Lib.$s$fShape:._$crank
"SPEC/Lib $fShape:._$csize @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                     (Data.Array.Repa.Index.Z
                                                      Data.Array.Repa.Index.:. GHC.Types.Int)
                                           $dShape :: Data.Array.Repa.Shape.Shape
                                                        Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$csize @ Data.Array.Repa.Index.Z
                                         $dEq
                                         $dShape
  = Lib.$s$fShape:._$csize
"SPEC/Lib $fShape:._$csizeIsValid @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                            (Data.Array.Repa.Index.Z
                                                             Data.Array.Repa.Index.:. GHC.Types.Int)
                                                  $dShape :: Data.Array.Repa.Shape.Shape
                                                               Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$csizeIsValid @ Data.Array.Repa.Index.Z
                                                $dEq
                                                $dShape
  = Lib.$s$fShape:._$csizeIsValid
"SPEC/Lib $fShape:._$ctoIndex @ Z" [1] forall $dEq :: GHC.Classes.Eq
                                                        (Data.Array.Repa.Index.Z
                                                         Data.Array.Repa.Index.:. GHC.Types.Int)
                                              $dShape :: Data.Array.Repa.Shape.Shape
                                                           Data.Array.Repa.Index.Z
  Data.Array.Repa.Index.$fShape:._$ctoIndex @ Data.Array.Repa.Index.Z
                                            $dEq
                                            $dShape
  = Lib.$s$fShape:._$ctoIndex
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

