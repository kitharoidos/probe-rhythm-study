
==================== FINAL INTERFACE ====================
2016-12-26 17:44:57.421303 UTC

interface main@main:Main 7103
  interface hash: 60b4cb61ea14ca1bbbacbbad5b3a8380
  ABI hash: fd0f5a1cfbc4339e05a1d5018fb35b8c
  export-list hash: 44eb90ab4aac653fb5e4f8ded1435a52
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f2af004f6affd311b6b4eb630e1600c7
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: Boolean-0.2.3@Boole_AQw96tEQbS14h4CU6tCStK
                      QuickCheck-2.8.2@Quick_6TxL5Cx3o2p0HsyT59KWiD
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      colour-2.3.3@colou_4tkGkumXZDK9tS5HCSa7Y0
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      csound-expression-typed-0.0.9.3@csoun_30GzPkbwq4z8DveTcfaCNZ
                      csound-expression-dynamic-0.1.6@csoun_3DjXDAELwER3zAMHZGMbsp
                      csound-sampler-0.0.6.5@csoun_5PQBehliRREIml1BuUB3jI
                      csound-expression-opcodes-0.0.3.1@csoun_FB7csGHVu7NCj0H3l7PA5p
                      csound-catalog-0.5.0@csoun_Ga4q4r4aWcOFbH21APDvuI
                      csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J
                      data-default-instances-base-0.1.0@datad_2INJRDvgZ4jDHH2QJIQkcK
                      data-default-0.5.3@datad_91CrM49egJd0Gm9c4dN01A
                      data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk
                      data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ
                      data-fix-cse-0.0.2@dataf_9OU4S4aXn8p7PJ6lHH74jm
                      data-fix-0.0.3@dataf_GQW30SgTqCHK8c9qmpbLGb
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui
                      double-conversion-2.0.1.0@doubl_9d4SFE0Uwt89cnl39kvRqX
                      formatting-6.2.2@forma_8aodSjW5eMN2lAZ4gdtUVi ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I integer-gmp-1.0.0.0
                      old-locale-1.0.0.7@oldlo_7h2Gx6mVPJ5Gheca8j9Mpe
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      probe-rhythm-stimuli-0.1.0.0@probe_GhpfxM5TCHW90UKWP1Xo7K
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou
                      scientific-0.3.4.9@scien_1WVNjGUftkQ9QzH4DOM2n1
                      temporal-media-0.6.1@tempo_761SzttxqBd2KI5nkyi311
                      temporal-music-notation-0.4.1@tempo_BNMZo3KS1hoKUMM4l1A0ov
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      text-format-0.3.1.1@textf_AVjaAeJErF76GdHnr7DxnV
                      tf-random-0.5@tfran_1eLmkn3WUnC8NZpPuDLGKF
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      wl-pprint-1.2@wlppr_BfLVsbunhxqAoD0kHyfMec
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         colour-2.3.3@colou_4tkGkumXZDK9tS5HCSa7Y0:Data.Colour
         csound-expression-typed-0.0.9.3@csoun_30GzPkbwq4z8DveTcfaCNZ:Csound.Typed.Types.Tuple
         csound-expression-dynamic-0.1.6@csoun_3DjXDAELwER3zAMHZGMbsp:Csound.Dynamic.Build.Logic
         csound-expression-dynamic-0.1.6@csoun_3DjXDAELwER3zAMHZGMbsp:Csound.Dynamic.Build.Numeric
         csound-sampler-0.0.6.5@csoun_5PQBehliRREIml1BuUB3jI:Csound.Sam
         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Air.Live
         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Control.Gui
         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.SigSpace
         data-default-instances-base-0.1.0@datad_2INJRDvgZ4jDHH2QJIQkcK:Data.Default.Instances.Base
         data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk:Data.Default.Instances.DList
         data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY:Data.Default.Instances.Containers
         data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ:Data.Default.Instances.OldLocale
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Arbitrary
         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Operators.Reduction
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: Boolean-0.2.3@Boole_AQw96tEQbS14h4CU6tCStK:Data.Boolean
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         csound-expression-typed-0.0.9.3@csoun_30GzPkbwq4z8DveTcfaCNZ:Csound.Typed.Control.Sf2
                         csound-expression-typed-0.0.9.3@csoun_30GzPkbwq4z8DveTcfaCNZ:Csound.Typed.Types.Evt
                         csound-expression-typed-0.0.9.3@csoun_30GzPkbwq4z8DveTcfaCNZ:Csound.Typed.Types.Prim
                         csound-expression-typed-0.0.9.3@csoun_30GzPkbwq4z8DveTcfaCNZ:Csound.Typed.Types.Tuple
                         csound-expression-dynamic-0.1.6@csoun_3DjXDAELwER3zAMHZGMbsp:Csound.Dynamic.Build.Logic
                         csound-expression-dynamic-0.1.6@csoun_3DjXDAELwER3zAMHZGMbsp:Csound.Dynamic.Types.Exp
                         csound-sampler-0.0.6.5@csoun_5PQBehliRREIml1BuUB3jI:Csound.Sam
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Air.Envelope
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Air.ModArg
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Air.Seg
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Control.Gui
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Control.Overload.MidiInstr
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Control.Overload.Outs
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Control.Overload.SpecInstr
                         csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.SigSpace
                         data-fix-0.0.3@dataf_GQW30SgTqCHK8c9qmpbLGb:Data.Fix
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Operators.Mapping
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.ByteString
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Cursored
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Delayed
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.ForeignPtr
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.HintInterleave
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.HintSmall
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Partitioned
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Unboxed
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Undefined
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Repr.Vector
                         repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Slice
                         temporal-media-0.6.1@tempo_761SzttxqBd2KI5nkyi311:Temporal.Media
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
import  -/  base-4.8.2.0:Control.Monad 480c5067477275068c9b98be08410df9
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0899686bfc1d9ef72dff3de85e99862a
import  -/  csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.Base 1391ff3f0a8b4387853e5c9b8c961f44
import  -/  csound-expression-5.0.1@csoun_Ke3ADm4URu5L5OaT4TVC7J:Csound.IO 6df6bc3acbb167902e45ad57e390eb85
import  -/  formatting-6.2.2@forma_8aodSjW5eMN2lAZ4gdtUVi:Formatting 12022e37c2bced1eacf704906569e455
import  -/  formatting-6.2.2@forma_8aodSjW5eMN2lAZ4gdtUVi:Formatting.Formatters 4b7607d90305cac36e8393bbd3ade37b
import  -/  formatting-6.2.2@forma_8aodSjW5eMN2lAZ4gdtUVi:Formatting.Internal 1f66abda18c47de86214aae7d090768e
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  probe-rhythm-stimuli-0.1.0.0@probe_GhpfxM5TCHW90UKWP1Xo7K:Lib 3cd665f3bae143e408a2844e58d3a5b1
import  -/  random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL:System.Random d515be7800d601546639722a30f2fed4
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa 0d2b929203adefea46e338c8d5c0d0e3
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Base 812b961d0b9a43cec848ee4c7e0ccd95
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Operators.Mapping 18e3b03d104ed6d10371157ac47ae55b
import  -/  repa-3.4.1.1@repa_LF5dvoRGljlCRIQRtuaAou:Data.Array.Repa.Operators.Reduction c2229a29483d3318f9c1bf5f3209a583
import  -/  temporal-music-notation-0.4.1@tempo_BNMZo3KS1hoKUMM4l1A0ov:Temporal.Music 7a43de7b9ddfa5e8f6d33f170dca5dc1
import  -/  temporal-music-notation-0.4.1@tempo_BNMZo3KS1hoKUMM4l1A0ov:Temporal.Music.Score 8402d6d0a2be510a43f288dcc6420690
d8adf32bfe26c96b2f680067317a526c
  $sfromString2 :: [GHC.Types.Char] ~ [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Char]
                   @~ <[GHC.Types.Char]>_N) -}
f725dae0ea5f328c9ea0922a4cbef2af
  $sfromString5 ::
    (GHC.Base.String -> GHC.Base.String)
    ~ (GHC.Base.String -> GHC.Base.String)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (GHC.Base.String -> GHC.Base.String)
                   @ (GHC.Base.String -> GHC.Base.String)
                   @~ <GHC.Base.String -> GHC.Base.String>_N) -}
365008755789e2c07f7dd499c9cb4006
  $wgo :: GHC.Prim.Int# -> [GHC.Base.String]
  {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
42fa7f3ce5dfde27176852c646f22269
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
d28cd39bb68aa2b5da4947b198d50e3b
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main6
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Main.main5
                        Main.main4
                        Main.main3
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case System.Random.theStdGen
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <System.Random.StdGen>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ System.Random.StdGen
                        var#
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case Csound.IO.writeSnd2
                        @ Csound.Typed.Types.Tuple.Sig2
                        Csound.IO.$fRenderCsd(,)2
                          `cast`
                        (Trans
                             (<Csound.Typed.GlobalState.Options.Options>_R
                              ->_R <Csound.Typed.Types.Tuple.Sig2>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0] <GHC.Base.String>_R))
                             (Sym (Csound.IO.NTCo:RenderCsd[0]
                                       <Csound.Typed.Types.Tuple.Sig2>_N)))
                        Csound.Typed.GlobalState.Options.$fDefaultOptions_$cdef
                        Main.main2
                        (Lib.calibrationStimulus ipv5)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 (# ipv6, GHC.Tuple.() #) } } } } }) -}
5c0e827b0b9d8a3ed85a42cbe69bdcd5
  main10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " s"#) -}
e5c57b6dc5f2c1aff9a1f97a36fb5e70
  main11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Total duration of stimuli: "#) -}
96df21bf33d6065dc1d1b840863f9338
  main12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
5258b35af2000ead9149d86593d509b1
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "calibration.wav"#) -}
79971d6bf42853ec981e9a0caa8c0944
  main3 :: [Csound.Typed.Types.Tuple.Sig2]
  {- Unfolding: (case Lib.stimuli
                        `cast`
                      (Sub (Data.Array.Repa.Repr.Delayed.TFCo:R:ArrayDsha[0]
                                <(Csound.Typed.Types.Prim.Sig, Csound.Typed.Types.Prim.Sig)>_N
                                <Data.Array.Repa.Index.DIM3>_N)) of wild { Data.Array.Repa.Repr.Delayed.ADelayed sh1 ds1 ->
                 case sh1 of wild1 { Data.Array.Repa.Index.:. sh2 n ->
                 case sh2 of wild2 { Data.Array.Repa.Index.:. sh3 n1 ->
                 case sh3 of wild3 { Data.Array.Repa.Index.:. sh4 n2 ->
                 case n2 of wild4 { GHC.Types.I# y ->
                 case n1 of wild5 { GHC.Types.I# y1 ->
                 case n of wild6 { GHC.Types.I# y2 ->
                 let {
                   a4 :: GHC.Prim.Int# = GHC.Prim.*# (GHC.Prim.*# y y1) y2
                 } in
                 letrec {
                   $wgo1 :: GHC.Prim.Int# -> [Csound.Typed.Types.Tuple.Sig2]
                     {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
                   = \ ww :: GHC.Prim.Int# ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.==# ww a4) of wild7 {
                       GHC.Types.False
                       -> GHC.Types.:
                            @ Csound.Typed.Types.Tuple.Sig2
                            (ds1
                               (case GHC.Prim.quotInt# ww y2 of wild8 { DEFAULT ->
                                case GHC.Prim.quotInt# wild8 y1 of wild9 { DEFAULT ->
                                case GHC.Prim.remInt# wild8 y1 of wild10 { DEFAULT ->
                                case GHC.Prim.remInt# ww y2 of wild11 { DEFAULT ->
                                Data.Array.Repa.Index.:.
                                  @ (Data.Array.Repa.Index.DIM1
                                     Data.Array.Repa.Index.:. GHC.Types.Int)
                                  @ GHC.Types.Int
                                  (Data.Array.Repa.Index.:.
                                     @ (Data.Array.Repa.Index.DIM0
                                        Data.Array.Repa.Index.:. GHC.Types.Int)
                                     @ GHC.Types.Int
                                     (Data.Array.Repa.Index.:.
                                        @ Data.Array.Repa.Index.Z
                                        @ GHC.Types.Int
                                        Data.Array.Repa.Index.Z
                                        (GHC.Types.I# wild9))
                                     (GHC.Types.I# wild10))
                                  (GHC.Types.I# wild11) } } } }))
                            ($wgo1 (GHC.Prim.+# ww 1))
                       GHC.Types.True -> GHC.Types.[] @ Csound.Typed.Types.Tuple.Sig2 }
                 } in
                 $wgo1 0 } } } } } } }) -}
72dfefe0c230d633e3b172927fb36ca4
  main4 :: [GHC.Base.String]
  {- Unfolding: (Main.$wgo 0) -}
4be1f2563f50a12d99bca52ae36390bc
  main5 ::
    [GHC.Base.String]
    -> [Csound.Typed.Types.Tuple.Sig2]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,1*U><L,1*U><L,U> -}
61c6f2dfe0d8eaab3022e24a4d6f4e4b
  main6 :: GHC.Base.String
  {- Unfolding: (Main.main8 Main.main7) -}
29c51467635bf83e3692fc42b823b5ba
  main7 :: GHC.Base.String
  {- Unfolding: (case (Lib.stimulusChords @ GHC.Prim.Any)
                        `cast`
                      (Sub (Data.Array.Repa.Repr.Delayed.TFCo:R:ArrayDsha[0]
                                <Temporal.Media.Track
                                   GHC.Types.Double (Temporal.Music.Note.Note GHC.Prim.Any)>_N
                                <Data.Array.Repa.Index.DIM3>_N)) of wild { Data.Array.Repa.Repr.Delayed.ADelayed sh1 ds1 ->
                 case sh1 of wild1 { Data.Array.Repa.Index.:. sh2 n ->
                 case sh2 of wild2 { Data.Array.Repa.Index.:. sh3 n1 ->
                 case sh3 of wild3 { Data.Array.Repa.Index.:. sh4 n2 ->
                 case n2 of wild4 { GHC.Types.I# y ->
                 case n1 of wild5 { GHC.Types.I# y1 ->
                 case n of wild6 { GHC.Types.I# y2 ->
                 let {
                   f :: GHC.Prim.Int# -> GHC.Prim.Double#
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ i :: GHC.Prim.Int# ->
                     case ds1
                            (case GHC.Prim.quotInt# i y2 of wild7 { DEFAULT ->
                             case GHC.Prim.quotInt# wild7 y1 of wild8 { DEFAULT ->
                             case GHC.Prim.remInt# wild7 y1 of wild9 { DEFAULT ->
                             case GHC.Prim.remInt# i y2 of wild10 { DEFAULT ->
                             let {
                               x :: GHC.Prim.Int#
                               = GHC.Prim.+#
                                   (GHC.Prim.*# (GHC.Prim.+# (GHC.Prim.*# wild8 y1) wild9) y2)
                                   wild10
                             } in
                             case GHC.Prim.quotInt# x y2 of wild11 { DEFAULT ->
                             case GHC.Prim.quotInt# wild11 y1 of wild12 { DEFAULT ->
                             case GHC.Prim.remInt# wild11 y1 of wild13 { DEFAULT ->
                             case GHC.Prim.remInt# x y2 of wild14 { DEFAULT ->
                             let {
                               x1 :: GHC.Prim.Int#
                               = GHC.Prim.+#
                                   (GHC.Prim.*# (GHC.Prim.+# (GHC.Prim.*# wild12 y1) wild13) y2)
                                   wild14
                             } in
                             case GHC.Prim.quotInt# x1 y2 of wild15 { DEFAULT ->
                             case GHC.Prim.quotInt# wild15 y1 of wild16 { DEFAULT ->
                             case GHC.Prim.remInt# wild15 y1 of wild17 { DEFAULT ->
                             case GHC.Prim.remInt# x1 y2 of wild18 { DEFAULT ->
                             Data.Array.Repa.Index.:.
                               @ (Data.Array.Repa.Index.DIM1
                                  Data.Array.Repa.Index.:. GHC.Types.Int)
                               @ GHC.Types.Int
                               (Data.Array.Repa.Index.:.
                                  @ (Data.Array.Repa.Index.DIM0
                                     Data.Array.Repa.Index.:. GHC.Types.Int)
                                  @ GHC.Types.Int
                                  (Data.Array.Repa.Index.:.
                                     @ Data.Array.Repa.Index.Z
                                     @ GHC.Types.Int
                                     Data.Array.Repa.Index.Z
                                     (GHC.Types.I# wild16))
                                  (GHC.Types.I# wild17))
                               (GHC.Types.I#
                                  wild18) } } } } } } } } } } } }) of wild7 { Temporal.Media.Track d ds2 ->
                     case d of wild8 { GHC.Types.D# d1 -> d1 } }
                 } in
                 let {
                   end :: GHC.Prim.Int# = GHC.Prim.*# (GHC.Prim.*# y y1) y2
                 } in
                 letrec {
                   iter :: GHC.Prim.Int# -> GHC.Prim.Double# -> GHC.Prim.Double#
                     {- Arity: 2, Strictness: <L,U><L,U>, Inline: INLINE (sat-args=2),
                        Unfolding(loop-breaker): InlineRule (2, False, False)
                                                 (\ i :: GHC.Prim.Int# z :: GHC.Prim.Double# ->
                                                  case GHC.Prim.>=# i end of ds {
                                                    DEFAULT
                                                    -> case f i of wild7 { DEFAULT ->
                                                       iter
                                                         (GHC.Prim.+# i 1)
                                                         (GHC.Prim.+## z wild7) }
                                                    1 -> z }) -}
                   = \ i :: GHC.Prim.Int# z :: GHC.Prim.Double# ->
                     case GHC.Prim.>=# i end of ds {
                       DEFAULT
                       -> case f i of wild7 { DEFAULT ->
                          iter (GHC.Prim.+# i 1) (GHC.Prim.+## z wild7) }
                       1 -> z }
                 } in
                 case iter 0 0.0 of wild7 { DEFAULT ->
                 GHC.Float.$w$sshowSignedFloat
                   GHC.Float.$fShowDouble_$sshowFloat
                   GHC.Show.shows18
                   wild7
                   (GHC.Types.[] @ GHC.Types.Char) } } } } } } } }) -}
98d0d9eed98af148281ca5d80ff15316
  main8 :: GHC.Base.String -> GHC.Base.String
  {- Unfolding: (Formatting.Internal.$wa
                   @ (GHC.Base.String -> GHC.Base.String)
                   @ (GHC.Base.String -> GHC.Base.String)
                   Main.$sfromString5
                   Main.main11
                   Main.main9) -}
5526ed745b7e4fbb31f66fbad08dacee
  main9 ::
    Data.Text.Internal.Builder.Builder
    -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ a4 :: Data.Text.Internal.Builder.Builder[OneShot]
                   eta :: GHC.Base.String ->
                 Formatting.Internal.$wa
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Char]
                   Main.$sfromString2
                   Main.main10
                   (\ a5 :: Data.Text.Internal.Builder.Builder[OneShot] ->
                    case Data.Text.Internal.Builder.$wtoLazyTextWith
                           112
                           (\ @ s
                              eta1 :: Data.Text.Internal.Builder.Buffer s
                                      -> GHC.ST.ST s [Data.Text.Internal.Text][OneShot] ->
                            a4 `cast` (Data.Text.Internal.Builder.NTCo:Builder[0])
                              @ s
                              (let {
                                 k :: Data.Text.Internal.Builder.Buffer s
                                      -> GHC.ST.ST s [Data.Text.Internal.Text]
                                 = a5 `cast` (Data.Text.Internal.Builder.NTCo:Builder[0]) @ s eta1
                               } in
                               letrec {
                                 $wa :: GHC.Prim.MutableByteArray# s
                                        -> GHC.Prim.Int#
                                        -> GHC.Prim.Int#
                                        -> GHC.Prim.Int#
                                        -> [GHC.Types.Char]
                                        -> GHC.Prim.State# s
                                        -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
                                   {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U>,
                                      Inline: [0] -}
                                 = \ ww :: GHC.Prim.MutableByteArray# s
                                     ww1 :: GHC.Prim.Int#
                                     ww2 :: GHC.Prim.Int#
                                     ww3 :: GHC.Prim.Int#
                                     w :: [GHC.Types.Char]
                                     w1 :: GHC.Prim.State# s[OneShot] ->
                                   case w of wild1 {
                                     []
                                     -> (k (Data.Text.Internal.Builder.Buffer @ s ww ww1 ww2 ww3))
                                          `cast`
                                        (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                                          w1
                                     : ipv4 ipv5
                                     -> case GHC.Prim.tagToEnum#
                                               @ GHC.Types.Bool
                                               (GHC.Prim.<=# ww3 1) of wild2 {
                                          GHC.Types.False
                                          -> case ipv4 of wild3 { GHC.Types.C# c# ->
                                             let {
                                               x :: GHC.Prim.Int# = GHC.Prim.ord# c#
                                             } in
                                             case GHC.Prim.tagToEnum#
                                                    @ GHC.Types.Bool
                                                    (GHC.Prim.<# x 65536) of wild4 {
                                               GHC.Types.False
                                               -> let {
                                                    i# :: GHC.Prim.Int# = GHC.Prim.+# ww1 ww2
                                                  } in
                                                  let {
                                                    x# :: GHC.Prim.Int# = GHC.Prim.-# x 65536
                                                  } in
                                                  case GHC.Prim.writeWord16Array#
                                                         @ s
                                                         ww
                                                         i#
                                                         (GHC.Prim.narrow16Word#
                                                            (GHC.Prim.int2Word#
                                                               (GHC.Prim.+#
                                                                  (GHC.Prim.uncheckedIShiftRA#
                                                                     x#
                                                                     10)
                                                                  55296)))
                                                         w1 of s2# { DEFAULT ->
                                                  case GHC.Prim.writeWord16Array#
                                                         @ s
                                                         ww
                                                         (GHC.Prim.+# i# 1)
                                                         (GHC.Prim.narrow16Word#
                                                            (GHC.Prim.int2Word#
                                                               (GHC.Prim.+#
                                                                  (GHC.Prim.andI# x# 1023)
                                                                  56320)))
                                                         s2# of s2#1 { DEFAULT ->
                                                  $wa
                                                    ww
                                                    ww1
                                                    (GHC.Prim.+# ww2 2)
                                                    (GHC.Prim.-# ww3 2)
                                                    ipv5
                                                    s2#1 } }
                                               GHC.Types.True
                                               -> case GHC.Prim.writeWord16Array#
                                                         @ s
                                                         ww
                                                         (GHC.Prim.+# ww1 ww2)
                                                         (GHC.Prim.narrow16Word#
                                                            (GHC.Prim.int2Word# x))
                                                         w1 of s2# { DEFAULT ->
                                                  $wa
                                                    ww
                                                    ww1
                                                    (GHC.Prim.+# ww2 1)
                                                    (GHC.Prim.-# ww3 1)
                                                    ipv5
                                                    s2# } } }
                                          GHC.Types.True
                                          -> case GHC.Prim.unsafeFreezeByteArray#
                                                    @ s
                                                    ww
                                                    w1 of ds2 { (#,#) ipv6 ipv7 ->
                                             case GHC.Prim.newByteArray#
                                                    @ s
                                                    224
                                                    ipv6 of ds3 { (#,#) ipv8 ipv9 ->
                                             (# ipv8,
                                                GHC.Types.:
                                                  @ Data.Text.Internal.Text
                                                  (Data.Text.Internal.Text ipv7 ww1 ww2)
                                                  (case $wa
                                                          ipv9
                                                          0
                                                          0
                                                          112
                                                          wild1
                                                          ipv8 of ds4 { (#,#) ipv10 ipv11 ->
                                                   ipv11 }) #) } } } }
                               } in
                               (\ ds :: Data.Text.Internal.Builder.Buffer s
                                  eta2 :: GHC.Prim.State# s[OneShot] ->
                                case ds of wild { Data.Text.Internal.Builder.Buffer dt4 dt5 dt6 dt7 ->
                                $wa dt4 dt5 dt6 dt7 eta eta2 })
                                 `cast`
                               (<Data.Text.Internal.Builder.Buffer s>_R
                                ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))))
                             `cast`
                           (Sym (Data.Text.Internal.Builder.NTCo:Builder[0])) of dt4 { DEFAULT ->
                    Formatting.Internal.$wunfold dt4 0 })) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

